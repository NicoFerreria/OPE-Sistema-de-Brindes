<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Syncfusion.Core.WinForms</name>
    </assembly>
    <members>
        <member name="T:Syncfusion.WinForms.Core.Enums.PopupCloseAction">
            <summary>
            Specifies the way in which a popup was closed.
            </summary>
            <remarks>
            This information is usually provided in a 
            PopupControlContainer's <see cref="E:Syncfusion.Windows.Core.PopupControlContainer.CloseUp"/> event.
            You can use it to determine, in some cases, whether or not
            to use the updated data in a popup.
            </remarks>
        </member>
        <member name="F:Syncfusion.WinForms.Core.Enums.PopupCloseAction.Done">
            <summary>
            The user wants the changes made in the popup to be applied.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Core.Enums.PopupCloseAction.Canceled">
            <summary>
            The user canceled the popup and expects the changes, if any, to be ignored.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Core.Enums.PopupCloseAction.Deactivated">
            <summary>
            The popup was deactivated due to the user clicking in some
            other window, a different application getting focus, etc.
            </summary>
        </member>
        <member name="T:Syncfusion.WinForms.Core.Enums.PopupRelativeAlignment">
            <summary>
            Specifies the relative alignment of a popup child about its parent.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Core.Enums.PopupRelativeAlignment.TopLeft">
            <summary>
            The child will be aligned to the parent's top-left corner
            and drawn upwards and to the right of the parent's left border.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Core.Enums.PopupRelativeAlignment.TopRight">
            <summary>
            The child will be aligned to the parent's top-right corner
            and drawn upwards and to the left of the parent's right border.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Core.Enums.PopupRelativeAlignment.RightTop">
            <summary>
            The child will be aligned to the parent's top-right corner
            and drawn downwards and to the right of the parent.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Core.Enums.PopupRelativeAlignment.RightBottom">
            <summary>
            The child will be aligned to the parent's bottom-right corner
            and drawn upwards and to the right of the parent.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Core.Enums.PopupRelativeAlignment.BottomLeft">
            <summary>
            The child will be aligned to the parent's bottom-left corner
            and drawn downwards and to the right of the parent's left border.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Core.Enums.PopupRelativeAlignment.BottomRight">
            <summary>
            The child will be aligned to the parent's bottom-right corner
            and drawn downwards and to the left of the parent's right border.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Core.Enums.PopupRelativeAlignment.LeftTop">
            <summary>
            The child will be aligned to the parent's top-left corner
            and drawn downwards and to the left of the parent.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Core.Enums.PopupRelativeAlignment.LeftBottom">
            <summary>
            The child will be aligned to the parent's bottom-left corner
            and drawn downwards and to the right of the parent.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Core.Enums.PopupRelativeAlignment.Center">
            <summary>
            Does not indicate any of the above alignments.
            </summary>
        </member>
        <member name="T:Syncfusion.WinForms.Core.PopupHostBase">
            <summary>
            The top level form-derived class that hosts a <see cref="P:Syncfusion.WinForms.Core.PopupHostBase.PopupControlContainer"/>
            when it is dropped-down.
            </summary>
            <remarks>
            <para>You will normally not have to use this class or refer to
            an instance of this class. An instance of this class will
            be automatically generated by the <see cref="P:Syncfusion.WinForms.Core.PopupHostBase.PopupControlContainer"/> which
            will then set this as its parent when <see cref="!:Syncfusion.Windows.Forms.PopupControlContainer.ShowPopup"/> is called on it.</para>
            <para>
            However, you can for example access an instance of this
            class from the PopupControlContainer and change certain properties.
            </para>
            <para>
            You can include a shadow in your popups by setting the NeedShadow property.
            </para>
            </remarks>
            <example>
            Take a look at PopupControlContainer.PopupHost property reference for an example
            on how to access and modify the PopupHost's properties during run-time.
            </example>
        </member>
        <member name="F:Syncfusion.WinForms.Core.PopupHostBase.showShadow">
            <summary>
            The boolean value.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Core.PopupHostBase.alignment">
            <summary>
            The alignment.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Core.PopupHostBase.aboutToShow">
            <summary>
            The boolean value.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Core.PopupHostBase.overlapBorderColor">
            <summary>
            The border color.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Core.PopupHostBase.borderGap">
            <summary>
            The border gap.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Core.PopupHostBase.popupControlContainer">
            <summary>
            Gets or sets the popup control container.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Core.PopupHostBase.ignoreWorkingArea">
            <summary>
            Ignore working area when menu begin popup.
            </summary>
        </member>
        <member name="M:Syncfusion.WinForms.Core.PopupHostBase.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.WinForms.Core.PopupHostBase"/> class.
            </summary>
        </member>
        <member name="M:Syncfusion.WinForms.Core.PopupHostBase.SuspendLayout">
            <summary>
            Suspend layout operation.
            </summary>
        </member>
        <member name="M:Syncfusion.WinForms.Core.PopupHostBase.ResumeLayout(System.Boolean)">
            <summary>
            Resume the layout operation.
            </summary>
            <param name="preformLayout">The boolean value.</param>
        </member>
        <member name="M:Syncfusion.WinForms.Core.PopupHostBase.IsShowing">
            <summary>
            Checks whether the popup is shown or not.
            </summary>
            <returns>Returns the boolean value.</returns>
        </member>
        <member name="M:Syncfusion.WinForms.Core.PopupHostBase.Show">
            <summary>
            Shows the popup.
            </summary>
        </member>
        <member name="M:Syncfusion.WinForms.Core.PopupHostBase.HidePopup">
            <summary>
            Hides the popup.
            </summary>
        </member>
        <member name="M:Syncfusion.WinForms.Core.PopupHostBase.ComputeLayout">
            <summary>
            Computes size and position of popup.
            </summary>
        </member>
        <member name="M:Syncfusion.WinForms.Core.PopupHostBase.WndProc(System.Windows.Forms.Message@)">
            <summary>
            Overridden. See <see cref="M:System.Windows.Forms.Control.WndProc"/>.
            </summary>
            <param name="m">The message.</param>
        </member>
        <member name="M:Syncfusion.WinForms.Core.PopupHostBase.DetachPopup">
            <summary>
            Releases the popup.
            </summary>
        </member>
        <member name="M:Syncfusion.WinForms.Core.PopupHostBase.AttachPopup">
            <summary>
            Attaches the popup.
            </summary>
        </member>
        <member name="M:Syncfusion.WinForms.Core.PopupHostBase.ComputeSize">
            <summary>
            Compute the size.
            </summary>
        </member>
        <member name="M:Syncfusion.WinForms.Core.PopupHostBase.ComputeControlLocation">
            <summary>
            Compute the control location.
            </summary>
        </member>
        <member name="M:Syncfusion.WinForms.Core.PopupHostBase.AdjustLocationForAlignment(System.Drawing.Point@,Syncfusion.WinForms.Core.Enums.PopupRelativeAlignment)">
            <summary>
            Adjust the location based on the alignment.
            </summary>
            <param name="loc">The location.</param>
            <param name="align">The alignment.</param>
        </member>
        <member name="M:Syncfusion.WinForms.Core.PopupHostBase.ComputeLocation">
            <summary>
            Compute the location.
            </summary>
        </member>
        <member name="M:Syncfusion.WinForms.Core.PopupHostBase.GetAdjustedLocation(System.Drawing.Point)">
            <summary>
            Get the adjusted location.
            </summary>
            <param name="loc">The location.</param>
            <returns>Returns the location.</returns>
        </member>
        <member name="M:Syncfusion.WinForms.Core.PopupHostBase.OnVisibleChanged(System.EventArgs)">
            <summary>
            Overridden. See <see cref="M:System.Windows.Forms.Control.OnVisibleChanged"/>.
            </summary>
            <param name="e">The event argument.</param>
        </member>
        <member name="M:Syncfusion.WinForms.Core.PopupHostBase.OnLocationChanged(System.EventArgs)">
            <summary>
            Occurs when location changed.
            </summary>
            <param name="e">The event arguments.</param>
        </member>
        <member name="M:Syncfusion.WinForms.Core.PopupHostBase.OnSizeChanged(System.EventArgs)">
            <summary>
            Overridden. See <see cref="M:System.Windows.Forms.Control.OnSizeChanged"/>.
            </summary>
            <param name="e">The event arguments</param>
        </member>
        <member name="M:Syncfusion.WinForms.Core.PopupHostBase.OnPaint(System.Windows.Forms.PaintEventArgs)">
            <summary>
            Overridden. See <see cref="M:System.Windows.Forms.Control.OnPaint"/>.
            </summary>
            <param name="e">The paint event argument.</param>
        </member>
        <member name="M:Syncfusion.WinForms.Core.PopupHostBase.UpdateVisibility">
            <summary>
            Updates popup host visibility and z-order.
            </summary>
        </member>
        <member name="M:Syncfusion.WinForms.Core.PopupHostBase.OnDeactivate(System.EventArgs)">
            <summary>
            Occurs when deactivate the host.
            </summary>
            <param name="e">The event arguments</param>
        </member>
        <member name="M:Syncfusion.WinForms.Core.PopupHostBase.GetIsMirrored">
            <summary>
            Checks the right to left mode.
            </summary>
            <returns>Return true if right to left mode.</returns>
        </member>
        <member name="M:Syncfusion.WinForms.Core.PopupHostBase.Dispose(System.Boolean)">
            <summary>
            Releases the unmanaged resources.
            </summary>
            <param name="disposing">The boolean value.</param>
        </member>
        <member name="M:Syncfusion.WinForms.Core.PopupHostBase.OnHandleCreated(System.EventArgs)">
            <summary>
            Occurs while handle is created.
            </summary>
            <param name="e">The event arguments</param>
        </member>
        <member name="M:Syncfusion.WinForms.Core.PopupHostBase.PumpPaintMessages">
            <summary>
            Necessary since CS_SAVEBITS for this top-level is not good-enough to ensure that the window
            underneath is refreshed. Important when navigating menu using keyboard.
            </summary>        
        </member>
        <member name="M:Syncfusion.WinForms.Core.PopupHostBase.InitializeComponent">
            <summary>
            Initialize the settings.
            </summary>
        </member>
        <member name="M:Syncfusion.WinForms.Core.PopupHostBase.AdjustPopupSize(System.Drawing.Point@)">
            <summary>
            Adjust the popup size based on the screen and popup size.
            </summary>
            <param name="location">The popup location.</param>
            <returns>True if size and location is adjusted. Otherwise false;</returns>
        </member>
        <member name="P:Syncfusion.WinForms.Core.PopupHostBase.ShowShadow">
            <summary>
            Gets or sets a value indicating whether a shadow should
            be drawn around the popup window.
            </summary>
            <value>True if a shadow is needed; False otherwise.</value>
        </member>
        <member name="P:Syncfusion.WinForms.Core.PopupHostBase.CurrentRelativeAlignment">
            <summary>
            Gets a <see cref="T:Syncfusion.WinForms.Core.Enums.PopupRelativeAlignment"/> value indicating
            the current alignment of the popup window.
            </summary>
            <value>
            A <see cref="T:Syncfusion.WinForms.Core.Enums.PopupRelativeAlignment"/> value.
            </value>
        </member>
        <member name="P:Syncfusion.WinForms.Core.PopupHostBase.OverlapBorderColor">
            <summary>
            Gets or sets the overlap border color with which this top-level form should be drawn.
            </summary>
            <value>A color value.</value>
            <remarks>
            <para>This color will be used by this form only when the <see cref="T:System.Windows.Forms.FormBorderStyle"/> is set to None.</para>
            <para>The form will draw a custom single-line border with this color and also draw
            the overlapped look, if overlapped borders are available.</para>
            </remarks>
        </member>
        <member name="P:Syncfusion.WinForms.Core.PopupHostBase.IgnoreWorkingArea">
            <summary>
            Gets or sets a value indicating whether to ignore working area when menu begin popup.
            </summary>
        </member>
        <member name="P:Syncfusion.WinForms.Core.PopupHostBase.Popup">
            <summary>
            Gets or sets the popup control.
            </summary>
        </member>
        <member name="P:Syncfusion.WinForms.Core.PopupHostBase.BorderGap">
            <summary>
            Gets or sets the border gap.
            </summary>
        </member>
        <member name="P:Syncfusion.WinForms.Core.PopupHostBase.PopupControl">
            <summary>
            Gets the popup control
            </summary>
        </member>
        <member name="P:Syncfusion.WinForms.Core.PopupHostBase.PopupControlContainer">
            <summary>
            Gets or sets the PopupControlContainer that this PopupHost
            will host.
            </summary>
            <value>
            An implementation of the <see cref="T:Syncfusion.WinForms.Core.Interfaces.IPopupHost"/> interface.
            </value>
        </member>
        <member name="P:Syncfusion.WinForms.Core.PopupHostBase.IsInitialized">
            <summary>
            Gets or sets a value indicating whether state of drop-down window.
            </summary>
        </member>
        <member name="P:Syncfusion.WinForms.Core.PopupHostBase.ChildControl">
            <summary>
            Gets or sets the embedded child control.
            </summary>
        </member>
        <member name="P:Syncfusion.WinForms.Core.PopupHostBase.LastSize">
            <summary>
            Gets or sets the last size of the window.
            </summary>
        </member>
        <member name="P:Syncfusion.WinForms.Core.PopupHostBase.CreateParams">
            <summary>
            Overrides the create parameters.
            </summary>
        </member>
        <member name="T:Syncfusion.WinForms.Core.PopupBase">
            <summary>
            Represents a class that provides the support to host any control.
            </summary>
        </member>
        <member name="T:Syncfusion.WinForms.Core.Interfaces.IPopupHost">
            <summary>
            Defines an interface that a <see cref="P:Syncfusion.WinForms.Core.Interfaces.IPopupHost.PopupHost"/> can take and parent itself to.
            </summary>
            <remarks>
            <para>
            <see cref="T:Syncfusion.WinForms.Core.PopupBase"/> provides a default implementation that should be useful for all
            practical purposes.
            </para>
            </remarks>
        </member>
        <member name="T:Syncfusion.WinForms.Core.Interfaces.IPopupChild">
            <summary>
            Defines a generic interface which when implemented will allow
            that object / control to participate in the popup framework.
            </summary>
            <remarks>
            This interface should be implemented by an object / control that 
            acts like a popup window and wants to participate in the popup framework.
            </remarks>
        </member>
        <member name="T:Syncfusion.WinForms.Core.Interfaces.IPopup">
            <summary>
            A generic interface for any control that wants to participate 
            in the Popup framework.
            </summary>
        </member>
        <member name="M:Syncfusion.WinForms.Core.Interfaces.IPopup.GetPopupParentControl">
            <summary>
            Returns the popup's control parent.
            </summary>
            <remarks>
            If such a control exists, then the Popup framework will use
            it in its popup activation logic.
            </remarks>
            <returns>The control.</returns>
        </member>
        <member name="M:Syncfusion.WinForms.Core.Interfaces.IPopup.IsRelatedControl(System.Windows.Forms.Control,System.Boolean)">
            <summary>
            Indicates whether a specified control is part of the
            popup hierarchy.
            </summary>
            <param name="control">A control instance.</param>
            <param name="askPopupParent">True indicates this query should
            be passed to the IPopupParent, if any; False indicates you 
            should not query the popup parent.</param>
            <returns>True if the control is part of the Popup hierarchy;
            False otherwise.</returns>
        </member>
        <member name="T:Syncfusion.WinForms.Core.Interfaces.IKeyboardMessage">
            <summary>
            Defines the interface for the keyboard operations.
            </summary>
        </member>
        <member name="M:Syncfusion.WinForms.Core.Interfaces.IKeyboardMessage.KeyboardMessage(System.Windows.Forms.Message@)">
            <summary>
            Handles the keyboard message.
            </summary>
            <param name="msg">The <see cref="T:System.Windows.Forms.Message"/> value.</param>
            <returns>Returns the boolean value.</returns>
        </member>
        <member name="T:Syncfusion.WinForms.Core.Interfaces.IMouseMoveMessage">
            <summary>
            Defines the interface for the mouse move operations.
            </summary>
        </member>
        <member name="M:Syncfusion.WinForms.Core.Interfaces.IMouseMoveMessage.MouseMoveMessage(System.Windows.Forms.Message@)">
            <summary>
            Handles the mouse message.
            </summary>
            <param name="msg">The <see cref="M:Syncfusion.WinForms.Core.Interfaces.IMouseMoveMessage.MouseMoveMessage(System.Windows.Forms.Message@)"/> value.</param>
            <returns>Returns the boolean value.</returns>
        </member>
        <member name="T:Syncfusion.WinForms.Core.Interfaces.IMouseHook">
            <summary>
            Defines the interface for the mouse hook process.
            </summary>
        </member>
        <member name="M:Syncfusion.WinForms.Core.Interfaces.IMouseHook.MouseHook(System.Int32,System.Drawing.Point,System.IntPtr,System.Int32,System.Int32)">
            <summary>
            Implement the mouse hook process.
            </summary>
            <param name="msg">The message.</param>
            <param name="point">The position.</param>
            <param name="hwnd">The control handle.</param>
            <param name="hitTestCode">The hit test code.</param>
            <param name="extraInfo">The additional information.</param>
            <returns>Returns the boolean.</returns>
        </member>
        <member name="T:Syncfusion.WinForms.Core.Interfaces.IKeyboardHook">
            <summary>
            Defines the interfaces for the keyboard process.
            </summary>
        </member>
        <member name="M:Syncfusion.WinForms.Core.Interfaces.IKeyboardHook.KeyboardHookProc(System.Int32,System.Int32)">
            <summary>
            The keyboard hook process used to handle the key board operations.
            </summary>
            <param name="wParam">The window parameter.</param>
            <param name="lParam">The integer contains the value.</param>
            <returns>Returns the b0olean value.</returns>
        </member>
        <member name="M:Syncfusion.WinForms.Core.Interfaces.IPopupChild.Hide(Syncfusion.WinForms.Core.Enums.PopupCloseAction)">
            <summary>
            Hides the popup window.
            </summary>
            <param name="popupCloseType">The PopupCloseType value that indicates
            the mode in which this popup should be closed.</param>
        </member>
        <member name="M:Syncfusion.WinForms.Core.Interfaces.IPopupChild.IsShowing">
            <summary>
            Indicates whether a popup is currently active / open.
            </summary>
            <returns>True if it is open; False otherwise.</returns>
        </member>
        <member name="P:Syncfusion.WinForms.Core.Interfaces.IPopupChild.PopupParent">
            <summary>
            Gets the <see cref="T:Syncfusion.WinForms.Core.Interfaces.IPopupParent"/> parent.
            </summary>
            <value>An instance of the <see cref="T:Syncfusion.WinForms.Core.Interfaces.IPopupParent"/> interface.</value>
            <remarks>
            The Popup framework can handle a hierarchy of popups (like
            in a menu) for which it requires each popup child to provide
            a reference to its popup parent.
            </remarks>
        </member>
        <member name="M:Syncfusion.WinForms.Core.Interfaces.IPopupHost.GetPreferredLocation(Syncfusion.WinForms.Core.Enums.PopupRelativeAlignment,Syncfusion.WinForms.Core.Enums.PopupRelativeAlignment@)">
            <summary>
            Provides the appropriate location to the popup given the alignment preferences.
            </summary>
            <remarks>
            <para>
            This method is usually called to determine whether the open popup should be closed
            due to some action in a different control. If this different control is a "related" control,
            the popup framework will not close the popup.
            </para>
            </remarks>
            <param name="prevRelativeAlignment">The previous alignment.</param>
            <param name="newRelativeAlignment">The new alignment.</param>
            <returns>Return the point.</returns>
        </member>
        <member name="P:Syncfusion.WinForms.Core.Interfaces.IPopupHost.PopupHost">
            <summary>
            Gets or sets the <see cref="P:Syncfusion.WinForms.Core.Interfaces.IPopupHost.PopupHost"/> this container is parented to.
            </summary>
            <value>
            An instance of the <see cref="P:Syncfusion.WinForms.Core.Interfaces.IPopupHost.PopupHost"/> class.
            </value>
            <remarks>
            If this is a control, you would set it to be a child of
            the <see cref="P:Syncfusion.WinForms.Core.Interfaces.IPopupHost.PopupHost"/> and position it appropriately in the set property.
            </remarks>
        </member>
        <member name="T:Syncfusion.WinForms.Core.Interfaces.IPopupParent">
            <summary>
            A generic interface that defines a popup parent, that will
            control the alignment of a popup, etc.
            </summary>
            <remarks><para>Any object / control that wants to act as a popup's parent
            and participate in the popup framework should implement this interface.</para>
            <para>Take a look at the PopupsInDepth sample under the Tools\Samples\Editors Package\PopupControlContainer\Advanced
            folder for an implementation of this interface.</para></remarks>
        </member>
        <member name="M:Syncfusion.WinForms.Core.Interfaces.IPopupParent.ChildClosing(Syncfusion.WinForms.Core.Interfaces.IPopupChild,Syncfusion.WinForms.Core.Enums.PopupCloseAction)">
            <summary>
            Will be called to indicate that the popup child was closed
            in the specified mode.
            </summary>
            <param name="childUI">The child that was closed.</param>
            <param name="popupCloseType">A <see cref="!:PopupCloseType"/> value.</param>
        </member>
        <member name="M:Syncfusion.WinForms.Core.Interfaces.IPopupParent.GetLocationForPopupAlignment(Syncfusion.WinForms.Core.Enums.PopupRelativeAlignment,Syncfusion.WinForms.Core.Enums.PopupRelativeAlignment@)">
            <summary>
            Returns the location for popup, given the preferred relative
            alignments.
            </summary>
            <remarks>
            <para>This method allows you to provide 8 different preferred positions for
            your popup, in any order.</para>
            <para>Different preferred positions are necessary because some positions
            may not be ideal for the popup as there may not be enough screen space
            for the popup when shown in that position.</para>
            <para>The popup will first call this method with previous Alignment set to
            <see cref="F:Syncfusion.WinForms.Core.Enums.PopupRelativeAlignment.Center"/>. You should then return a location and
            designate this location as one of the 8 positions in the <see cref="T:Syncfusion.WinForms.Core.Enums.PopupRelativeAlignment"/>
            enumeration using the newAlignment reference. </para>
            <para>The popup will then check if there is enough space in the screen
            to draw at this location. If not, it will call this method again with
            previous Alignment set to newAlignment from the previous call.</para>
            <para>
            This goes on until you return a location that the popup finds acceptable.
            However, if you run out of locations before the popup can find an acceptable location,
            then you should set newAlignment to <see cref="F:Syncfusion.WinForms.Core.Enums.PopupRelativeAlignment.Center"/>. The popup will then assume
            that you don't have any more positions to supply and do the best it can
            with the supplied location.
            </para>
            </remarks>
            <param name="prevAlignment">The previous alignment.</param>
            <param name="newAlignment">The new alignment designated for the returned location.</param>
            <returns>
            An ideal location for popup designated by one of the <see cref="T:Syncfusion.WinForms.Core.Enums.PopupRelativeAlignment"/> values in
            new Alignment. Or returns a Point.Empty and set newAlignment to <see cref="F:Syncfusion.WinForms.Core.Enums.PopupRelativeAlignment.Center"/>
            if you do not intend to provide multiple preferred locations.
            </returns>
        </member>
        <member name="M:Syncfusion.WinForms.Core.Interfaces.IPopupParent.GetBorderOverlapCue(Syncfusion.WinForms.Core.Enums.PopupRelativeAlignment)">
            <summary>
            Returns a line (defined by 2 points) in screen co-ordinates that indicates the
            border overlap between the child and parent.
            </summary>
            <param name="relativeAlignment">The preferred alignment selected using the
            <see cref="M:Syncfusion.WinForms.Core.Interfaces.IPopupParent.GetLocationForPopupAlignment(Syncfusion.WinForms.Core.Enums.PopupRelativeAlignment,Syncfusion.WinForms.Core.Enums.PopupRelativeAlignment@)"/> method.</param>
            <remarks>
            If a valid line is provided, the popup child in that
            area will be drawn in an overlap style.
            </remarks>
            <returns>
            An array of 2 points representing a line (in screen co-ordinates)
            where the overlap takes place. NULL if no overlap is desired.
            </returns>
        </member>
        <member name="P:Syncfusion.WinForms.Core.Interfaces.IPopupParent.IsRightToLeft">
            <summary>
            Gets a value indicating whether control's elements should be rendered right-to-left.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Core.PopupBase.inSetFocus">
            <summary>
            The boolean value.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Core.PopupBase.inOnPopup">
            <summary>
            The boolean value.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Core.PopupBase.parentControl">
            <summary>
            The parent control.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Core.PopupBase.popupParent">
            <summary>
            The popup parent.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Core.PopupBase.discreetLocation">
            <summary>
            The location.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Core.PopupBase.popupHost">
            <summary>
            The popup host.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Core.PopupBase.listener">
            <summary>
            The popup close request listener.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Core.PopupBase.mouseHooker">
            <summary>
            The mouse hooker.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Core.PopupBase.fakeFocus">
            <summary>
            The boolean value indicates the this contains the focus or not.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Core.PopupBase.ignoreDialogKey">
            <summary>
            The boolean indicates ignore the dialog key.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Core.PopupBase.ignoreKeys">
            <summary>
            The boolean value indicates the ignore the keys.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Core.PopupBase.ignoreMouseMessages">
            <summary>
            The boolean value indicates the ignore the mouse messages.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Core.PopupBase.currentPopupChild">
            <summary>
            The current popup child.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Core.PopupBase.needDisposeHost">
            <summary>
            The boolean value indicates the need to dispose or not.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Core.PopupBase.formSubclass">
            <summary>
            The form sub class.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Core.PopupBase.parentForm">
            <summary>
            The parent form.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Core.PopupBase.controlSize">
            <summary>
            Default size of the control
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Core.PopupBase.args">
            <summary>
            Shows the popup at the specified location.
            </summary>
            <param name="location">A point in screen coordinates.
            Can be Point.Empty.</param>
            <remarks>
            <para>A popup's position is determined as follows.</para>
            <para>First, if an <see cref="T:Syncfusion.WinForms.Core.Interfaces.IPopupParent"/> interface is associated (using
            the <see cref="P:Syncfusion.WinForms.Core.PopupBase.PopupParent"/> property), then it is queried for the preferred
            position. If there is no such interface, the location
            specified in the <see cref="M:Syncfusion.WinForms.Core.PopupBase.Show(System.Drawing.Point)"/> method call is used. If ShowPopup
            was called with Point.Empty, then the <see cref="P:Syncfusion.WinForms.Core.PopupBase.ParentControl"/>'s bounds are used
            to determine an appropriate position to drop-down.</para>
            <para>This will throw a <see cref="!:BeforePopup"/> followed by a <see cref="T:Syncfusion.WinForms.Core.PopupBase"/> event.</para>
            <para>Use <see cref="M:Syncfusion.WinForms.Core.PopupBase.Hide(Syncfusion.WinForms.Core.Enums.PopupCloseAction)"/> to hide the popup in code.</para>
            <para>
            When the popup is closed either programmatically or by the user,
            the <see cref="!:CloseUp"/> event will be thrown that will indicate
            whether the popup was closed or canceled.
            </para>
            </remarks>
        </member>
        <member name="F:Syncfusion.WinForms.Core.PopupBase.preventEventsForToolTip">
            <summary>
            The boolean value indicates the prevents the events for tool tip.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Core.PopupBase.showShadow">
            <summary>
            The boolean value indicates the shadow can show or not.
            </summary>
        </member>
        <member name="M:Syncfusion.WinForms.Core.PopupBase.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.WinForms.Core.PopupBase"/> class.
            </summary>
        </member>
        <member name="M:Syncfusion.WinForms.Core.PopupBase.#ctor(System.ComponentModel.IContainer)">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.WinForms.Core.PopupBase"/> class with a specified container.
            </summary>
            <param name="container">A <see cref="T:System.ComponentModel.IContainer"/> that represents the container of the <see cref="!:Syncfusion.Windows.Forms.PopupControlContainer"/>.</param>
            <remarks>
            <para>Containers are objects that encapsulate and track zero or more components. In this context, containment refers to logical containment, not visual containment. 
            You can use components and containers in a variety of scenarios, including scenarios that are both visual and not visual.</para>
            <para><bold>Note to Implementers:</bold>  To be a container, the class must implement the IContainer interface, which supports methods for adding, removing and retrieving components.</para>
            <para>Unlike other controls, a <see cref="!:Syncfusion.Windows.Forms.PopupControlContainer"/> is not a direct child of your form (though this is the case during design-time).
            This requires you to explicitly dispose of this control before the form gets destroyed.
            With this constructor override, the <see cref="!:Syncfusion.Windows.Forms.PopupControlContainer"/> automatically plugs itself into a form's
            default component-containment pattern (through the IContainer member) during design-time. If you create this class in code, then you have to set it up manually.</para>
            <para>The implementation simply adds the <see cref="!:Syncfusion.Windows.Forms.PopupControlContainer"/> instance into the container.</para>
            </remarks>
        </member>
        <member name="M:Syncfusion.WinForms.Core.PopupBase.IsShowing">
            <summary>
            Indicates whether the popup is currently dropped down.
            </summary>
            <returns>True indicates popup is dropped down; False otherwise.</returns>
        </member>
        <member name="M:Syncfusion.WinForms.Core.PopupBase.GetPreferredLocation(Syncfusion.WinForms.Core.Enums.PopupRelativeAlignment,Syncfusion.WinForms.Core.Enums.PopupRelativeAlignment@)">
            <summary>
            Gets preferred location.
            </summary>
            <param name="prevAlignment">The previous alignment</param>
            <param name="newAlignment">The new alignment.</param>
            <returns>Returns the preferred location.</returns>
        </member>
        <member name="M:Syncfusion.WinForms.Core.PopupBase.Show(System.Drawing.Point)">
            <summary>
            Shows the popup.
            </summary>
            <param name="location">The location.</param>
        </member>
        <member name="M:Syncfusion.WinForms.Core.PopupBase.Hide">
            <summary>
            Hides a popup that is open.
            </summary>
            <remarks>
            <para>This method will hide the popup with the <see cref="F:Syncfusion.WinForms.Core.Enums.PopupCloseAction.Canceled"/> mode.</para>
            </remarks>
        </member>
        <member name="M:Syncfusion.WinForms.Core.PopupBase.Hide(Syncfusion.WinForms.Core.Enums.PopupCloseAction)">
            <summary>
            Hides a popup with the specified <see cref="T:Syncfusion.WinForms.Core.Enums.PopupCloseAction"/> mode.
            </summary>
            <param name="popupCloseType">A PopupCloseType value.</param>
        </member>
        <member name="M:Syncfusion.WinForms.Core.PopupBase.IsRelatedControl(System.Windows.Forms.Control,System.Boolean)">
            <summary>
            Checks whether the control is a related control.
            </summary>
            <param name="control">The control</param>
            <param name="askPopupParent">The boolean value.</param>
            <returns>Returns true if control relates properly.</returns>
        </member>
        <member name="M:Syncfusion.WinForms.Core.PopupBase.Syncfusion#WinForms#Core#Interfaces#IMouseMoveMessage#MouseMoveMessage(System.Windows.Forms.Message@)">
            <summary>
            The mouse message.
            </summary>
            <param name="m">A message.</param>
            <returns>Returns the boolean value.</returns>
        </member>
        <member name="M:Syncfusion.WinForms.Core.PopupBase.Syncfusion#WinForms#Core#Interfaces#IMouseHook#MouseHook(System.Int32,System.Drawing.Point,System.IntPtr,System.Int32,System.Int32)">
            <summary>
            The mouse hook process.
            </summary>
            <param name="msg">A message.</param>
            <param name="point">The point.</param>
            <param name="hwnd">The handle.</param>
            <param name="hitTestCode">The hit test code</param>
            <param name="extraInfo">The extra information.</param>
            <returns>Returns the boolean value.</returns>
        </member>
        <member name="M:Syncfusion.WinForms.Core.PopupBase.Syncfusion#WinForms#Core#Interfaces#IKeyboardMessage#KeyboardMessage(System.Windows.Forms.Message@)">
            <summary>
            The keyboard message.
            </summary>
            <param name="m">A message.</param>
            <returns>Returns the boolean value.</returns>
        </member>
        <member name="M:Syncfusion.WinForms.Core.PopupBase.Syncfusion#WinForms#Core#Interfaces#IKeyboardHook#KeyboardHookProc(System.Int32,System.Int32)">
            <summary>
            The keyboard hook process.
            </summary>
            <param name="wParam">The window handle parameter.</param>
            <param name="lParam">The handle parameter.</param>
            <returns>Returns the process.</returns>
        </member>
        <member name="M:Syncfusion.WinForms.Core.PopupBase.Syncfusion#WinForms#Core#Interfaces#IPopupParent#GetLocationForPopupAlignment(Syncfusion.WinForms.Core.Enums.PopupRelativeAlignment,Syncfusion.WinForms.Core.Enums.PopupRelativeAlignment@)">
            <summary>
            Get the location for popup.
            </summary>
            <param name="prevAlignment">Previous alignment.</param>
            <param name="newAlignment">The new alignment.</param>
            <returns>Returns the points.</returns>
        </member>
        <member name="M:Syncfusion.WinForms.Core.PopupBase.Syncfusion#WinForms#Core#Interfaces#IPopupParent#GetBorderOverlapCue(Syncfusion.WinForms.Core.Enums.PopupRelativeAlignment)">
            <summary>
            Gets the border points
            </summary>
            <param name="relativeAlignment">The relative alignment.</param>
            <returns>Returns the points collection.</returns>
        </member>
        <member name="M:Syncfusion.WinForms.Core.PopupBase.Syncfusion#WinForms#Core#Interfaces#IPopupParent#ChildClosing(Syncfusion.WinForms.Core.Interfaces.IPopupChild,Syncfusion.WinForms.Core.Enums.PopupCloseAction)">
            <summary>
            Occurs while child closing occurs.
            </summary>
            <param name="childUI">The child.</param>
            <param name="popupCloseType">The popup close type.</param>
        </member>
        <member name="M:Syncfusion.WinForms.Core.PopupBase.Syncfusion#WinForms#Core#Interfaces#IPopup#GetPopupParentControl">
            <summary>
            Gets the popup parent control.
            </summary>
            <returns>Returns the popup parent control</returns>
        </member>
        <member name="M:Syncfusion.WinForms.Core.PopupBase.EnsurePopupHost">
            <summary>
            Ensures that the <see cref="P:Syncfusion.WinForms.Core.PopupBase.PopupHost"/> property returns a valid PopupHost.
            </summary>
            <remarks>
            <para>
            Normally the <see cref="P:Syncfusion.WinForms.Core.PopupBase.PopupHost"/> property will return a non-NULL value only when
            the popup was displayed at least once. Calling this method will ensure that the property
            returns a non-NULL value.
            </para>
            </remarks>
        </member>
        <member name="M:Syncfusion.WinForms.Core.PopupBase.IsInSetFocus">
            <summary>
            Specifies whether the control is in set focus.
            </summary>
            <returns>Returns the boolean value</returns>
        </member>
        <member name="M:Syncfusion.WinForms.Core.PopupBase.FocusParent">
            <summary>
            Sets focus on the popup parent control.
            </summary>
        </member>
        <member name="M:Syncfusion.WinForms.Core.PopupBase.FocusFirstVisibleParent">
            <summary>
            Focuses first visible parent.
            </summary>
        </member>
        <member name="M:Syncfusion.WinForms.Core.PopupBase.ConfirmDeactivate">
            <summary>
            This method is called from the BarManager class when the parent form is deactivated.
            It checks whether the user clicked inside a child control of this PopupControlContainer.
            If this is not the case (e.g. user clicked on another window on the desktop) then the popup gets hidden.
            </summary>
        </member>
        <member name="M:Syncfusion.WinForms.Core.PopupBase.WndProc(System.Windows.Forms.Message@)">
            <summary>
            Overridden. <see cref="M:System.Windows.Forms.Control.WndProc"/>.
            </summary>
            <param name="m">The message.</param>
        </member>
        <member name="M:Syncfusion.WinForms.Core.PopupBase.ProcessDialogKey(System.Windows.Forms.Keys)">
            <summary>
            Overridden. See <see cref="M:System.Windows.Forms.Control.ProcessDialogKey"/>.
            </summary>
            <param name="key">The key.</param>
            <returns>Returns the boolean.</returns>
        </member>
        <member name="M:Syncfusion.WinForms.Core.PopupBase.OnBeforePopup(System.ComponentModel.CancelEventArgs)">
            <summary>
            Raises the BeforePopup event.
            </summary>
            <param name="args">A CancelEventArgs that contains the event data.</param>
            <remarks>
            <para>The OnBeforePopup method also allows derived classes to handle the event
            without attaching a delegate. This is the preferred technique for
            handling the event in a derived class.</para>
            <para>Note to Inheritors:  When overriding OnBeforePopup in a derived
            class, be sure to call the base class's OnBeforePopup method so that
            registered delegates receive the event.</para>
            </remarks>
        </member>
        <member name="M:Syncfusion.WinForms.Core.PopupBase.OnCloseUp(Syncfusion.WinForms.Core.Enums.PopupCloseAction)">
            <summary>
            Raises the <see cref="!:CloseUp"/> event.
            </summary>
            <param name="popupCloseType">A <see cref="T:Syncfusion.WinForms.Core.Enums.PopupCloseAction"/>.</param>
            <remarks>
            <para>The OnCloseUp method also allows derived classes to handle the event
            without attaching a delegate. This is the preferred technique for
            handling the event in a derived class. </para>
            <para>Note to Inheritors:  When overriding OnCloseUp in a derived
            class, be sure to call the base class's OnCloseUp method so that
            registered delegates receive the event.</para>
            </remarks>
        </member>
        <member name="M:Syncfusion.WinForms.Core.PopupBase.OnPopup(System.EventArgs)">
            <summary>
            Raises the <see cref="T:Syncfusion.WinForms.Core.PopupBase"/> event.
            </summary>
            <param name="args">An EventArgs instance containing
            data pertaining to this event.</param>
            <remarks>
            <para>The OnPopup method also allows derived classes to handle the event
            without attaching a delegate. This is the preferred technique for
            handling the event in a derived class. </para>
            <para>Note to Inheritors:  When overriding OnPopup in a derived
            class, be sure to call the base class's OnPopup method so that
            registered delegates receive the event.</para>
            </remarks>
        </member>
        <member name="M:Syncfusion.WinForms.Core.PopupBase.Dispose(System.Boolean)">
            <summary>
            Releases the unmanaged resources.
            </summary>
            <param name="disposing">The boolean value.</param>
        </member>
        <member name="M:Syncfusion.WinForms.Core.PopupBase.CreatePopupHost">
            <summary>
            Creates a new popup host.
            </summary>
            <returns>Returns the popup host.</returns>
        </member>
        <member name="M:Syncfusion.WinForms.Core.PopupBase.ProcessMouseMessage(System.Windows.Forms.Control,System.Int32,System.IntPtr,System.IntPtr)">
            <summary>
            Process the mouse message.
            </summary>
            <param name="destination">The destination.</param>
            <param name="msg">The message.</param>
            <param name="lParam">The handle parameter.</param>
            <param name="wParam">The window parameter</param>
            <returns>Returns the boolean value.</returns>
        </member>
        <member name="M:Syncfusion.WinForms.Core.PopupBase.VeryifyMouseBasedDeactivation(System.Windows.Forms.Control,System.Int32)">
            <summary>
            Verify the mouse mouse based activation.
            </summary>
            <param name="destinationControl">The destination control.</param>
            <param name="msg">The message.</param>
        </member>
        <member name="M:Syncfusion.WinForms.Core.PopupBase.OnSizeChanged(System.EventArgs)">
            <summary>
            Occurs when size changed.</summary>
            <param name="e"> The event arguments.</param>   
        </member>
        <member name="M:Syncfusion.WinForms.Core.PopupBase.GetLocationForPopupAlignment(Syncfusion.WinForms.Core.Enums.PopupRelativeAlignment,Syncfusion.WinForms.Core.Enums.PopupRelativeAlignment@)">
            <summary>
            Get the location for popup.
            </summary>
            <param name="prevAlignment">Previous alignment</param>
            <param name="newAlignment">The new alignment.</param>
            <returns>returns the point.</returns>
        </member>
        <member name="M:Syncfusion.WinForms.Core.PopupBase.GetBorderOverlapCue(Syncfusion.WinForms.Core.Enums.PopupRelativeAlignment)">
            <summary>
            Get the border.
            </summary>
            <param name="relativeAlignment">The alignment.</param>
            <returns>Returns the points</returns>
        </member>
        <member name="M:Syncfusion.WinForms.Core.PopupBase.ChildClosing(Syncfusion.WinForms.Core.Interfaces.IPopupChild,Syncfusion.WinForms.Core.Enums.PopupCloseAction)">
            <summary>
            Occurs while child closing.
            </summary>
            <param name="childUI">The child.</param>
            <param name="popupCloseType">The popup type.</param>
        </member>
        <member name="M:Syncfusion.WinForms.Core.PopupBase.UpdateRightToLeftFromParentControl">
            <summary>
            Update the right to left mode.
            </summary>
        </member>
        <member name="M:Syncfusion.WinForms.Core.PopupBase.AttachDelegates">
            <summary>
            Attach the delegates.
            </summary>
        </member>
        <member name="M:Syncfusion.WinForms.Core.PopupBase.DetachDelegates">
            <summary>
            Releases the delegates.
            </summary>
        </member>
        <member name="M:Syncfusion.WinForms.Core.PopupBase.ParentControl_Disposed(System.Object,System.EventArgs)">
            <summary>
            Occurs when disposed the parent control.
            </summary>
            <param name="sender">The sender.</param>
            <param name="e">A event arguments.</param>
        </member>
        <member name="M:Syncfusion.WinForms.Core.PopupBase.ParentControl_RightToLeftChanged(System.Object,System.EventArgs)">
            <summary>
            Occurs when right to left mode of the parent control gets changed.
            </summary>
            <param name="sender">The sender.</param>
            <param name="e">A event arguments.</param>
        </member>
        <member name="M:Syncfusion.WinForms.Core.PopupBase.GetIsMirrored">
            <summary>
            Gets the boolean value indicating the right to left mode.
            </summary>
            <returns>Returns true if this is in right to left mode.</returns>
        </member>
        <member name="P:Syncfusion.WinForms.Core.PopupBase.DesignMode">
            <summary>
            Gets a value indicating whether the control is in design-mode.
            </summary>
        </member>
        <member name="P:Syncfusion.WinForms.Core.PopupBase.Style">
            <summary>
            Gets or sets the drop down style.
            </summary>
        </member>
        <member name="P:Syncfusion.WinForms.Core.PopupBase.PopupHost">
             <summary>
             Gets or sets a reference to the PopupHost that will be
             used to host this PopupControlContainer when dropped down.
             </summary>
             <value>The PopupHost object that will host this PopupControlContainer.</value>
             <remarks>
             <para>PopupHost is the top level form-based control that hosts
             this PopupControlContainer when dropped down.</para>
             <para>
             The PopupControlContainer usually creates a custom
             PopupHost when it is asked to drop down. However, you
             can provide your own PopupHost if you have a customized
             version.
             </para>
             <para>
             You can also get a reference to the <see cref="P:Syncfusion.WinForms.Core.PopupBase.PopupHost"/>
             that the PopupControlContainer uses by default and make
             changes to it. The PopupControlContainer creates a
             default PopupHost when there is no PopupHost supplied
             to it, but <see cref="M:Syncfusion.WinForms.Core.PopupBase.Show(System.Drawing.Point)"/> gets called to show the popup.
             Hence, the best place to get the default PopupHost
             associated with this PopupControlContainer is in the
             <see cref="!:BeforePopup"/> handler. Or call <see cref="M:Syncfusion.WinForms.Core.PopupBase.EnsurePopupHost"/> to
             create the default PopupHost if it is not yet created.
             </para>
             </remarks>
             <example>
             <para>The following example shows how to make the PopupHost's border style resizable to create a resizable popup.</para>
             <coderef file="\Tools\Editors Package\PopupControlContainer\PopupControlContainerDemo\CS\Form1.cs" name="Resizable Popup sample" lang="C#"><code lang="C#">
                     // The PopupControlContainer's BeforePopup event handler
                     private void popupControlContainer1_BeforePopup(object sender, System.ComponentModel.CancelEventArgs e)
                     {
                         // Create a Popup, that can be resized.
            
                         // Make the popup host's border style resizable.
                         this.popupControlContainer1.PopupHost.FormBorderStyle = FormBorderStyle.SizableToolWindow;
                         this.popupControlContainer1.PopupHost.BackColor = this.BackColor;
            
                         // Necessary to set the host's client size every time, especially since the
                         // popup's Dock style is set to DockStyle.Fill.
                         if(!(this.popupControlContainer1.PopupHost.Size.Width &gt;= 140))
                             this.popupControlContainer1.PopupHost.Size = new System.Drawing.Size(140, 150);
            
                         // So that the popup container will fill the entire popup host when resized.
                         this.popupControlContainer1.Dock = DockStyle.Fill;
                     }</code></coderef>
             <coderef file="\Tools\Editors Package\PopupControlContainer\PopupControlContainerDemo\VB\Form1.vb" name="Resizable Popup sample" lang="VB"><code lang="VB">
                    ' The PopupControlContainer's BeforePopup event handler
                    Private Sub popupControlContainer1_BeforePopup(ByVal sender As Object, ByVal e As CancelEventArgs)
            
                        ' Create a popup that can be resized.
                        ' Make the popup host's border style resizable.
                        Me.popupControlContainer1.PopupHost.FormBorderStyle = FormBorderStyle.SizableToolWindow
                        Me.popupControlContainer1.PopupHost.BackColor = Me.BackColor
                        ' Necessary to set the host's client size every time, especially since the
                        ' popup's dock style is set to DockStyle.Fill.
                        ' So that the popup container will fill the entire popup host when resized.
                        If Not ((Me.popupControlContainer1.PopupHost.Size.Width &gt;= 140)) Then
                            Me.popupControlContainer1.PopupHost.Size = New System.Drawing.Size(140, 150)
                        End If
                        Me.popupControlContainer1.Dock = DockStyle.Fill
            
                    End Sub</code></coderef>
             </example>
        </member>
        <member name="P:Syncfusion.WinForms.Core.PopupBase.ParentControl">
            <summary>
            Gets or sets the PopupControlContainer's control parent.
            </summary>
            <value>A control instance.</value>
            <remarks>
            <para>The Parent-Child relationship in this case is NOT similar
            to the one in the control hierarchy.</para>
            <para>
            When you specify a Parent Control via
            ParentControl and pass a Point.Empty location to
            ShowPopup, the popup location will be dynamically determined
            based on the ParentControl bounds and the screen area.</para>
            </remarks>
        </member>
        <member name="P:Syncfusion.WinForms.Core.PopupBase.PopupParent">
            <summary>
            Gets or sets the <see cref="T:Syncfusion.WinForms.Core.Interfaces.IPopupParent"/> parent.
            </summary>
            <value>An instance that implements <see cref="T:Syncfusion.WinForms.Core.Interfaces.IPopupParent"/>.</value>
            <remarks>
            <para>When you associate an IPopupParent interface with the PopupControlContainer
            you get even more control over the alignment and positioning
            of the Popup, (this you would
            do instead of the PopupControl based parenting).</para>
            <para>When you provide this interface, the alignment and
            positioning logic is delegated to this interface.</para>
            </remarks>
            <example>
            Take a look at our PopupsInDepth sample under the Tools/Samples/In Depth folder
            for sample usage.
            </example>
        </member>
        <member name="P:Syncfusion.WinForms.Core.PopupBase.ShowShadow">
            <summary>
            Gets or sets a value indicating whether a shadow should
            be drawn around the popup window.
            </summary>
            <value>True if a shadow is needed; False otherwise.</value>
        </member>
        <member name="P:Syncfusion.WinForms.Core.PopupBase.Syncfusion#WinForms#Core#Interfaces#IPopupParent#IsRightToLeft">
            <summary>
            Gets a value indicating whether the right to left mode.
            </summary>
        </member>
        <member name="P:Syncfusion.WinForms.Core.PopupBase.IgnoreMouseMessages">
            <summary>
            Gets or sets a value indicating whether to ignore all mouse messages.
            </summary>
            <value>True to ignore all mouse messages; False otherwise. Default is False.</value>
            <remarks>
            <para>When the popup is showing it will "swallow" all the mouse messages that are sent to
            controls not in the popup-hierarchy. When showing, the popup will also listen to
            mouse messages to determine if the popup should be closed (for mouse down
            outside the popup-hierarchy, for example).</para>
            <para>
            To prevent this behavior, set this property to True.</para>
            <para>When set to True, the popup will close only when you call
            the <see cref="M:Syncfusion.WinForms.Core.PopupBase.Hide(Syncfusion.WinForms.Core.Enums.PopupCloseAction)"/> method or when a new popup gets shown.</para>
            </remarks>
        </member>
        <member name="P:Syncfusion.WinForms.Core.PopupBase.IgnoreKeys">
            <summary>
            Gets or sets a value indicating whether to ignore all keys.
            </summary>
            <value>True to ignore all keys; False otherwise. Default is False.</value>
            <remarks>
            When the popup is showing, it will "swallow" all the WM_KEYDOWN and WM_CHAR
            messages. To prevent it, set this property to True.
            </remarks>
        </member>
        <member name="P:Syncfusion.WinForms.Core.PopupBase.CurrentPopupChild">
             <summary>
             Gets or sets the current popup child in the popup hierarchy.
             </summary>
             <value>An instance of <see cref="T:Syncfusion.WinForms.Core.Interfaces.IPopupChild"/> interface.</value>
             <remarks>When you want to show a parent-child hierarchy of popups,
             call this property on the parent popup before showing the child popup.
             </remarks>
             <example>
             For example:
             <code lang="C#">
             // While the parent PopupControlContainer is showing, you might want to show another child
             // PopupControlContainer. You can do so as follows:
             // Set up parent-child relationship.
             parentPopupControlContainer.CurrentPopupChild = childPopupControlContainer;
             childPopupControlContainer.PopupParent = parentPopupControlContainer;
            
             // Now show the child popup.
             childPopupControlContainer.ShowPopup();
             </code>
             <code lang="VB">
             ' While the parent PopupControlContainer is showing, you might want to show another child
            	' PopupControlContainer. You can do so as follows:
             ' Set up parent-child relationship
             parentPopupControlContainer.CurrentPopupChild = childPopupControlContainer
             childPopupControlContainer.PopupParent = parentPopupControlContainer
            
             ' Now show the child popup.
             childPopupControlContainer.ShowPopup()
             </code>
             </example>
        </member>
        <member name="P:Syncfusion.WinForms.Core.PopupBase.MouseHooker">
            <summary>
            Gets or sets the mouse hooker.
            </summary>
        </member>
        <member name="P:Syncfusion.WinForms.Core.PopupBase.DefaultSize">
            <summary>
            Gets the default size.
            </summary>
        </member>
        <member name="P:Syncfusion.WinForms.Core.PopupBase.DefaultMargin">
            <summary>
            The default margin.
            </summary>
        </member>
        <member name="T:Syncfusion.WinForms.Core.KeyboardProcHooker">
            <summary>
            Represents a class that contains the keyboard process handles.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Core.KeyboardProcHooker.thisProcessID">
            <summary>
            The process id.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Core.KeyboardProcHooker.client">
            <summary>
            The client.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Core.KeyboardProcHooker.handle">
            <summary>
            The handle.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Core.KeyboardProcHooker.hookDisable">
            <summary>
            The boolean indicates the hook can disable.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Core.KeyboardProcHooker.messageHookHandle">
            <summary>
            The mouse hook handle.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Core.KeyboardProcHooker.messageHookRoot">
            <summary>
            The mouse hook root.
            </summary>
        </member>
        <member name="M:Syncfusion.WinForms.Core.KeyboardProcHooker.#ctor(System.IntPtr,Syncfusion.WinForms.Core.Interfaces.IKeyboardHook)">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.WinForms.Core.KeyboardProcHooker"/> class.
            </summary>
            <param name="handle">The handle.</param>
            <param name="client">The client/</param>
        </member>
        <member name="M:Syncfusion.WinForms.Core.KeyboardProcHooker.Finalize">
            <summary>
            Finalizes an instance of the <see cref="T:Syncfusion.WinForms.Core.KeyboardProcHooker"/> class.
            </summary>
        </member>
        <member name="M:Syncfusion.WinForms.Core.KeyboardProcHooker.Dispose">
            <summary>
            Releases a unmanaged resources.
            </summary>
        </member>
        <member name="M:Syncfusion.WinForms.Core.KeyboardProcHooker.HookMessage">
            <summary>
            Hook the message.
            </summary>
        </member>
        <member name="M:Syncfusion.WinForms.Core.KeyboardProcHooker.MessageHookProc(System.Int32,System.Int32,System.Int32)">
            <summary>
                Hook process used for catch mouse messages.
            </summary>
            <param name="code">The code.</param>
            <param name="wParam">Window parameter.</param>
            <param name="lParam">The handle parameter.</param>
            <returns>Returns the pointer.</returns>
        </member>
        <member name="M:Syncfusion.WinForms.Core.KeyboardProcHooker.UnHookMessage">
            <summary>
            Unhook the message.
            </summary>
        </member>
        <member name="P:Syncfusion.WinForms.Core.KeyboardProcHooker.DisableMessageHook">
            <summary>
            Gets or sets a value indicating whether the hook message can be disabled.
            </summary>
        </member>
        <member name="P:Syncfusion.WinForms.Core.KeyboardProcHooker.HookMessages">
            <summary>
            Gets or sets a value indicating whether the hook message can be done.
            </summary>
        </member>
        <member name="T:Syncfusion.WinForms.Core.KeyboardProcHooker.MessageHookObject">
            <summary>
            Represents a class that contains the message hook object.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Core.KeyboardProcHooker.MessageHookObject.HC_ACTION">
            <summary>
            The action.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Core.KeyboardProcHooker.MessageHookObject.reference">
            <summary>
            The reference
            </summary>
        </member>
        <member name="M:Syncfusion.WinForms.Core.KeyboardProcHooker.MessageHookObject.#ctor(Syncfusion.WinForms.Core.KeyboardProcHooker)">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.WinForms.Core.KeyboardProcHooker.MessageHookObject"/> class.
            </summary>
            <param name="parent">The parent.</param>
        </member>
        <member name="M:Syncfusion.WinForms.Core.KeyboardProcHooker.MessageHookObject.Callback(System.Int32,System.Int32,System.Int32)">
            <summary>
            The callback message.
            </summary>
            <param name="code">The code.</param>
            <param name="wParam">Window parameter.</param>
            <param name="lParam">The handle parameter.</param>
            <returns>Returns the pointer.</returns>
        </member>
        <member name="T:Syncfusion.WinForms.Core.FormWindow">
            <summary>
            Represents a class that provides the customized window support.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Core.FormWindow.popupContainer">
            <summary>
            The popup container
            </summary>
        </member>
        <member name="M:Syncfusion.WinForms.Core.FormWindow.#ctor(Syncfusion.WinForms.Core.PopupBase)">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.WinForms.Core.FormWindow"/> class.
            </summary>
            <param name="popupContainer">The popup container</param>
        </member>
        <member name="M:Syncfusion.WinForms.Core.FormWindow.DestroyHandle">
            <summary>
            Destroys the window and its handle.
            </summary>
        </member>
        <member name="M:Syncfusion.WinForms.Core.FormWindow.WndProc(System.Windows.Forms.Message@)">
            <summary>
            Invokes the default window procedure associated with this window.
            </summary>
            <param name="m">A System.Windows.Forms.Message that is associated with the current Windows
            message. </param>
        </member>
        <member name="T:Syncfusion.WinForms.Core.PopupCloseRequestListener">
            <summary>
            Represents a class that provides support to list the popup close actions.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Core.PopupCloseRequestListener.popup">
            <summary>
            The popup container.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Core.PopupCloseRequestListener.parentControl">
            <summary>
            The parent control.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Core.PopupCloseRequestListener.popupHost">
            <summary>
            The popup host control.
            </summary>
        </member>
        <member name="M:Syncfusion.WinForms.Core.PopupCloseRequestListener.#ctor(Syncfusion.WinForms.Core.PopupBase)">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.WinForms.Core.PopupCloseRequestListener"/> class.
            </summary>
            <param name="popup">The popup container.</param>
        </member>
        <member name="M:Syncfusion.WinForms.Core.PopupCloseRequestListener.Dispose">
            <summary>
            Dispose the managed and unmanaged resources.
            </summary>
        </member>
        <member name="M:Syncfusion.WinForms.Core.PopupCloseRequestListener.Attach">
            <summary>
            Attach the control.
            </summary>
        </member>
        <member name="M:Syncfusion.WinForms.Core.PopupCloseRequestListener.Release">
            <summary>
            Release the control.
            </summary>
        </member>
        <member name="M:Syncfusion.WinForms.Core.PopupCloseRequestListener.ParentLostFocus(System.Object,System.EventArgs)">
            <summary>
            Occurs when parent lost focus.
            </summary>
            <param name="sender">The sender.</param>
            <param name="e">The event arguments.</param>
        </member>
        <member name="M:Syncfusion.WinForms.Core.PopupCloseRequestListener.MenuCloseEvent(System.Object,System.EventArgs)">
            <summary>
            Occurs when menu closed.
            </summary>
            <param name="sender">The sender.</param>
            <param name="e">The event arguments</param>
        </member>
        <member name="M:Syncfusion.WinForms.Core.PopupCloseRequestListener.FormDeactivate(System.Object,System.EventArgs)">
            <summary>
            occurs when deactivate the form.
            </summary>
            <param name="sender">The sender.</param>
            <param name="e">The event arguments.</param>
        </member>
        <member name="P:Syncfusion.WinForms.Core.PopupCloseRequestListener.IgnoreDeactivateTick">
            <summary>
            Gets or sets a integer value.
            </summary>
        </member>
        <member name="P:Syncfusion.WinForms.Core.PopupCloseRequestListener.PopupHost">
            <summary>
            Gets or sets the popup host.
            </summary>
        </member>
        <member name="P:Syncfusion.WinForms.Core.PopupCloseRequestListener.ParentControl">
            <summary>
            Gets or sets the parent control.
            </summary>
        </member>
        <member name="T:Syncfusion.WinForms.Core.MouseProcHookerUtil">
            <summary>
            Represents a class that contains the mouse process hooker helper functions.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Core.MouseProcHookerUtil.thisProcessID">
            <summary>
            The process id.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Core.MouseProcHookerUtil.clientHL">
            <summary>
            The client.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Core.MouseProcHookerUtil.handle">
            <summary>
            The handle.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Core.MouseProcHookerUtil.hookDisable">
            <summary>
            The hook disable.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Core.MouseProcHookerUtil.messageHookHandle">
            <summary>
            The mouse hook handle.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Core.MouseProcHookerUtil.messageHookRoot">
            <summary>
            The message hook root.
            </summary>
        </member>
        <member name="M:Syncfusion.WinForms.Core.MouseProcHookerUtil.#ctor(System.IntPtr,Syncfusion.WinForms.Core.Interfaces.IMouseHook)">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.WinForms.Core.MouseProcHookerUtil"/> class.
            </summary>
            <param name="handle">The handle.</param>
            <param name="clientHL">The client handle.</param>
        </member>
        <member name="M:Syncfusion.WinForms.Core.MouseProcHookerUtil.Finalize">
            <summary>
            Finalizes an instance of the <see cref="T:Syncfusion.WinForms.Core.MouseProcHookerUtil"/> class.
            </summary>
        </member>
        <member name="M:Syncfusion.WinForms.Core.MouseProcHookerUtil.Dispose">
            <summary>
            Releases the unmanaged resources.
            </summary>
        </member>
        <member name="M:Syncfusion.WinForms.Core.MouseProcHookerUtil.HookMessage">
            <summary>
            Hook the message.
            </summary>
        </member>
        <member name="M:Syncfusion.WinForms.Core.MouseProcHookerUtil.MessageHookProc(System.Int32,System.Int32,System.Int32)">
            <summary>
            Hook process used for catch mouse messages.
            </summary>
            <param name="code">The code.</param>
            <param name="wParam">Window parameter.</param>
            <param name="lParam">The handle parameter.</param>
            <returns>The message pointer.</returns>
        </member>
        <member name="M:Syncfusion.WinForms.Core.MouseProcHookerUtil.UnHookMessage">
            <summary>
            Unhook the message.
            </summary>
        </member>
        <member name="P:Syncfusion.WinForms.Core.MouseProcHookerUtil.DisableMessageHook">
            <summary>
            Gets or sets a value indicating whether can disable hook message.
            </summary>
        </member>
        <member name="P:Syncfusion.WinForms.Core.MouseProcHookerUtil.HookMessages">
            <summary>
            Gets or sets a value indicating whether the message can hook.
            </summary>
        </member>
        <member name="T:Syncfusion.WinForms.Core.MouseProcHookerUtil.MessageHookObject">
            <summary>
            Represents a class that contains the message hook object.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Core.MouseProcHookerUtil.MessageHookObject.reference">
            <summary>
            The reference.
            </summary>
        </member>
        <member name="M:Syncfusion.WinForms.Core.MouseProcHookerUtil.MessageHookObject.#ctor(Syncfusion.WinForms.Core.MouseProcHookerUtil)">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.WinForms.Core.MouseProcHookerUtil.MessageHookObject"/> class.
            </summary>
            <param name="parent">The parent.</param>
        </member>
        <member name="M:Syncfusion.WinForms.Core.MouseProcHookerUtil.MessageHookObject.Callback(System.Int32,System.Int32,System.Int32)">
            <summary>
            Call back.
            </summary>
            <param name="code">A code.</param>
            <param name="wParam">Window parameter.</param>
            <param name="lParam">Handle parameter.</param>
            <returns>Returns the pointer value.</returns>
        </member>
        <member name="T:Syncfusion.WinForms.Core.PopupHelper">
            <summary>
            Represent a class that provides the helper methods for the popup container.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Core.PopupHelper.SWP_NOACTIVATE">
            <summary>
            The constant value for no active.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Core.PopupHelper.SWP_SHOWWINDOW">
            <summary>
            The constant value for show window.
            </summary>
        </member>
        <member name="M:Syncfusion.WinForms.Core.PopupHelper.ShowWindowTopMost(System.IntPtr,System.Drawing.Point,System.Drawing.Size)">
            <summary>
            Show the window at top.
            </summary>
            <param name="handle">The handle.</param>
            <param name="location">The location.</param>
            <param name="size">The size.</param>
        </member>
        <member name="M:Syncfusion.WinForms.Core.PopupHelper.SetVisibleNoActivate(System.Windows.Forms.Control,System.Boolean)">
            <summary>
            Set visible when not active.
            </summary>
            <param name="control">The control.</param>
            <param name="visible">The boolean value.</param>
        </member>
        <member name="M:Syncfusion.WinForms.Core.PopupHelper.GetParentControl(System.IntPtr)">
            <summary>
            Get the parent control.
            </summary>
            <param name="handle">The handle.</param>
            <returns>Returns the parent control.</returns>
        </member>
        <member name="M:Syncfusion.WinForms.Core.PopupHelper.ComputeDefaultTopBottomAlignment(Syncfusion.WinForms.Core.Enums.PopupRelativeAlignment,Syncfusion.WinForms.Core.Enums.PopupRelativeAlignment@,System.Drawing.Rectangle,System.Boolean)">
            <summary>
            Compute the default top bottom alignment.
            </summary>
            <param name="prevAlignment">The previous alignment.</param>
            <param name="newAlignment">The new alignment.</param>
            <param name="parentBounds">The rectangle.</param>
            <param name="isRTL">The boolean indicates the right to left mode.</param>
            <returns>Returns the point.</returns>
        </member>
        <member name="M:Syncfusion.WinForms.Core.PopupHelper.ComputeDefaultTopBottomAlignmentExt(Syncfusion.WinForms.Core.Enums.PopupRelativeAlignment,Syncfusion.WinForms.Core.Enums.PopupRelativeAlignment@,System.Windows.Forms.Control,System.Drawing.Rectangle,System.Boolean)">
            <summary>
            Compute the default top bottom alignment.
            </summary>
            <param name="prevAlignment">The previous alignment.</param>
            <param name="newAlignment">The new alignment.</param>
            <param name="parent">The parent.</param>
            <param name="parentBounds">The rectangle.</param>
            <param name="isRTL">The boolean indicates the right to left mode.</param>
            <returns>Returns the point.</returns>
        </member>
        <member name="M:Syncfusion.WinForms.Core.PopupHelper.ComputeDefaultLeftRightAlignment(Syncfusion.WinForms.Core.Enums.PopupRelativeAlignment,Syncfusion.WinForms.Core.Enums.PopupRelativeAlignment@,System.Drawing.Rectangle,System.Boolean)">
            <summary>
            Compute the default left right alignment.
            </summary>
            <param name="prevAlignment">The previous alignment.</param>
            <param name="newAlignment">The new alignment.</param>
            <param name="parentBounds">The rectangle.</param>
            <param name="isRTL">The boolean indicates the right to left mode.</param>
            <returns>Returns the point.</returns>
        </member>
        <member name="M:Syncfusion.WinForms.Core.PopupHelper.ComputeDefaultLeftRightAlignmentExt(Syncfusion.WinForms.Core.Enums.PopupRelativeAlignment,Syncfusion.WinForms.Core.Enums.PopupRelativeAlignment@,System.Windows.Forms.Control,System.Drawing.Rectangle,System.Boolean)">
            <summary>
            Compute the default left right alignment.
            </summary>
            <param name="prevAlignment">The previous alignment.</param>
            <param name="newAlignment">The new alignment.</param>
            <param name="parent">The parent.</param>
            <param name="parentBounds">The rectangle.</param>
            <param name="isRTL">The boolean indicates the right to left mode.</param>
            <returns>Returns the point.</returns>
        </member>
        <member name="M:Syncfusion.WinForms.Core.PopupHelper.ComputeLocationFromAlignment(Syncfusion.WinForms.Core.Enums.PopupRelativeAlignment,System.Drawing.Rectangle)">
            <summary>
            Compute the location based on the alignment.
            </summary>
            <param name="align">The alignment.</param>
            <param name="dropDownBounds">The bounds.</param>
            <returns>Returns the point.</returns>
        </member>
        <member name="M:Syncfusion.WinForms.Core.PopupHelper.ComputeDefaultPopupAlignment(Syncfusion.WinForms.Core.Enums.PopupRelativeAlignment,Syncfusion.WinForms.Core.Enums.PopupRelativeAlignment@,Syncfusion.WinForms.Core.Enums.PopupRelativeAlignment,Syncfusion.WinForms.Core.Enums.PopupRelativeAlignment,System.Drawing.Rectangle)">
            <summary>
            Compute the location based on default popup alignment.
            </summary>
            <param name="prevAlign">The previous alignment.</param>
            <param name="newAlign">The next alignment</param>
            <param name="firstPrefAlignment">The first preference alignment.</param>
            <param name="lastPrefAlignment">The last preference alignment</param>
            <param name="parentBounds">The parent bounds.</param>
            <returns>Returns the location.</returns>
        </member>
        <member name="M:Syncfusion.WinForms.Core.PopupHelper.ComputeDefaultBorderOverlapCue(Syncfusion.WinForms.Core.Enums.PopupRelativeAlignment,System.Drawing.Rectangle)">
            <summary>
            Compute the default border locations.
            </summary>
            <param name="rightAlign">The alignment.</param>
            <param name="dropDownBounds">The bounds.</param>
            <returns>Returns the locations.</returns>
        </member>
        <member name="T:Syncfusion.WinForms.Core.SystemInfo">
            <summary>
            This class will provide more information that the .Net equivalent ignored.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Core.SystemInfo.appTypeKnown">
            <summary>
            The app key down.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Core.SystemInfo.isDotNetApp">
            <summary>
            The boolean value.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Core.SystemInfo.executablePathURI">
            <summary>
            The string value.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Core.SystemInfo.isDevStudio">
            <summary>
            The boolean value.
            </summary>
        </member>
        <member name="P:Syncfusion.WinForms.Core.SystemInfo.KeyboardCuesAlwaysOn">
            <summary>
            Gets a value indicating whether the menu access keys are always underlined.
            </summary>
        </member>
        <member name="P:Syncfusion.WinForms.Core.SystemInfo.IsDotNetApp">
            <summary>
            Gets or sets a value indicating whether the current application is a .Net application.
            </summary>
            <value>True if .Net; false otherwise.</value>
            <remarks>
            By default, this method will automatically determine whether or not the current active
            app is a .Net app or a native app. However, to speed up performance (by a fraction of a second),
            you can set this value appropriately at the beginning of your app. Note that
            an incorrect setting would cause unforeseen behavior.
            </remarks>
        </member>
        <member name="P:Syncfusion.WinForms.Core.SystemInfo.IsDevStudio">
            <summary>
            Gets a value indicating whether the component is used inside developer studio.
            </summary>
        </member>
        <member name="T:Syncfusion.WinForms.Core.MessageFilterEntryHelper">
            <summary>
            Represents a class that provides support for handling mouse and keyboard process,
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Core.MessageFilterEntryHelper.singleton">
            <summary>
            This needs to be ThreadStatic because pre-filter notifications happen on 
            a thread-basis.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Core.MessageFilterEntryHelper.isDevEnv">
            <summary>
            The boolean value.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Core.MessageFilterEntryHelper.isDisableReleaseHook">
            <summary>
            The boolean value.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Core.MessageFilterEntryHelper.filters">
            <summary>
            The array list.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Core.MessageFilterEntryHelper.suspendHashTable">
            <summary>
            The hash table.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Core.MessageFilterEntryHelper.hashTableFilters">
            <summary>
            The hash table.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Core.MessageFilterEntryHelper.flag">
            <summary>
            The flag.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Core.MessageFilterEntryHelper.mouseProcHooker">
            <summary>
            The mouse process hooker.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Core.MessageFilterEntryHelper.keyboardProcHooker">
            <summary>
            The keyboard process hooker.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Core.MessageFilterEntryHelper.parsingFilters">
            <summary>
            The boolean value.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Core.MessageFilterEntryHelper.filtersToRemoveAfterParse">
            <summary>
            The array list.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Core.MessageFilterEntryHelper.messageFilterEntryHelperWeakContainer">
            <summary>
            The message filter entry helper.
            </summary>
        </member>
        <member name="M:Syncfusion.WinForms.Core.MessageFilterEntryHelper.#ctor">
            <summary>
            Prevents a default instance of the <see cref="T:Syncfusion.WinForms.Core.MessageFilterEntryHelper"/> class from being created.
            </summary>
        </member>
        <member name="M:Syncfusion.WinForms.Core.MessageFilterEntryHelper.Dispose">
            <summary>
            Releases the resources.
            </summary>
        </member>
        <member name="M:Syncfusion.WinForms.Core.MessageFilterEntryHelper.Syncfusion#WinForms#Core#Interfaces#IMouseHook#MouseHook(System.Int32,System.Drawing.Point,System.IntPtr,System.Int32,System.Int32)">
            <summary>
            Handle the mouse hook process.
            </summary>
            <param name="msg">The message.</param>
            <param name="point">The point.</param>
            <param name="hwnd">The control handle.</param>
            <param name="wHitTestCode">The integer value contains the hit test code.</param>
            <param name="extraInfo">The integer value.</param>
            <returns>Returns the boolean value.</returns>
        </member>
        <member name="M:Syncfusion.WinForms.Core.MessageFilterEntryHelper.Syncfusion#WinForms#Core#Interfaces#IKeyboardHook#KeyboardHookProc(System.Int32,System.Int32)">
            <summary>
            Implements the keyboard hook process.
            </summary>
            <param name="wParam">The integer contains the windows parameter.</param>
            <param name="lParam">The integer value contains the value used to keyboard.</param>
            <returns>Returns the boolean value.</returns>
        </member>
        <member name="M:Syncfusion.WinForms.Core.MessageFilterEntryHelper.System#Windows#Forms#IMessageFilter#PreFilterMessage(System.Windows.Forms.Message@)">
            <summary>
            Implements the message filter implementation.
            </summary>
            <param name="m">The message.</param>
            <returns>Returns the boolean value.</returns>
        </member>
        <member name="M:Syncfusion.WinForms.Core.MessageFilterEntryHelper.RemoveMessageFilter(System.Windows.Forms.IMessageFilter)">
            <summary>
            Remove the message filter.
            </summary>
            <param name="filter">The interface that will receive messages for filtering in a .NET app.</param>
        </member>
        <member name="M:Syncfusion.WinForms.Core.MessageFilterEntryHelper.Suspend(System.Object)">
            <summary>
            Suspends applying filters by tag.
            </summary>
            <param name="tag">The object.</param>
        </member>
        <member name="M:Syncfusion.WinForms.Core.MessageFilterEntryHelper.Resume(System.Object)">
            <summary>
            Resumes applying filters by tag.
            </summary>
            <param name="tag">The object</param>
        </member>
        <member name="M:Syncfusion.WinForms.Core.MessageFilterEntryHelper.AddMessageFilter(System.Windows.Forms.IMessageFilter,System.Boolean,System.Object)">
            <summary>
            Add the message filter.
            </summary>
            <param name="filter">The interface that will receive messages for filtering in a .NET app.</param>
            <param name="onTop">Specifies whether or not this filter should be inserted on top (with highest priority).</param>
            <param name="tag">The object.</param>
        </member>
        <member name="M:Syncfusion.WinForms.Core.MessageFilterEntryHelper.AddMessageFilter(System.Windows.Forms.IMessageFilter,System.Boolean)">
            <summary>
            Utility to help you filter messages in both a .NET and Native app.
            </summary>
            <param name="filter">The interface that will receive messages for filtering in a .NET app.</param>
            <param name="onTop">Specifies whether or not this filter should be inserted on top (with highest priority).</param>
        </member>
        <member name="M:Syncfusion.WinForms.Core.MessageFilterEntryHelper.SuspendInternal(System.Object)">
            <summary>
            Suspend the internal process.
            </summary>
            <param name="tag">The object.</param>
        </member>
        <member name="M:Syncfusion.WinForms.Core.MessageFilterEntryHelper.ResumeInternal(System.Object)">
            <summary>
            Resume the internal process.
            </summary>
            <param name="tag">The object.</param>
        </member>
        <member name="M:Syncfusion.WinForms.Core.MessageFilterEntryHelper.AddMessageFilterInternal(System.Windows.Forms.IMessageFilter,System.Boolean,System.Object)">
            <summary>
            Add the message filter.
            </summary>
            <param name="filter">The interface that will receive messages for filtering in a .NET app.</param>
            <param name="onTop">Specifies whether or not this filter should be inserted on top (with highest priority).</param>
            <param name="tag">The object.</param>
        </member>
        <member name="M:Syncfusion.WinForms.Core.MessageFilterEntryHelper.AddMessageFilterInternal(System.Windows.Forms.IMessageFilter,System.Boolean)">
            <summary>
            Add the internal message filter.
            </summary>
            <param name="filter">The interface that will receive messages for filtering in a .NET app.</param>
            <param name="onTop">Specifies whether or not this filter should be inserted on top (with highest priority).</param>
        </member>
        <member name="M:Syncfusion.WinForms.Core.MessageFilterEntryHelper.RemoveMessageFilterInternal(System.Windows.Forms.IMessageFilter)">
            <summary>
            Remove the message filter.
            </summary>
            <param name="filter">The interface that will receive messages for filtering in a .NET app.</param>
        </member>
        <member name="M:Syncfusion.WinForms.Core.MessageFilterEntryHelper.OnAppIdle(System.Object,System.EventArgs)">
            <summary>
            Occurs when the application is idle.
            </summary>
            <param name="sender">The sender.</param>
            <param name="eventArgs">The event args.</param>
        </member>
        <member name="M:Syncfusion.WinForms.Core.MessageFilterEntryHelper.OnBeforeFiltersEnumeration">
            <summary>
            Change the parse filter on before filters.
            </summary>
        </member>
        <member name="M:Syncfusion.WinForms.Core.MessageFilterEntryHelper.VerifyHooksRequirement">
            <summary>
            Verify the hooks requirement
            </summary>
        </member>
        <member name="M:Syncfusion.WinForms.Core.MessageFilterEntryHelper.OnAfterFiltersEnumeration">
            <summary>
            Change the parse filter mode after applied the filters.
            </summary>
        </member>
        <member name="M:Syncfusion.WinForms.Core.MessageFilterEntryHelper.InitHooks">
            <summary>
            Initialize the hooks.
            </summary>
        </member>
        <member name="M:Syncfusion.WinForms.Core.MessageFilterEntryHelper.ReleaseHooks">
            <summary>
            Release the hooks used in this class.
            </summary>
        </member>
        <member name="P:Syncfusion.WinForms.Core.MessageFilterEntryHelper.Singleton">
            <summary>
            Gets the <see cref="T:Syncfusion.WinForms.Core.MessageFilterEntryHelper"/> value.
            </summary>
        </member>
        <member name="P:Syncfusion.WinForms.Core.MessageFilterEntryHelper.DisableReleaseHook">
            <summary>
            Gets or sets a value indicating whether to disable release hook or not
            </summary>
        </member>
        <member name="T:Syncfusion.WinForms.Core.MessageFilterEntryHelperWeakContainer">
            <summary>
            Represents a class that provides the message filter support.
            </summary>
        </member>
        <member name="M:Syncfusion.WinForms.Core.MessageFilterEntryHelperWeakContainer.#ctor(Syncfusion.WinForms.Core.MessageFilterEntryHelper)">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.WinForms.Core.MessageFilterEntryHelperWeakContainer"/> class.
            </summary>
            <param name="target">The target.</param>
        </member>
        <member name="M:Syncfusion.WinForms.Core.MessageFilterEntryHelperWeakContainer.AppIdleWeakEventHandler(System.Object,System.EventArgs)">
            <summary>
            Application idle weak event handler.
            </summary>
            <param name="sender">The object.</param>
            <param name="args">The event data.</param>
        </member>
        <member name="T:Syncfusion.WinForms.Core.PopupManager">
            <summary>
            Represents a class that provides the support for popup control container.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Core.PopupManager.singleton">
            <summary>
            The popup manager.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Core.PopupManager.curPopup">
            <summary>
            The current popup child control.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Core.PopupManager.latestSetFocusSetting">
            <summary>
            The boolean value.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Core.PopupManager.setFocusTimer">
            <summary>
            The timer.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Core.PopupManager.latestFocusControl">
            <summary>
            The last focus control.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Core.PopupManager.previousPopUp">
            <summary>
            The previous popup.
            </summary>
        </member>
        <member name="M:Syncfusion.WinForms.Core.PopupManager.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.WinForms.Core.PopupManager"/> class.
            </summary>
        </member>
        <member name="M:Syncfusion.WinForms.Core.PopupManager.Dispose">
            <summary>
            Releases the used resources.
            </summary>
        </member>
        <member name="M:Syncfusion.WinForms.Core.PopupManager.PreFilterMessage(System.Windows.Forms.Message@)">
            <summary>
            Handles the filter message.
            </summary>
            <param name="m">The message.</param>
            <returns>Returns the boolean value.</returns>
        </member>
        <member name="M:Syncfusion.WinForms.Core.PopupManager.Syncfusion#WinForms#Core#Interfaces#IMouseHook#MouseHook(System.Int32,System.Drawing.Point,System.IntPtr,System.Int32,System.Int32)">
            <summary>
            Implements the mouse hook process.
            </summary>
            <param name="msg">The message.</param>
            <param name="point">The position.</param>
            <param name="hwnd">The handle.</param>
            <param name="wHitTestCode">The hit test code.</param>
            <param name="extraInfo">The integer value.</param>
            <returns>Returns the boolean value.</returns>
        </member>
        <member name="M:Syncfusion.WinForms.Core.PopupManager.Syncfusion#WinForms#Core#Interfaces#IKeyboardHook#KeyboardHookProc(System.Int32,System.Int32)">
            <summary>
            Handles the keyboard hook process.
            </summary>
            <param name="wParam">The integer value contains the window parameter.</param>
            <param name="lParam">The integer value.</param>
            <returns>Returns the boolean value.</returns>
        </member>
        <member name="M:Syncfusion.WinForms.Core.PopupManager.SetCurrentPopupClient(Syncfusion.WinForms.Core.Interfaces.IPopupChild,System.Boolean,System.Boolean)">
            <summary>
            Set the current popup client.
            </summary>
            <param name="client">Popup client.</param>
            <param name="active">The boolean value indicates active.</param>
            <param name="callKillFocusOnFocused">The boolean value.</param>
        </member>
        <member name="M:Syncfusion.WinForms.Core.PopupManager.IsAncestor(Syncfusion.WinForms.Core.Interfaces.IPopupChild,Syncfusion.WinForms.Core.Interfaces.IPopupParent)">
            <summary>
            Gets the the boolean value.
            </summary>
            <param name="popup">The popup child.</param>
            <param name="parent">The popup parent.</param>
            <returns>Returns the boolean value.</returns>
        </member>
        <member name="M:Syncfusion.WinForms.Core.PopupManager.CallKillFocusOnFocused">
            <summary>
            Calls the kill focus.
            </summary>
        </member>
        <member name="M:Syncfusion.WinForms.Core.PopupManager.CallSetFocusOnFocused">
            <summary>
            Sets the focus.
            </summary>
        </member>
        <member name="M:Syncfusion.WinForms.Core.PopupManager.SetFocusTimer_Event(System.Object,System.EventArgs)">
            <summary>
            Delayed set focus.
            </summary>
            <param name="sender">The sender.</param>
            <param name="e">The event arguments.</param> 
        </member>
        <member name="M:Syncfusion.WinForms.Core.PopupManager.SetCurrentPopup(Syncfusion.WinForms.Core.Interfaces.IPopupChild,System.Boolean,System.Boolean)">
            <summary>
            Set the current popup.
            </summary>
            <param name="popup">The popup child.</param>
            <param name="active">The boolean value indicates the active.</param>
            <param name="callKillFocusOnFocused">The boolean value.</param>
        </member>
        <member name="P:Syncfusion.WinForms.Core.PopupManager.ActivePopupClient">
            <summary>
            Gets the active popup child.
            </summary>
        </member>
        <member name="P:Syncfusion.WinForms.Core.PopupManager.Singleton">
            <summary>
            Gets the popup manager.
            </summary>
        </member>
        <member name="P:Syncfusion.WinForms.Core.PopupManager.ActivePopup">
            <summary>
            Gets the current popup control.
            </summary>
        </member>
        <member name="T:Syncfusion.WinForms.Controls.Styles.DropDownStyleInfo">
            <summary>
            Represents the class to define the style for <see cref="!:Syncfusion.WinForms.Input.SfComboBox"/> control.
            </summary>
        </member>
        <member name="T:Syncfusion.WinForms.Core.Styles.StyleInfoSubObjectBase">
            <summary>
            <see cref="T:Syncfusion.WinForms.Core.Styles.StyleInfoSubObjectBase"/> is an abstract base class for classes
            to be used as sub objects in a <see cref="T:Syncfusion.WinForms.Core.Styles.StyleInfoBase"/>.
            </summary>
            <remarks>
            <see cref="T:Syncfusion.WinForms.Core.Styles.StyleInfoSubObjectBase"/> is derived from <see cref="T:Syncfusion.WinForms.Core.Styles.StyleInfoBase"/>
            and thus provides the same easy way to provide properties that can inherit values
            from base styles at run-time.<para/>
            The difference is that <see cref="T:Syncfusion.WinForms.Core.Styles.StyleInfoSubObjectBase"/> supports this inheritance
            mechanism as a sub object from a <see cref="T:Syncfusion.WinForms.Core.Styles.StyleInfoBase"/>. A sub object needs to
            have knowledge about its parent object and be able to walk the base styles from the
            parent object.<para/>
            Examples for implementation of <see cref="T:Syncfusion.WinForms.Core.Styles.StyleInfoSubObjectBase"/> are the font and border
            classes in Essential Grid.<para/>
            Programmers can derive their own style classes from <see cref="T:Syncfusion.WinForms.Core.Styles.StyleInfoSubObjectBase"/> 
            and add type-safe
            supported custom properties to the style class. If you write your own 
            SpinButton class that needs individual properties, simply add a "CellSpinButtonInfo" 
            class as sub object. If you derive CellSpinButtonInfo from StyleInfoSubObjectBase, 
            your new object will support property inheritance from base styles.
            <para/>
            See the overview for <see cref="T:Syncfusion.WinForms.Core.Styles.StyleInfoBase"/> for further discussion about style objects.
            </remarks>
            <example>The following example shows how you can use the GridFontInfo class in Essential Grid:
            <code lang="C#">
                    standard.Font.Facename = "Helvetica";
                    model[1, 3].Font.Bold = true;
                    string faceName = model[1, 3].Font.Facename; // any cell inherits standard style
                    Console.WriteLIne(faceName); // will output "Helvetica"
                    Console.WriteLIne(model[1, 3].Font.Bold); // will output "true"
                    Console.WriteLIne(model[1, 3].Font.HasFaceName); // will output "False"
            </code>
            </example>
        </member>
        <member name="T:Syncfusion.WinForms.Core.Styles.StyleInfoBase">
            <summary>
            Provides a wrapper object for the <see cref="T:Syncfusion.WinForms.Core.Styles.StyleInfoStore"/> object with type
            safe access to all properties stored in the style object.
            <para/>
            Style objects provide a very user friendly way to modify data. It is very much like in Excel VBA.
            For example, to change the bold setting for a cell, you simply call grid[5,2].Font.Bold = True.
            </summary>
            <remarks>
            The <see cref="T:Syncfusion.WinForms.Core.Styles.StyleInfoBase"/> is a wrapper around the <see cref="T:Syncfusion.WinForms.Core.Styles.StyleInfoStore"/>.
            It provides type safe accessor properties to modify data of the underlying
            data store and can hold temporary information about the style object that
            does not need to be persisted.
            <para/>
            In Essential Grid for the example, the GridStyleInfo class holds extensive identity
            information about a style object such as cached base styles, row and column index,
            a reference to the grid model, and more. This is all the information that can be discarded
            when the style is no longer used (because maybe the cell is not visible anymore). Only
            the <see cref="T:Syncfusion.WinForms.Core.Styles.StyleInfoStore"/> part needs to be kept alive.
            <para/>
            Style objects only exist temporarily and will be created as a weak reference in a
            volatile data store. Once Garbage Collection kicks in smart style objects that are not
            referenced any more will be garbage collected. The volatile data cache can also be
            cleared manually.
            <para/>
            Because Style objects know their identity they can notify their owner of changes or
            load base style information when the user interacts with the style object. This allows
            you to make changes to a style object directly, such as Cell.Font.Bold = True;
            <para/>
            Style objects support property inheritance from parent styles, e.g. in a grid a cell
            can inherit properties from a parent row, column, table or a collection of names styles
            in a base styles map.
            <para/>
            Style objects support sub objects. Sub objects can support inheritance (e.g. a Font.Bold
            can be inherited). Immutable sub objects like BrushInfo don't support inheritance of
            individual properties.
            <para/>
            <see cref="T:Syncfusion.WinForms.Core.Styles.StyleInfoStore"/> allows you to register any number of properties but keeps the data
            very memory efficient. Only properties that are actually used for a style
            object will be allocated for an object. The StyleObjectStore handles the storage of the object.
            For short integers, enumerations and Boolean values, the data will be stored in a BitVector32
            structure to save even more memory.
            <para/>
            Programmers can derive their own style classes from <see cref="T:Syncfusion.WinForms.Core.Styles.StyleInfoSubObjectBase"/>
            and add type-safe
            supported custom properties to the style class. If you write, for example, your own
            SpinButton class that needs individual properties, simply add a �CellSpinButtonInfo�
            class as sub object. If you derive CellSpinButtonInfo from StyleInfoSubObjectBase,
            your new object will support property inheritance from base styles.
            <para/>
            Style objects can be written into a string (see <see cref="M:Syncfusion.WinForms.Core.Styles.StyleInfoBase.ToString(System.String,System.IFormatProvider)"/>) and later be recreated
            using the <see cref="M:Syncfusion.WinForms.Core.Styles.StyleInfoBase.ParseString(System.String)"/> method. When writing the string you have the option to show
            default values (use the �d� format). Sub objects will be identified with a dot
            �.�, e.g. �Font.Bold�
            <para/>
            Style object support several operations how to combine information from two styles. Style operations
            include: apply changes, apply initialized properties, override initialized properties, exclude properties.
            See the <see cref="M:Syncfusion.WinForms.Core.Styles.StyleInfoBase.ModifyStyle(Syncfusion.WinForms.Core.Styles.IStyleInfo,Syncfusion.WinForms.Core.Enums.StyleModifyType)"/> method.
            <para/>
            Style objects integrate with <see cref="T:System.Windows.Forms.PropertyGrid"/>. The property grid
            displays values that belong to a style object in bold. Values that are inherited from parent
            styles will be displayed as default values. The user can select several cells in a grid and
            the <see cref="M:Syncfusion.WinForms.Core.Styles.StyleInfoBase.MergeStyle(Syncfusion.WinForms.Core.Styles.IStyleInfo)"/> operation will show common settings in the property grid as bold.
            <para/>
            Style objects support BeginUpdate, EndUpdate mechanism. This allows users to batch several operations
            on a style object into one transaction.
            <para/>
            </remarks>
            <example>The following example shows how you can use the GridFontInfo class in Essential Grid:
            <code lang="C#">
                    standard.Font.Facename = "Helvetica";
                    model[1, 3].Font.Bold = true;
                    string faceName = model[1, 3].Font.Facename; // any cell inherits standard style
                    Console.WriteLIne(faceName); // will output "Helvetica"
                    Console.WriteLIne(model[1, 3].Font.Bold); // will output "true"
                    Console.WriteLIne(model[1, 3].Font.HasFaceName); // will output "False"
            </code>
            </example>
            <seealso cref="T:Syncfusion.WinForms.Core.Styles.StyleInfoIdentityBase"/>
            <seealso cref="T:Syncfusion.WinForms.Core.Styles.StyleInfoStore"/>
        </member>
        <member name="T:Syncfusion.WinForms.Core.Styles.IStyleInfo">
            <summary>
            Defines an interface implemented both by <see cref="T:Syncfusion.WinForms.Core.Styles.StyleInfoBase"/> and <see cref="T:Syncfusion.WinForms.Core.Styles.StyleInfoStore"/>
            that allows you to check the state of the object, read and write specific property and execute
            style operations with the <see cref="M:Syncfusion.WinForms.Core.Styles.IStyleInfo.ModifyStyle(Syncfusion.WinForms.Core.Styles.IStyleInfo,Syncfusion.WinForms.Core.Enums.StyleModifyType)"/>. method.
            </summary>
        </member>
        <member name="M:Syncfusion.WinForms.Core.Styles.IStyleInfo.IsSubset(Syncfusion.WinForms.Core.Styles.IStyleInfo)">
            <summary>
            Compares all properties with another style object and indicates whether
            the current set of initialized properties is a subset of
            the other style object.
            </summary>
            <param name="style">The other style to compare with.</param>
            <returns>True if this style object is a subset of the other style object.</returns>
        </member>
        <member name="M:Syncfusion.WinForms.Core.Styles.IStyleInfo.ModifyStyle(Syncfusion.WinForms.Core.Styles.IStyleInfo,Syncfusion.WinForms.Core.Enums.StyleModifyType)">
            <summary>
            Applies changes to a style object as specified with <see cref="T:Syncfusion.WinForms.Core.Enums.StyleModifyType"/>.
            </summary>
            <param name="style">The style object to be applied on the current object.</param>
            <param name="mt">The actual operation to be performed.</param>
        </member>
        <member name="M:Syncfusion.WinForms.Core.Styles.IStyleInfo.MergeStyle(Syncfusion.WinForms.Core.Styles.IStyleInfo)">
            <summary>
            Merges two styles. Resets all properties that differ among the two style object
            and keeps only those properties that are equal.
            </summary>
            <param name="style">The other style object this style object should merge with.</param>
        </member>
        <member name="M:Syncfusion.WinForms.Core.Styles.IStyleInfo.ParseString(System.String)">
            <summary>
            Parses a given string and applies the results to affected properties in this style object.
            </summary>
            <param name="s">The string to be interpreted.</param>
            <remarks>
            <see cref="M:Syncfusion.WinForms.Core.Styles.IStyleInfo.ParseString(System.String)"/> consumes strings previously generated with
            a <see cref="M:Syncfusion.WinForms.Core.Styles.StyleInfoBase.ToString(System.String,System.IFormatProvider)"/> method call.
            </remarks>
        </member>
        <member name="M:Syncfusion.WinForms.Core.Styles.IStyleInfo.HasValue(Syncfusion.WinForms.Core.Styles.StyleInfoProperty)">
            <summary>
            Indicates whether a specific property has been initialized for the current object.
            </summary>
            <param name="sip">A <see cref="T:Syncfusion.WinForms.Core.Styles.StyleInfoProperty"/> that identifies the property to operate on.</param>
            <returns>Returns true if specific property has initialized, otherwise returns false.</returns>
        </member>
        <member name="M:Syncfusion.WinForms.Core.Styles.IStyleInfo.GetValue(Syncfusion.WinForms.Core.Styles.StyleInfoProperty)">
            <summary>
            Queries the value for a specific property that has been initialized for the current object.
            </summary>
            <param name="sip">A <see cref="T:Syncfusion.WinForms.Core.Styles.StyleInfoProperty"/> that identifies the property to operate on.</param>
            <returns>Returns the value.</returns>
        </member>
        <member name="P:Syncfusion.WinForms.Core.Styles.IStyleInfo.IsEmpty">
            <summary>
            Gets a value indicating whether a style is empty.
            </summary>
        </member>
        <member name="P:Syncfusion.WinForms.Core.Styles.IStyleInfo.IsChanged">
            <summary>
            Gets a value indicating whether any properties for this object have changed since it was applied last time.
            </summary>
        </member>
        <member name="P:Syncfusion.WinForms.Core.Styles.IStyleInfo.Store">
            <summary>
            Gets a <see cref="T:Syncfusion.WinForms.Core.Styles.StyleInfoStore"/> object that holds all the data for this style object.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Core.Styles.StyleInfoBase.InStyleChanged">
            <summary>
            The boolean value indicates whether style has changed.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Core.Styles.StyleInfoBase.ExpandableObjectsStore">
            <summary>
            The expandable objects store.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Core.Styles.StyleInfoBase.weakReferenceChangedListeners">
            <summary>
            The list of weak references.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Core.Styles.StyleInfoBase.updateCount">
            <summary>
            Helpers for update pattern (BeginUpdate, EndUpdate, Updating).
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Core.Styles.StyleInfoBase.changePending">
            <summary>
            Helpers for update pattern (BeginUpdate, EndUpdate, Updating).
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Core.Styles.StyleInfoBase.baseStyleValuesCache">
            <summary>
            The hash table value.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Core.Styles.StyleInfoBase.cacheValues">
            <summary>
            The cache value.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Core.Styles.StyleInfoBase.identity">
            <summary>
            StyleInfoIdentityBase for identity information (owner, row, col). If NULL, not owned.
            </summary>
        </member>
        <member name="M:Syncfusion.WinForms.Core.Styles.StyleInfoBase.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.WinForms.Core.Styles.StyleInfoBase"/> class with no identity and data initialized.
            </summary>
        </member>
        <member name="M:Syncfusion.WinForms.Core.Styles.StyleInfoBase.#ctor(Syncfusion.WinForms.Core.Styles.StyleInfoStore)">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.WinForms.Core.Styles.StyleInfoBase"/> class and associates it with an existing <see cref="T:Syncfusion.WinForms.Core.Styles.StyleInfoStore"/>.
            </summary>
            <param name="store">A <see cref="T:Syncfusion.WinForms.Core.Styles.StyleInfoStore"/> that holds data for this object.
            All changes in this style object will be saved in the <see cref="T:Syncfusion.WinForms.Core.Styles.StyleInfoStore"/> object.
            </param>
        </member>
        <member name="M:Syncfusion.WinForms.Core.Styles.StyleInfoBase.#ctor(Syncfusion.WinForms.Core.Styles.StyleInfoIdentityBase,Syncfusion.WinForms.Core.Styles.StyleInfoStore)">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.WinForms.Core.Styles.StyleInfoBase"/> class and associates it with an existing <see cref="T:Syncfusion.WinForms.Core.Styles.StyleInfoStore"/> and <see cref="T:Syncfusion.WinForms.Core.Styles.StyleInfoIdentityBase"/>.
            </summary>
            <param name="identity">A <see cref="T:Syncfusion.WinForms.Core.Styles.StyleInfoIdentityBase"/> that holds the identity for this <see cref="T:Syncfusion.WinForms.Core.Styles.StyleInfoBase"/>.</param>
            <param name="store">A <see cref="T:Syncfusion.WinForms.Core.Styles.StyleInfoStore"/> that holds data for this object.
            All changes in this style object will be saved in the <see cref="T:Syncfusion.WinForms.Core.Styles.StyleInfoStore"/> object.
            </param>
        </member>
        <member name="M:Syncfusion.WinForms.Core.Styles.StyleInfoBase.#ctor(Syncfusion.WinForms.Core.Styles.StyleInfoIdentityBase,Syncfusion.WinForms.Core.Styles.StyleInfoStore,System.Boolean)">
            <summary>
             Initializes a new instance of the <see cref="T:Syncfusion.WinForms.Core.Styles.StyleInfoBase"/> class and associates it with an existing <see cref="T:Syncfusion.WinForms.Core.Styles.StyleInfoStore"/> and <see cref="T:Syncfusion.WinForms.Core.Styles.StyleInfoIdentityBase"/>.
            </summary>
            <param name="identity">A <see cref="T:Syncfusion.WinForms.Core.Styles.StyleInfoIdentityBase"/> that holds the identity for this <see cref="T:Syncfusion.WinForms.Core.Styles.StyleInfoBase"/>.</param>
            <param name="store">A <see cref="T:Syncfusion.WinForms.Core.Styles.StyleInfoStore"/> that holds data for this object.
            All changes in this style object will be saved in the <see cref="T:Syncfusion.WinForms.Core.Styles.StyleInfoStore"/> object.</param>
            <param name="cacheValues">if set to <c>true</c> the style the resulting value of a property when inherited from a base style
            so that the property does not have to be evaluated multiple times when called repeatedly.</param>
        </member>
        <member name="M:Syncfusion.WinForms.Core.Styles.StyleInfoBase.ClearCache">
            <summary>
            Clears the cache.
            </summary>
        </member>
        <member name="M:Syncfusion.WinForms.Core.Styles.StyleInfoBase.WriteXml(System.Xml.XmlWriter)">
            <summary>
            Serializes the contents of this object into an XML stream.
            </summary>
            <param name="writer">Represents the XML stream.</param>
        </member>
        <member name="M:Syncfusion.WinForms.Core.Styles.StyleInfoBase.System#Xml#Serialization#IXmlSerializable#GetSchema">
            <summary>
            Not implemented and returns NULL.
            </summary>
            <returns>Returns the null.</returns>
        </member>
        <member name="M:Syncfusion.WinForms.Core.Styles.StyleInfoBase.ReadXml(System.Xml.XmlReader)">
            <summary>
            Deserializes the contents of this object from an XML stream.
            </summary>
            <param name="reader">Represents the XML stream.</param>
        </member>
        <member name="M:Syncfusion.WinForms.Core.Styles.StyleInfoBase.Dispose">
            <summary>
            Releases all resources used by the component.
            </summary>
        </member>
        <member name="M:Syncfusion.WinForms.Core.Styles.StyleInfoBase.Equals(System.Object)">
            <summary>
            Indicates whether two style objects are equal. Identity is left out with this comparison,
            only the data (<see cref="P:Syncfusion.WinForms.Core.Styles.StyleInfoBase.Store"/>) are compared.
            </summary>
            <param name="obj">The other style object to compare the current object with.</param>
            <returns>True if both objects have equal data; false otherwise.</returns>
        </member>
        <member name="M:Syncfusion.WinForms.Core.Styles.StyleInfoBase.ToString">
            <summary>
            Overloaded. Creates a formatted string for this style object. This string can
            later be consumed by <see cref="M:Syncfusion.WinForms.Core.Styles.StyleInfoBase.ParseString(System.String)"/>.
            </summary>
            <returns>A string with formatted style information.</returns>
            <remarks>
            Style objects can be formatted into a string that can be consumed 
            by <see cref="M:Syncfusion.WinForms.Core.Styles.StyleInfoBase.ParseString(System.String)"/> to recreate style information.
            <para/>
            When writing the string, you have the option to show default values 
            (use the �d� format). <para/>
            Sub objects will be identified with a period ".", e.g. "Font.Bold".
            </remarks>
        </member>
        <member name="M:Syncfusion.WinForms.Core.Styles.StyleInfoBase.ToString(System.String)">
            <summary>
            Creates a formatted string for this style object. This string can
            later be consumed by <see cref="M:Syncfusion.WinForms.Core.Styles.StyleInfoBase.ParseString(System.String)"/>. You can specify
            "d" as format if you want to write out default values inherited from a base style.
            </summary>
            <param name="format">Use "d" if default values should be included; "G" and NULL are default.</param>
            <returns>A string with formatted style information.</returns>
            <remarks>
            Style objects can be formatted into a string that can be consumed 
            by <see cref="M:Syncfusion.WinForms.Core.Styles.StyleInfoBase.ParseString(System.String)"/> to recreate style information.
            <para/>
            When writing the string you have the option to show default values 
            (use the "d" format) or not. <para/>
            Sub objects will be identified with a period ".", e.g. "Font.Bold".
            </remarks>
        </member>
        <member name="M:Syncfusion.WinForms.Core.Styles.StyleInfoBase.ToString(System.String,System.IFormatProvider)">
            <summary>
            Creates a formatted string for this style object. This string can
            later be consumed by <see cref="M:Syncfusion.WinForms.Core.Styles.StyleInfoBase.ParseString(System.String)"/>. You can specify
            "d" as format if you want to write out default values inherited from a base style.
            </summary>
            <param name="format">Use "d" if default values should be included; "G" and NULL are default.</param>
            <returns>A string with formatted style information.</returns>
            <param name="provider">An <see cref="T:System.IFormatProvider"/> to be used
            for the <see cref="M:Syncfusion.WinForms.Core.Styles.StyleInfoBase.ToString(System.String,System.IFormatProvider)"/> operation. Can be NULL.</param>
            <remarks>
            Style objects can be formatted into a string that can be consumed 
            by <see cref="M:Syncfusion.WinForms.Core.Styles.StyleInfoBase.ParseString(System.String)"/> to recreate style information.
            <para/>
            When writing the string you have the option to show default values 
            (use the "d" format) or not. <para/>
            Sub objects will be identified with a period ".", e.g. "Font.Bold".
            </remarks>
        </member>
        <member name="M:Syncfusion.WinForms.Core.Styles.StyleInfoBase.ParseString(System.String)">
            <summary>
            Parses a given string and applies it's results to affected properties in this style object.
            </summary>
            <param name="s">The string to be parsed.</param>
            <remarks>
            <see cref="M:Syncfusion.WinForms.Core.Styles.StyleInfoBase.ParseString(System.String)"/> consumes strings previously generated with
            a <see cref="M:Syncfusion.WinForms.Core.Styles.StyleInfoBase.ToString(System.String,System.IFormatProvider)"/> method call.
            </remarks>
        </member>
        <member name="M:Syncfusion.WinForms.Core.Styles.StyleInfoBase.BeginInit">
            <summary>
            Suspends raising <see cref="E:Syncfusion.WinForms.Core.Styles.StyleInfoBase.Changed"/> events until <see cref="M:Syncfusion.WinForms.Core.Styles.StyleInfoBase.EndInit"/> is called 
            and will not change the <see cref="P:Syncfusion.WinForms.Core.Styles.StyleInfoBase.IsChanged"/> state of this object.
            </summary>
        </member>
        <member name="M:Syncfusion.WinForms.Core.Styles.StyleInfoBase.EndInit">
            <summary>
            Resumes raising <see cref="E:Syncfusion.WinForms.Core.Styles.StyleInfoBase.Changed"/> events and resets the <see cref="P:Syncfusion.WinForms.Core.Styles.StyleInfoBase.IsChanged"/> state of this object.
            </summary>
        </member>
        <member name="M:Syncfusion.WinForms.Core.Styles.StyleInfoBase.BeginUpdate">
            <summary>
            Suspends raising <see cref="E:Syncfusion.WinForms.Core.Styles.StyleInfoBase.Changed"/> events until <see cref="M:Syncfusion.WinForms.Core.Styles.StyleInfoBase.EndUpdate"/> is called.
            </summary>
        </member>
        <member name="M:Syncfusion.WinForms.Core.Styles.StyleInfoBase.EndUpdate">
            <summary>
            Suspends raising <see cref="E:Syncfusion.WinForms.Core.Styles.StyleInfoBase.Changed"/> events and if changes were
            made before the <see cref="M:Syncfusion.WinForms.Core.Styles.StyleInfoBase.EndUpdate"/> call, it will raise a changed
            notification immediately.
            </summary>
        </member>
        <member name="M:Syncfusion.WinForms.Core.Styles.StyleInfoBase.CreateSubObjectIdentity(Syncfusion.WinForms.Core.Styles.StyleInfoProperty)">
            <summary>
            Override this method to create a product-specific identity object for a sub object.
            </summary>
            <returns>An identity object for a sub object of this style.</returns>
            <example>
            The following code is an example how Essential Grid creates GridStyleInfoSubObjectIdentity:
            <code lange="C#">
            public override StyleInfoSubObjectIdentity CreateSubObjectIdentity(StyleInfoProperty sip)
            {
            	return new GridStyleInfoSubObjectIdentity(this, sip);
            }
            </code>
            </example>
            <param name="sip">The <see cref="T:Syncfusion.WinForms.Core.Styles.StyleInfoProperty"/>.</param>
        </member>
        <member name="M:Syncfusion.WinForms.Core.Styles.StyleInfoBase.IsSubset(Syncfusion.WinForms.Core.Styles.IStyleInfo)">
            <summary>
            Compares all properties with another style object and indicates
            whether the current set of initialized properties is a subset of
            the other style object.
            </summary>
            <param name="istyle">The other style to compare with.</param>
            <returns>True if this style object is a subset of the other style object.</returns>
        </member>
        <member name="M:Syncfusion.WinForms.Core.Styles.StyleInfoBase.CopyFrom(Syncfusion.WinForms.Core.Styles.IStyleInfo)">
            <summary>
            Copies properties from another style object. This method raises Changing and Changed 
            notifications if the other object differs. (ModifyStyle does not raise these events).
            </summary>
            <param name="istyle">The style object to be applied on the current object.</param>
        </member>
        <member name="M:Syncfusion.WinForms.Core.Styles.StyleInfoBase.ModifyStyle(Syncfusion.WinForms.Core.Styles.IStyleInfo,Syncfusion.WinForms.Core.Enums.StyleModifyType)">
            <summary>
            Applies changes to a style object as specified with <see cref="T:Syncfusion.WinForms.Core.Enums.StyleModifyType"/>.
            </summary>
            <param name="istyle">The style object to be applied on the current object.</param>
            <param name="mt">The actual operation to be performed.</param>
        </member>
        <member name="M:Syncfusion.WinForms.Core.Styles.StyleInfoBase.InheritStyle(Syncfusion.WinForms.Core.Styles.IStyleInfo,Syncfusion.WinForms.Core.Enums.StyleModifyType)">
            <summary>
            Applies changes to a style object as specified with <see cref="T:Syncfusion.WinForms.Core.Enums.StyleModifyType"/>.
            </summary>
            <param name="istyle">The style object to be applied on the current object.</param>
            <param name="mt">The modify type.</param>
        </member>
        <member name="M:Syncfusion.WinForms.Core.Styles.StyleInfoBase.MergeStyle(Syncfusion.WinForms.Core.Styles.IStyleInfo)">
            <summary>
            Merges two styles. Resets all properties that differ among the two style objects
            and keeps only those properties that are equal.
            </summary>
            <param name="istyle">The other style object this style object should merge with.</param>
        </member>
        <member name="M:Syncfusion.WinForms.Core.Styles.StyleInfoBase.HasValue(Syncfusion.WinForms.Core.Styles.StyleInfoProperty)">
            <summary>
            Indicates whether the specified property has been initialized for the current object.
            </summary>
            <param name="sip">A <see cref="T:Syncfusion.WinForms.Core.Styles.StyleInfoProperty"/> that identifies the property to operate on.</param>
            <returns>Returns true if contains value, otherwise false.</returns>
        </member>
        <member name="M:Syncfusion.WinForms.Core.Styles.StyleInfoBase.ResetValue(Syncfusion.WinForms.Core.Styles.StyleInfoProperty)">
            <summary>
            Marks the specified property as uninitialized for the current object.
            </summary>
            <param name="sip">A <see cref="T:Syncfusion.WinForms.Core.Styles.StyleInfoProperty"/> that identifies the property to operate on.</param>
        </member>
        <member name="M:Syncfusion.WinForms.Core.Styles.StyleInfoBase.NotifySubObjectChanged(Syncfusion.WinForms.Core.Styles.IStyleInfoSubObject)">
            <summary>
            Notify when the sub object gets changed,
            </summary>
            <param name="subObject">The sub object.</param>
        </member>
        <member name="M:Syncfusion.WinForms.Core.Styles.StyleInfoBase.GetValue(Syncfusion.WinForms.Core.Styles.StyleInfoProperty)">
            <summary>
            Queries the value for the specified property that has been initialized for the current object
            or locates it in a base style.
            </summary>
            <param name="sip">A <see cref="T:Syncfusion.WinForms.Core.Styles.StyleInfoProperty"/> that identifies the property to operate on.</param>
            <returns>Returns the object value.</returns>
        </member>
        <member name="M:Syncfusion.WinForms.Core.Styles.StyleInfoBase.GetShortValue(Syncfusion.WinForms.Core.Styles.StyleInfoProperty)">
            <summary>
            Queries the <see cref="T:System.Int16"/> value for the specified property that has been initialized for the current object
            or locates it in a base style.
            </summary>
            <param name="sip">A <see cref="T:Syncfusion.WinForms.Core.Styles.StyleInfoProperty"/> that identifies the property to operate on.</param>
            <returns>Returns the short value.</returns>
        </member>
        <member name="M:Syncfusion.WinForms.Core.Styles.StyleInfoBase.SetValue(Syncfusion.WinForms.Core.Styles.StyleInfoProperty,System.Object)">
            <summary>
            Overloaded. Initializes the value for the specified property.
            </summary>
            <param name="sip">A <see cref="T:Syncfusion.WinForms.Core.Styles.StyleInfoProperty"/> that identifies the property to operate on.</param>
            <param name="value">The value to be saved for the property.</param>
        </member>
        <member name="M:Syncfusion.WinForms.Core.Styles.StyleInfoBase.OnSubObjectChanged(Syncfusion.WinForms.Core.Styles.IStyleInfoSubObject)">
            <summary>
            The method is occurs when the sub object is changed.
            </summary>
            <param name="subObject">The sub object value.</param>
        </member>
        <member name="M:Syncfusion.WinForms.Core.Styles.StyleInfoBase.SetValue(Syncfusion.WinForms.Core.Styles.StyleInfoProperty,System.Int16)">
            <summary>
            Initializes the <see cref="T:System.Int16"/> value for the specified property.
            </summary>
            <param name="sip">A <see cref="T:Syncfusion.WinForms.Core.Styles.StyleInfoProperty"/> that identifies the property to operate on.</param>
            <param name="value">The value to be saved for the property.</param>
        </member>
        <member name="M:Syncfusion.WinForms.Core.Styles.StyleInfoBase.System#IConvertible#ToUInt64(System.IFormatProvider)">
            <summary>
            Convert to <see cref="T:System.UInt64"/> type.
            </summary>
            <param name="provider">The format provider.</param>
            <returns>Throws invalid cast exception.</returns>
        </member>
        <member name="M:Syncfusion.WinForms.Core.Styles.StyleInfoBase.System#IConvertible#ToSByte(System.IFormatProvider)">
            <summary>
            Convert to <see cref="T:System.SByte"/> type.
            </summary>
            <param name="provider">The format provider.</param>
            <returns>Throws invalid cast exception.</returns>
        </member>
        <member name="M:Syncfusion.WinForms.Core.Styles.StyleInfoBase.System#IConvertible#ToDouble(System.IFormatProvider)">
            <summary>
            Convert to <see cref="T:System.Double"/> type.
            </summary>
            <param name="provider">The format provider.</param>
            <returns>Throws invalid cast exception.</returns>
        </member>
        <member name="M:Syncfusion.WinForms.Core.Styles.StyleInfoBase.System#IConvertible#ToDateTime(System.IFormatProvider)">
            <summary>
            Convert to <see cref="T:System.DateTime"/> type.
            </summary>
            <param name="provider">The format provider.</param>
            <returns>Throws invalid cast exception.</returns>
        </member>
        <member name="M:Syncfusion.WinForms.Core.Styles.StyleInfoBase.System#IConvertible#ToSingle(System.IFormatProvider)">
            <summary>
            Convert to <see cref="T:System.Single"/> type.
            </summary>
            <param name="provider">The format provider.</param>
            <returns>Throws invalid cast exception.</returns>
        </member>
        <member name="M:Syncfusion.WinForms.Core.Styles.StyleInfoBase.System#IConvertible#ToBoolean(System.IFormatProvider)">
            <summary>
            Convert to <see cref="T:System.Boolean"/> type.
            </summary>
            <param name="provider">The format provider.</param>
            <returns>Throws invalid cast exception.</returns>
        </member>
        <member name="M:Syncfusion.WinForms.Core.Styles.StyleInfoBase.System#IConvertible#ToInt32(System.IFormatProvider)">
            <summary>
            Convert to <see cref="T:System.Int32"/> type.
            </summary>
            <param name="provider">The format provider.</param>
            <returns>Throws invalid cast exception.</returns>
        </member>
        <member name="M:Syncfusion.WinForms.Core.Styles.StyleInfoBase.System#IConvertible#ToUInt16(System.IFormatProvider)">
            <summary>
            Convert to <see cref="T:System.UInt16"/> type.
            </summary>
            <param name="provider">The format provider.</param>
            <returns>Throws invalid cast exception.</returns>
        </member>
        <member name="M:Syncfusion.WinForms.Core.Styles.StyleInfoBase.System#IConvertible#ToInt16(System.IFormatProvider)">
            <summary>
            Convert to <see cref="T:System.Int16"/> type.
            </summary>
            <param name="provider">The format provider.</param>
            <returns>Throws invalid cast exception.</returns>
        </member>
        <member name="M:Syncfusion.WinForms.Core.Styles.StyleInfoBase.System#IConvertible#ToString(System.IFormatProvider)">
            <summary>
            Convert to <see cref="T:System.String"/> type.
            </summary>
            <param name="provider">The format provider.</param>
            <returns>Throws invalid cast exception.</returns>
        </member>
        <member name="M:Syncfusion.WinForms.Core.Styles.StyleInfoBase.System#IConvertible#ToByte(System.IFormatProvider)">
            <summary>
            Convert to <see cref="T:System.Byte"/> type.
            </summary>
            <param name="provider">The format provider.</param>
            <returns>Throws invalid cast exception.</returns>
        </member>
        <member name="M:Syncfusion.WinForms.Core.Styles.StyleInfoBase.System#IConvertible#ToChar(System.IFormatProvider)">
            <summary>
            Convert to <see cref="T:System.Char"/> type.
            </summary>
            <param name="provider">The format provider.</param>
            <returns>Throws invalid cast exception.</returns>
        </member>
        <member name="M:Syncfusion.WinForms.Core.Styles.StyleInfoBase.System#IConvertible#ToInt64(System.IFormatProvider)">
            <summary>
            Convert to <see cref="T:System.Int64"/> type.
            </summary>
            <param name="provider">The format provider.</param>
            <returns>Throws invalid cast exception.</returns>
        </member>
        <member name="M:Syncfusion.WinForms.Core.Styles.StyleInfoBase.System#IConvertible#GetTypeCode">
            <summary>
            Gets the type code.
            </summary>
            <returns>Returns the type code.</returns>
        </member>
        <member name="M:Syncfusion.WinForms.Core.Styles.StyleInfoBase.System#IConvertible#ToDecimal(System.IFormatProvider)">
            <summary>
            Convert to <see cref="T:System.Decimal"/> type.
            </summary>
            <param name="provider">The format provider.</param>
            <returns>Throws invalid cast exception.</returns>
        </member>
        <member name="M:Syncfusion.WinForms.Core.Styles.StyleInfoBase.System#IConvertible#ToType(System.Type,System.IFormatProvider)">
            <summary>
            Convert to <see cref="T:System.Type"/> type.
            </summary>
            <param name="conversionType">The type.</param>
            <param name="provider">The format provider.</param>
            <returns>Throws invalid cast exception if not able to convert.</returns>
        </member>
        <member name="M:Syncfusion.WinForms.Core.Styles.StyleInfoBase.System#IConvertible#ToUInt32(System.IFormatProvider)">
            <summary>
            Convert to <see cref="T:System.UInt32"/> type.
            </summary>
            <param name="provider">The format provider.</param>
            <returns>Throws invalid cast exception.</returns>
        </member>
        <member name="M:Syncfusion.WinForms.Core.Styles.StyleInfoBase._GetExpandableObjectProperty(Syncfusion.WinForms.Core.Styles.StyleInfoProperty)">
            <summary>
            Gets the expandable object property.
            </summary>
            <param name="sip">The <see cref="T:Syncfusion.WinForms.Core.Styles.StyleInfoProperty"/> to get the expandable object.</param>
            <returns>Returns the object value.</returns>
        </member>
        <member name="M:Syncfusion.WinForms.Core.Styles.StyleInfoBase.ModifyStyle(Syncfusion.WinForms.Core.Styles.IStyleInfo,Syncfusion.WinForms.Core.Enums.StyleModifyType,System.Boolean)">
            <summary>
            Modify the style based on the style and modify type.
            </summary>
            <param name="istyle">The style info value.</param>
            <param name="mt">The modify type value.</param>
            <param name="shouldSetHasValue">The boolean value indicates should set value or not.</param>
        </member>
        <member name="M:Syncfusion.WinForms.Core.Styles.StyleInfoBase.GetDefaultStyle">
            <summary>
            Override this method to return a default style object for your derived class.
            </summary>
            <returns>A default style object.</returns>
            <remarks>
            You should cache the default style object in a static field.
            </remarks>
        </member>
        <member name="M:Syncfusion.WinForms.Core.Styles.StyleInfoBase.EqualsObject(System.Object,System.Object)">
            <summary>
            Compares two objects for equality. Works also with NULL references.
            </summary>
            <param name="obj1">The first object to compare.</param>
            <param name="obj2">The second object to compare.</param>
            <returns>True if both objects are equal.</returns>
        </member>
        <member name="M:Syncfusion.WinForms.Core.Styles.StyleInfoBase.GetDefaultValue(Syncfusion.WinForms.Core.Styles.StyleInfoProperty)">
            <summary>
            Gets the default value from a base style.
            </summary>
            <param name="sip">The sip.</param>
            <returns>Returns the object value.</returns>
        </member>
        <member name="M:Syncfusion.WinForms.Core.Styles.StyleInfoBase.Dispose(System.Boolean)">
            <summary> 
            Cleans up any resources being used by the <see cref="T:Syncfusion.WinForms.Core.Styles.StyleInfoBase"/> class.
            </summary>
            <param name="disposing">
            True to release both managed and unmanaged resources; false to release only unmanaged resources.
            </param>
        </member>
        <member name="M:Syncfusion.WinForms.Core.Styles.StyleInfoBase.SetStore(Syncfusion.WinForms.Core.Styles.StyleInfoStore)">
            <summary>
            Sets the <see cref="T:Syncfusion.WinForms.Core.Styles.StyleInfoStore"/> object that holds all the data for this style object.
            </summary>
            <param name="store">The StyleInfoStore value.</param>
        </member>
        <member name="M:Syncfusion.WinForms.Core.Styles.StyleInfoBase.GetDefaultStyleInfoStore(Syncfusion.WinForms.Core.Styles.StyleInfoProperty)">
            <summary>
            Locates the <see cref="T:Syncfusion.WinForms.Core.Styles.StyleInfoStore"/> in the list of base styles that 
            provides a specific property.
            </summary>
            <param name="sip">Identifies the property to look for.</param>
            <returns>The style store object that has the specified property.</returns>
        </member>
        <member name="M:Syncfusion.WinForms.Core.Styles.StyleInfoBase.IntGetDefaultStyleInfo(Syncfusion.WinForms.Core.Styles.StyleInfoProperty)">
            <summary>
            Locates the base style that has the specified property and returns its instance.
            </summary>
            <param name="sip">Identifies the property to look for.</param>
            <returns>The style object that has the specified property.</returns>
        </member>
        <member name="M:Syncfusion.WinForms.Core.Styles.StyleInfoBase.OnStyleChanged(Syncfusion.WinForms.Core.Styles.StyleInfoProperty)">
            <summary>
            Notifies the associated identity object that a specific property
            was changed and raises a <see cref="E:Syncfusion.WinForms.Core.Styles.StyleInfoBase.Changed"/> event.
            </summary>
            <param name="sip">Identifies the property to look for.</param>
        </member>
        <member name="M:Syncfusion.WinForms.Core.Styles.StyleInfoBase.OnStyleChanging(Syncfusion.WinForms.Core.Styles.StyleInfoProperty)">
            <summary>
            Notifies the associated identity object that a specific property
            will be changed and raises a <see cref="E:Syncfusion.WinForms.Core.Styles.StyleInfoBase.Changing"/> event.
            </summary>
            <param name="sip">Identifies the property to look for.</param>
        </member>
        <member name="M:Syncfusion.WinForms.Core.Styles.StyleInfoBase.IsValueModified(Syncfusion.WinForms.Core.Styles.StyleInfoProperty)">
            <summary>
            Indicates whether the specified property has been modified for the current object.
            </summary>
            <param name="sip">A <see cref="T:Syncfusion.WinForms.Core.Styles.StyleInfoProperty"/> that identifies the property to operate on.</param>
            <returns>Returns true if value is modified, otherwise returns false.</returns>
        </member>
        <member name="E:Syncfusion.WinForms.Core.Styles.StyleInfoBase.Changing">
            <summary>
            Occurs before a property in the style object or in a sub object is changed.
            </summary>
        </member>
        <member name="E:Syncfusion.WinForms.Core.Styles.StyleInfoBase.Changed">
            <summary>
            Occurs when a property in the style object or in a sub object is changed.
            </summary>
        </member>
        <member name="P:Syncfusion.WinForms.Core.Styles.StyleInfoBase.Identity">
            <summary>
            Gets or sets the identity information for the current <see cref="T:Syncfusion.WinForms.Core.Styles.StyleInfoBase"/>.
            </summary>
        </member>
        <member name="P:Syncfusion.WinForms.Core.Styles.StyleInfoBase.Store">
            <summary>
            Gets a <see cref="T:Syncfusion.WinForms.Core.Styles.StyleInfoStore"/> object that holds all the data for this style object.
            </summary>
        </member>
        <member name="P:Syncfusion.WinForms.Core.Styles.StyleInfoBase.CacheValues">
            <summary>
            Gets or sets a value indicating whether this instance should cache values for resolved base style properties.
            </summary>
            <value><c>true</c> if instance should cache values; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Syncfusion.WinForms.Core.Styles.StyleInfoBase.WeakReferenceChangedListeners">
            <summary>
            Gets a list of listeners that will be referenced using a WeakReference. The
            listeners must implement the <see cref="T:Syncfusion.WinForms.Core.Styles.IStyleChanged"/> interface. When
            this style object <see cref="M:Syncfusion.WinForms.Core.Styles.StyleInfoBase.OnStyleChanged(Syncfusion.WinForms.Core.Styles.StyleInfoProperty)"/> method is called it
            will then loop through all objects in this list and call each objects
            <see cref="M:Syncfusion.WinForms.Core.Styles.IStyleChanged.StyleChanged(Syncfusion.WinForms.Core.Styles.StyleChangedEventArgs)"/> method.
            </summary>
        </member>
        <member name="P:Syncfusion.WinForms.Core.Styles.StyleInfoBase.Updating">
            <summary>
            Gets a value indicating whether a <see cref="M:Syncfusion.WinForms.Core.Styles.StyleInfoBase.BeginUpdate"/> was called for this object.
            </summary>
        </member>
        <member name="P:Syncfusion.WinForms.Core.Styles.StyleInfoBase.IsEmpty">
            <summary>
            Gets a value indicating whether the style is empty.
            </summary>
        </member>
        <member name="P:Syncfusion.WinForms.Core.Styles.StyleInfoBase.IsChanged">
            <summary>
            Gets a value indicating whether any properties for this object have changed since it was applied last time.
            </summary>
        </member>
        <member name="P:Syncfusion.WinForms.Core.Styles.StyleInfoBase.StyleStore">
            <summary>
            Gets or sets a style store.
            </summary>
        </member>
        <member name="P:Syncfusion.WinForms.Core.Styles.StyleInfoBase.ExpandableObjects">
            <summary>
            Gets a expandable objects.
            </summary>
        </member>
        <member name="T:Syncfusion.WinForms.Core.Styles.IStyleInfoSubObject">
            <summary>
            <see cref="T:Syncfusion.WinForms.Core.Styles.IStyleInfoSubObject"/> defines an interface for classes
            used as sub-objects in a <see cref="T:Syncfusion.WinForms.Core.Styles.StyleInfoBase"/>.
            </summary>
            <remarks>
            <see cref="T:Syncfusion.WinForms.Core.Styles.StyleInfoSubObjectBase"/> implements this interface.
            </remarks>
        </member>
        <member name="M:Syncfusion.WinForms.Core.Styles.IStyleInfoSubObject.MakeCopy(Syncfusion.WinForms.Core.Styles.StyleInfoBase,Syncfusion.WinForms.Core.Styles.StyleInfoProperty)">
            <summary>
            Makes an exact copy of the current object.
            </summary>
            <param name="newOwner">The new owner style object for the copied object.</param>
            <param name="sip">The identifier for this object.</param>
            <returns>A copy of the current object and registered with the new owner style object.</returns>
        </member>
        <member name="P:Syncfusion.WinForms.Core.Styles.IStyleInfoSubObject.Sip">
            <summary>
            Gets a unique identifier for this sub object in the owner style object. 
            </summary>
        </member>
        <member name="P:Syncfusion.WinForms.Core.Styles.IStyleInfoSubObject.Owner">
            <summary>
            Gets a reference to the owner style object.
            </summary>
        </member>
        <member name="P:Syncfusion.WinForms.Core.Styles.IStyleInfoSubObject.Data">
            <summary>
            Gets the data for this object. This is the StyleInfoStore from the constructor.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Core.Styles.StyleInfoSubObjectBase.owner">
            <summary>
            The owner.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Core.Styles.StyleInfoSubObjectBase.sip">
            <summary>
            The style info property.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Core.Styles.StyleInfoSubObjectBase.sid">
            <summary>
            The identity value.
            </summary>
        </member>
        <member name="M:Syncfusion.WinForms.Core.Styles.StyleInfoSubObjectBase.#ctor(Syncfusion.WinForms.Core.Styles.StyleInfoStore)">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.WinForms.Core.Styles.StyleInfoSubObjectBase"/> class and associates it with an existing <see cref="T:Syncfusion.WinForms.Core.Styles.StyleInfoStore"/>.
            </summary>
            <param name="store">A <see cref="T:Syncfusion.WinForms.Core.Styles.StyleInfoStore"/> that holds data for this object.
            All changes in this style object will be saved in the <see cref="T:Syncfusion.WinForms.Core.Styles.StyleInfoStore"/> object.
            </param>
        </member>
        <member name="M:Syncfusion.WinForms.Core.Styles.StyleInfoSubObjectBase.#ctor(Syncfusion.WinForms.Core.Styles.StyleInfoSubObjectIdentity,Syncfusion.WinForms.Core.Styles.StyleInfoStore)">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.WinForms.Core.Styles.StyleInfoSubObjectBase"/> class and associates it with an existing <see cref="T:Syncfusion.WinForms.Core.Styles.StyleInfoStore"/>.
            </summary>
            <param name="identity">A <see cref="T:Syncfusion.WinForms.Core.Styles.StyleInfoSubObjectIdentity"/> that holds the identity for this <see cref="T:Syncfusion.WinForms.Core.Styles.StyleInfoBase"/>.</param>
            <param name="store">A <see cref="T:Syncfusion.WinForms.Core.Styles.StyleInfoStore"/> that holds data for this object.
            All changes in this style object will be saved in the <see cref="T:Syncfusion.WinForms.Core.Styles.StyleInfoStore"/> object.
            </param>
        </member>
        <member name="M:Syncfusion.WinForms.Core.Styles.StyleInfoSubObjectBase.MakeCopy(Syncfusion.WinForms.Core.Styles.StyleInfoBase,Syncfusion.WinForms.Core.Styles.StyleInfoProperty)">
            <summary>
            Makes an exact copy of the current object.
            </summary>
            <param name="newOwner">The new owner style object for the copied object.</param>
            <param name="sip">The identifier for this object.</param>
            <returns>A copy of the current object registered with the new owner style object.</returns>
        </member>
        <member name="M:Syncfusion.WinForms.Core.Styles.StyleInfoSubObjectBase.Dispose(System.Boolean)">
            <summary> 
            Cleans up any resources being used by the <see cref="T:Syncfusion.WinForms.Core.Styles.StyleInfoSubObjectBase"/> class.
            </summary>
            <param name="disposing">
            True to release both managed and unmanaged resources; false to release only unmanaged resources.
            </param>
        </member>
        <member name="M:Syncfusion.WinForms.Core.Styles.StyleInfoSubObjectBase.OnStyleChanged(Syncfusion.WinForms.Core.Styles.StyleInfoProperty)">
            <summary>
            Occurs when style gets changed.
            </summary>
            <param name="sip">A <see cref="T:Syncfusion.WinForms.Core.Styles.StyleInfoProperty"/> value.</param>
        </member>
        <member name="M:Syncfusion.WinForms.Core.Styles.StyleInfoSubObjectBase.IntGetDefaultStyleInfo(Syncfusion.WinForms.Core.Styles.StyleInfoProperty)">
            <summary>
            Locates the base style that has the specified property and returns its instance.
            </summary>
            <param name="sip">Identifies the property to look for.</param>
            <returns>The style object that has the specified property.</returns>
        </member>
        <member name="P:Syncfusion.WinForms.Core.Styles.StyleInfoSubObjectBase.SubObjectIdentity">
            <summary>
            Gets the <see cref="T:Syncfusion.WinForms.Core.Styles.StyleInfoSubObjectIdentity"/> with identity information about this object.
            </summary>
        </member>
        <member name="P:Syncfusion.WinForms.Core.Styles.StyleInfoSubObjectBase.Sip">
            <summary>
            Gets a unique identifier for this sub object in the owner style object. 
            </summary>
        </member>
        <member name="P:Syncfusion.WinForms.Core.Styles.StyleInfoSubObjectBase.Data">
            <summary>
            Gets the data for this object. This is the StyleInfoStore from the constructor.
            </summary>
        </member>
        <member name="P:Syncfusion.WinForms.Core.Styles.StyleInfoSubObjectBase.Owner">
            <summary>
            Gets a reference to the owner style object.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Controls.Styles.DropDownStyleInfo.defaultStyle">
            <summary>
            Maintains the default style of the <see cref="!:Syncfusion.WinForms.Input.ComboBoxEditorStyleInfo"/>.
            </summary>
        </member>
        <member name="M:Syncfusion.WinForms.Controls.Styles.DropDownStyleInfo.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.WinForms.Controls.Styles.DropDownStyleInfo"/> class.
            </summary>
        </member>
        <member name="M:Syncfusion.WinForms.Controls.Styles.DropDownStyleInfo.#ctor(Syncfusion.WinForms.Controls.Styles.DropDownStyleInfo)">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.WinForms.Controls.Styles.DropDownStyleInfo"/> class. 
            </summary>
            <param name="style">
            The style object that contains the original data.
            </param>
        </member>
        <member name="M:Syncfusion.WinForms.Controls.Styles.DropDownStyleInfo.#ctor(Syncfusion.WinForms.Controls.Styles.DropDownStyleInfoStore)">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.WinForms.Controls.Styles.DropDownStyleInfo"/> class. 
            </summary>
            <param name="store">
            A <see cref="T:Syncfusion.WinForms.Controls.Styles.DropDownStyleInfoStore"/> that holds data for this
                <see cref="T:Syncfusion.WinForms.Controls.Styles.DropDownStyleInfo"/>.
                All changes in this style object will be saved in the
                <see cref="T:Syncfusion.WinForms.Controls.Styles.DropDownStyleInfoStore"/> object.
            </param>
        </member>
        <member name="M:Syncfusion.WinForms.Controls.Styles.DropDownStyleInfo.#ctor(Syncfusion.WinForms.Core.Styles.StyleInfoSubObjectIdentity)">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.WinForms.Controls.Styles.DropDownStyleInfo"/> class. 
            </summary>
            <param name="identity">
            The identity.
            </param>
        </member>
        <member name="M:Syncfusion.WinForms.Controls.Styles.DropDownStyleInfo.#ctor(Syncfusion.WinForms.Core.Styles.StyleInfoSubObjectIdentity,Syncfusion.WinForms.Controls.Styles.DropDownStyleInfoStore)">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.WinForms.Controls.Styles.DropDownStyleInfo"/> class. 
            </summary>
            <param name="identity">
            The identity.
            </param>
            <param name="store">
            A <see cref="T:Syncfusion.WinForms.Controls.Styles.DropDownStyleInfoStore"/> that holds data for this
                <see cref="T:Syncfusion.WinForms.Controls.Styles.DropDownStyleInfo"/>.
                All changes in this style object will be saved in the
                <see cref="T:Syncfusion.WinForms.Controls.Styles.DropDownStyleInfoStore"/> object.
            </param>
        </member>
        <member name="M:Syncfusion.WinForms.Controls.Styles.DropDownStyleInfo.GetDefaultStyle">
            <summary>
            Gets the default style value of the <see cref="!:Syncfusion.WinForms.Input.ComboBoxEditorStyleInfo"/> class.
            </summary>
            <returns>Returns the default style value.</returns>
        </member>
        <member name="M:Syncfusion.WinForms.Controls.Styles.DropDownStyleInfo.ShouldSerializeGripperBackColor">
            <summary>
                Determines whether Font has been modified and its contents should be serialized at design-time.
            </summary>
            <returns>True if contents were changed; False otherwise.</returns>
        </member>
        <member name="M:Syncfusion.WinForms.Controls.Styles.DropDownStyleInfo.ShouldSerializeGripperForeColor">
            <summary>
                Determines whether Fore Color has been modified and its contents should be serialized at design-time.
            </summary>
            <returns>True if contents were changed; False otherwise.</returns>
        </member>
        <member name="P:Syncfusion.WinForms.Controls.Styles.DropDownStyleInfo.Default">
            <summary>
            Gets the default DropDownStyleInfo value.
            </summary>
        </member>
        <member name="P:Syncfusion.WinForms.Controls.Styles.DropDownStyleInfo.GripperForeColor">
            <summary>
            Gets or sets the fore color of textbox
            </summary>
        </member>
        <member name="P:Syncfusion.WinForms.Controls.Styles.DropDownStyleInfo.GripperBackColor">
            <summary>
            Gets or sets the back color of the textbox
            </summary>
        </member>
        <member name="T:Syncfusion.WinForms.Controls.Styles.DropDownStyleInfoStore">
            <summary>
                Represents the class holds the plain data for a style object excluding identity information.
            </summary>
        </member>
        <member name="T:Syncfusion.WinForms.Core.Styles.StyleInfoStore">
            <summary>
            Provides storage for the <see cref="T:Syncfusion.WinForms.Core.Styles.StyleInfoBase"/> object.
            </summary>
            <remarks>
            You cannot instantiate a <see cref="T:Syncfusion.WinForms.Core.Styles.StyleInfoStore"/> class directly. You have
            to derive a concrete class from this class that you can instantiate.<para/>
            In derived classes of <see cref="T:Syncfusion.WinForms.Core.Styles.StyleInfoBase"/>, you always need to
            implement a <see cref="T:Syncfusion.WinForms.Core.Styles.StyleInfoBase"/> / <see cref="T:Syncfusion.WinForms.Core.Styles.StyleInfoStore"/>
            pair. The <see cref="T:Syncfusion.WinForms.Core.Styles.StyleInfoStore"/> holds all the data that are specific
            to the style object and should be persisted.<para/>
            The <see cref="T:Syncfusion.WinForms.Core.Styles.StyleInfoBase"/> is a wrapper around the <see cref="T:Syncfusion.WinForms.Core.Styles.StyleInfoStore"/>.
            It provides type safe accessor properties to modify data of the underlying
            data store and can hold temporary information about the style object that
            does not need to be persisted.<para/>
            In Essential Grid for example, the GridStyleInfo class holds extensive identity
            information about a style object such as cached base styles, row and column index,
            a reference to the grid model and more. These are all the information that can be discarded
            when the style is no longer used (because maybe the cell is not visible anymore). Only
            the <see cref="T:Syncfusion.WinForms.Core.Styles.StyleInfoStore"/> part needs to be kept alive.
            <para/>
            <see cref="T:Syncfusion.WinForms.Core.Styles.StyleInfoStore"/> allows you to register any number of properties but keeps the data
            very memory efficient. Only properties that are actually used for a style
            object will be allocated for an object. The StyleObjectStore handles the storage of objects.
            For short integers, enumerations and Boolean values the data will be stored in a BitVector32
            structure to save even more memory.
            <para/>
            See the overview for <see cref="T:Syncfusion.WinForms.Core.Styles.StyleInfoBase"/> for further discussion about style objects.
            </remarks>
            <seealso cref="T:Syncfusion.WinForms.Core.Styles.StyleInfoIdentityBase"/>
            <seealso cref="T:Syncfusion.WinForms.Core.Styles.StyleInfoBase"/>
        </member>
        <member name="F:Syncfusion.WinForms.Core.Styles.StyleInfoStore.Maxbits">
            <summary>
            The maximum bits
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Core.Styles.StyleInfoStore.Maxbits1">
            <summary>
            The maximum bits
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Core.Styles.StyleInfoStore.xmlSerializers">
            <summary>
            The hash table contains the xml serializer.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Core.Styles.StyleInfoStore.data">
            <summary>
            The instance data.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Core.Styles.StyleInfoStore.include">
            <summary>
            The instance data.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Core.Styles.StyleInfoStore.changed">
            <summary>
            The instance data.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Core.Styles.StyleInfoStore.objects">
            <summary>
            The style info store object.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Core.Styles.StyleInfoStore.expandableObjects">
            <summary>
            The expandable objects.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Core.Styles.StyleInfoStore.cache">
            <summary>
            The cache.
            </summary>
        </member>
        <member name="M:Syncfusion.WinForms.Core.Styles.StyleInfoStore.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.WinForms.Core.Styles.StyleInfoStore"/> class from a serialization stream.
            </summary>
            <param name="info">An object that holds all the data needed to serialize or deserialize this instance.</param>
            <param name="context">Describes the source and destination of the serialized stream specified by info. </param>
        </member>
        <member name="M:Syncfusion.WinForms.Core.Styles.StyleInfoStore.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.WinForms.Core.Styles.StyleInfoStore"/> class.
            </summary>
        </member>
        <member name="M:Syncfusion.WinForms.Core.Styles.StyleInfoStore.RegisterXmlSerializer(System.Type,System.Xml.Serialization.XmlSerializer)">
            <summary>
            Registers the XmlSerializer for a specific type. This XmlSerializer will
            be used when a object of the specified type is read back in from an xml stream. 
            You can for example register an "ImageHolder" serializer for a custom ImageHolder type
            and have that serializer be used when GridStyleInfo.CellValue contains an ImageHolder object.
            </summary>
            <param name="type">The type.</param>
            <param name="xmlSerializer">The xml serializer.</param>
            <example>
            <code>
            XmlSerializer imageHolderSerializer = new XmlSerializer(typeof(object), new Type[] { typeof(ImageHolder) });
            GridStyleInfoStore.RegisterXmlSerializer(typeof(ImageHolder), imageHolderSerializer);
            </code>
            </example>
        </member>
        <member name="M:Syncfusion.WinForms.Core.Styles.StyleInfoStore.FindStyleInfoProperty(System.String)">
            <summary>
            Searches the <see cref="T:Syncfusion.WinForms.Core.Styles.StyleInfoProperty"/> with the given name.
            </summary>
            <param name="name">The name of the property to look for.</param>
            <returns>A <see cref="T:Syncfusion.WinForms.Core.Styles.StyleInfoProperty"/> that is associated with the specified name.</returns>
        </member>
        <member name="M:Syncfusion.WinForms.Core.Styles.StyleInfoStore.Clone">
            <summary>
            Creates an exact copy of the current object.
            </summary>
            <returns>A <see cref="T:Syncfusion.WinForms.Core.Styles.StyleInfoStore"/> with same data as the current object.</returns>
        </member>
        <member name="M:Syncfusion.WinForms.Core.Styles.StyleInfoStore.CopyTo(Syncfusion.WinForms.Core.Styles.StyleInfoStore)">
            <summary>
            Copies all properties to another <see cref="T:Syncfusion.WinForms.Core.Styles.StyleInfoStore"/>.
            </summary>
            <param name="target">The target to copy all properties to.</param>
        </member>
        <member name="M:Syncfusion.WinForms.Core.Styles.StyleInfoStore.Dispose">
            <summary>
            Releases all the resources used by the component.
            </summary>
        </member>
        <member name="M:Syncfusion.WinForms.Core.Styles.StyleInfoStore.Equals(System.Object)">
            <summary>
            Checks whether the instance is equal to the object.
            </summary>
            <param name="obj">The object need to compare.</param>
            <returns>True if both are equal otherwise false.</returns>
        </member>
        <member name="M:Syncfusion.WinForms.Core.Styles.StyleInfoStore.GetHashCode">
            <summary>
            Gets the hash code for the current instance.
            </summary>
            <returns>Returns the hash code.</returns>
        </member>
        <member name="M:Syncfusion.WinForms.Core.Styles.StyleInfoStore.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Returns the object data.
            </summary>
            <param name="info">The serialization information.</param>
            <param name="context">The streaming context.</param>
        </member>
        <member name="M:Syncfusion.WinForms.Core.Styles.StyleInfoStore.ToString">
            <summary>
            Converts this instance to the string value.
            </summary>
            <returns>Returns the converted string value.</returns>
        </member>
        <member name="M:Syncfusion.WinForms.Core.Styles.StyleInfoStore.Syncfusion#WinForms#Core#Styles#IStyleInfo#ParseString(System.String)">
            <summary>
            Checks whether the string as parsed into the current instance.
            </summary>
            <param name="s">The string to parse.</param>
        </member>
        <member name="M:Syncfusion.WinForms.Core.Styles.StyleInfoStore.ResetChangedBits">
            <summary>
            Resets all "Changed" bits that mark certain properties as modified.
            </summary>
        </member>
        <member name="M:Syncfusion.WinForms.Core.Styles.StyleInfoStore.Clear">
            <summary>
            Clears out all properties for this <see cref="T:Syncfusion.WinForms.Core.Styles.StyleInfoStore"/>.
            </summary>
        </member>
        <member name="M:Syncfusion.WinForms.Core.Styles.StyleInfoStore.HasValue(Syncfusion.WinForms.Core.Styles.StyleInfoProperty)">
            <summary>
            Indicates whether a specific property has been initialized for the current object.
            </summary>
            <param name="sip">A <see cref="T:Syncfusion.WinForms.Core.Styles.StyleInfoProperty"/> that identifies the property to operate on.</param>
            <returns>Returns true if has value, otherwise false.</returns>
        </member>
        <member name="M:Syncfusion.WinForms.Core.Styles.StyleInfoStore.IsValueModified(Syncfusion.WinForms.Core.Styles.StyleInfoProperty)">
            <summary>
            Indicates whether a specific property has been modified for the current object.
            </summary>
            <param name="sip">A <see cref="T:Syncfusion.WinForms.Core.Styles.StyleInfoProperty"/> that identifies the property to operate on.</param>
            <returns>Returns true if the value is modified, otherwise false.</returns>
        </member>
        <member name="M:Syncfusion.WinForms.Core.Styles.StyleInfoStore.SetValueModified(Syncfusion.WinForms.Core.Styles.StyleInfoProperty,System.Boolean)">
            <summary>
            Marks a specific property as modified or unmodified for the current object.
            </summary>
            <param name="sip">A <see cref="T:Syncfusion.WinForms.Core.Styles.StyleInfoProperty"/> that identifies the property to operate on.</param>
            <param name="value">The new value.</param>
        </member>
        <member name="M:Syncfusion.WinForms.Core.Styles.StyleInfoStore.ResetValue(Syncfusion.WinForms.Core.Styles.StyleInfoProperty)">
            <summary>
            Marks a specific property as uninitialized for the current object.
            </summary>
            <param name="sip">A <see cref="T:Syncfusion.WinForms.Core.Styles.StyleInfoProperty"/> that identifies the property to operate on.</param>
        </member>
        <member name="M:Syncfusion.WinForms.Core.Styles.StyleInfoStore.GetValue(Syncfusion.WinForms.Core.Styles.StyleInfoProperty)">
            <summary>
            Queries the value for a specific property that has been initialized for the current object.
            </summary>
            <param name="sipSrc">A <see cref="T:Syncfusion.WinForms.Core.Styles.StyleInfoProperty"/> that identifies the property to operate on.</param>
            <returns>Returns the object value.</returns>
        </member>
        <member name="M:Syncfusion.WinForms.Core.Styles.StyleInfoStore.GetShortValue(Syncfusion.WinForms.Core.Styles.StyleInfoProperty)">
            <summary>
            Queries the <see cref="T:System.Int16"/> value for a specific property that has been initialized for the current object.
            </summary>
            <param name="sip">A <see cref="T:Syncfusion.WinForms.Core.Styles.StyleInfoProperty"/> that identifies the property to operate on.</param>
            <returns>Returns the short value from the property.</returns>
        </member>
        <member name="M:Syncfusion.WinForms.Core.Styles.StyleInfoStore.SetValue(Syncfusion.WinForms.Core.Styles.StyleInfoProperty,System.Object)">
            <summary>
            Overloaded. Initializes the value for a specific property.
            </summary>
            <param name="sip">A <see cref="T:Syncfusion.WinForms.Core.Styles.StyleInfoProperty"/> that identifies the property to operate on.</param>
            <param name="value">The value to be saved for the property.</param>
        </member>
        <member name="M:Syncfusion.WinForms.Core.Styles.StyleInfoStore.SetValue(Syncfusion.WinForms.Core.Styles.StyleInfoProperty,System.Int16)">
            <summary>
            Initializes the <see cref="T:System.Int16"/> value for a specific property.
            </summary>
            <param name="sip">A <see cref="T:Syncfusion.WinForms.Core.Styles.StyleInfoProperty"/> that identifies the property to operate on.</param>
            <param name="value">The value to be saved for the property.</param>
        </member>
        <member name="M:Syncfusion.WinForms.Core.Styles.StyleInfoStore.IsSubset(Syncfusion.WinForms.Core.Styles.IStyleInfo)">
            <summary>
            Compares all properties with another style object and determines
            if the current set of initialized properties is a subset of
            the other style object.
            </summary>
            <param name="istyle">The other style to compare with.</param>
            <returns>True if this style object is a subset of the other style object.</returns>
        </member>
        <member name="M:Syncfusion.WinForms.Core.Styles.StyleInfoStore.ModifyStyle(Syncfusion.WinForms.Core.Styles.IStyleInfo,Syncfusion.WinForms.Core.Enums.StyleModifyType)">
            <summary>
            Applies changes to a style object as specified with <see cref="T:Syncfusion.WinForms.Core.Enums.StyleModifyType"/>.
            </summary>
            <param name="istyle">The style object to be applied on the current object.</param>
            <param name="mt">The actual operation to be performed.</param>
        </member>
        <member name="M:Syncfusion.WinForms.Core.Styles.StyleInfoStore.ModifyStyleKeepChanges(Syncfusion.WinForms.Core.Styles.IStyleInfo,Syncfusion.WinForms.Core.Enums.StyleModifyType)">
            <summary>
            Applies changes to a style object as specified with <see cref="T:Syncfusion.WinForms.Core.Enums.StyleModifyType"/>. If a property is modified
            its Changed flag is set so that the parent style object can identify modified properties in a subsequent Changed notification.
            </summary>
            <param name="istyle">The style object to be applied on the current object.</param>
            <param name="mt">The actual operation to be performed.</param>
        </member>
        <member name="M:Syncfusion.WinForms.Core.Styles.StyleInfoStore.MergeStyle(Syncfusion.WinForms.Core.Styles.IStyleInfo)">
            <summary>
            Merges two styles. Resets all properties that differ among the two style objects
            and keeps only those properties that are equal.
            </summary>
            <param name="istyle">The other style object this style object should merge with.</param>
        </member>
        <member name="M:Syncfusion.WinForms.Core.Styles.StyleInfoStore.InheritStyle(Syncfusion.WinForms.Core.Styles.IStyleInfo,Syncfusion.WinForms.Core.Enums.StyleModifyType)">
            <summary>
            Applies changes to a style object as specified with
            </summary>
            <param name="istyle"> The other style object this style object should inherit with. </param>
            <param name="mt"> Style operation </param>
        </member>
        <member name="M:Syncfusion.WinForms.Core.Styles.StyleInfoStore.WriteXml(System.Xml.XmlWriter)">
            <summary>
            Serializes all properties of this object to XML.
            </summary>
            <param name="writer">The xml writer.</param>
        </member>
        <member name="M:Syncfusion.WinForms.Core.Styles.StyleInfoStore.ReadXml(System.Xml.XmlReader)">
            <summary>
            Serializes all properties of this object from XML.
            </summary>
            <param name="r">The xml reader.</param>
        </member>
        <member name="M:Syncfusion.WinForms.Core.Styles.StyleInfoStore.GetSchema">
            <summary>
            Gets the schema value.
            </summary>
            <returns>Returns null.</returns>
        </member>
        <member name="M:Syncfusion.WinForms.Core.Styles.StyleInfoStore.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Returns the object data.
            </summary>
            <param name="info">The serialization information.</param>
            <param name="context">The streaming context.</param>
        </member>
        <member name="M:Syncfusion.WinForms.Core.Styles.StyleInfoStore.ProcessWriteXml(System.Xml.XmlWriter,Syncfusion.WinForms.Core.Styles.StyleInfoProperty)">
            <summary>
            Allows customization of serializing the StyleInfoProperty. Returns True if you override
            this method and do not want default serialization behavior for this property.
            </summary>
            <param name="writer">The xml writer value.</param>
            <param name="sip">The <see cref="T:Syncfusion.WinForms.Core.Styles.StyleInfoProperty"/> value to write.</param>
            <returns>Returns true if write the xml is success, otherwise false.</returns>
        </member>
        <member name="M:Syncfusion.WinForms.Core.Styles.StyleInfoStore.ProcessReadXml(System.Xml.XmlReader,Syncfusion.WinForms.Core.Styles.StyleInfoProperty)">
            <summary>
            Allows customization of serializing the StyleInfoProperty. Returns True if you override
            this method and do not want default serialization behavior for this property.
            </summary>
            <param name="reader">The xml reader.</param>
            <param name="sip">The <see cref="T:Syncfusion.WinForms.Core.Styles.StyleInfoProperty"/> value to write.</param>
            <returns>Returns true if read the xml is success, otherwise false.</returns>
        </member>
        <member name="M:Syncfusion.WinForms.Core.Styles.StyleInfoStore.Dispose(System.Boolean)">
            <summary> 
            Cleans up any resources being used by the <see cref="T:Syncfusion.WinForms.Core.Styles.StyleInfoStore"/> class.
            </summary>
            <param name="disposing">
            True to release both managed and unmanaged resources; false to release only unmanaged resources.
            </param>
        </member>
        <member name="M:Syncfusion.WinForms.Core.Styles.StyleInfoStore._Dispose(System.Object)">
            <summary>
            Dispose the old objects.
            </summary>
            <param name="oldObject">The old object to dispose.</param>
        </member>
        <member name="M:Syncfusion.WinForms.Core.Styles.StyleInfoStore._EqualsObject(System.Object,System.Object)">
            <summary>
            Compares both objects.
            </summary>
            <param name="obj1">The first object to compare.</param>
            <param name="obj2">The second object to compare.</param>
            <returns>Returns true if both are equal, otherwise false.</returns>
        </member>
        <member name="M:Syncfusion.WinForms.Core.Styles.StyleInfoStore.XmlSerialize(System.Xml.XmlWriter,System.Object,System.Type,System.Boolean)">
            <summary>
            Serialize the content.
            </summary>
            <param name="writer">The xml writer.</param>
            <param name="value">The object value.</param>
            <param name="type">The type.</param>
            <param name="anyType">The boolean value indicates any type.</param>
        </member>
        <member name="M:Syncfusion.WinForms.Core.Styles.StyleInfoStore.GetDefaultSerializeXmlBehavior(Syncfusion.WinForms.Core.Styles.StyleInfoProperty)">
            <summary>
            Gets the default xml serialize behavior.
            </summary>
            <param name="sip">The <see cref="T:Syncfusion.WinForms.Core.Styles.StyleInfoProperty"/> value.</param>
            <returns>Return the <see cref="T:Syncfusion.WinForms.Core.Enums.SerializeXmlBehavior"/> value.</returns>
        </member>
        <member name="M:Syncfusion.WinForms.Core.Styles.StyleInfoStore._IsSubsetProperty(Syncfusion.WinForms.Core.Styles.StyleInfoProperty,Syncfusion.WinForms.Core.Styles.StyleInfoStore)">
            <summary>
            Checks whether the property is sub set property or not.
            </summary>
            <param name="sip">The <see cref="T:Syncfusion.WinForms.Core.Styles.StyleInfoProperty"/> to check.</param>
            <param name="style">The style info store value.</param>
            <returns>Returns true, if the property is sub set. Otherwise false.</returns>
        </member>
        <member name="M:Syncfusion.WinForms.Core.Styles.StyleInfoStore._ToString(System.String)">
            <summary>
            Converts the instance to string.
            </summary>
            <param name="prefix">The prefix string used to convert.</param>
            <returns>Returns the string value.</returns>
        </member>
        <member name="M:Syncfusion.WinForms.Core.Styles.StyleInfoStore.FixVectorCount">
            <summary>
            Sets the vector count.
            </summary>
        </member>
        <member name="M:Syncfusion.WinForms.Core.Styles.StyleInfoStore.GetCurrentStorageSIP(Syncfusion.WinForms.Core.Styles.StyleInfoProperty)">
            <summary>
            Gets sip from current storage by sip from another store
            </summary>
            <param name="sip">The <see cref="T:Syncfusion.WinForms.Core.Styles.StyleInfoProperty"/> value.</param>
            <returns>Returns the <see cref="T:Syncfusion.WinForms.Core.Styles.StyleInfoProperty"/>.</returns>
        </member>
        <member name="M:Syncfusion.WinForms.Core.Styles.StyleInfoStore.ConversionSIP(Syncfusion.WinForms.Core.Styles.StyleInfoProperty)">
            <summary>
            Checks SIP belonging to current store. If current store doesn't contain SIP than returns SIP from current store with identical PropertyName. 
            </summary>
            <param name="sipSrc">The <see cref="T:Syncfusion.WinForms.Core.Styles.StyleInfoProperty"/> value.</param>
            <returns>Returns the converted <see cref="T:Syncfusion.WinForms.Core.Styles.StyleInfoProperty"/> value.</returns>
        </member>
        <member name="M:Syncfusion.WinForms.Core.Styles.StyleInfoStore._AssignProperty(Syncfusion.WinForms.Core.Styles.StyleInfoProperty,Syncfusion.WinForms.Core.Styles.StyleInfoStore)">
            <summary>
            Assign the property value.
            </summary>
            <param name="sip">The the <see cref="T:Syncfusion.WinForms.Core.Styles.StyleInfoProperty"/> value.</param>
            <param name="style">The <see cref="T:Syncfusion.WinForms.Core.Styles.StyleInfoStore"/> value.</param>
        </member>
        <member name="M:Syncfusion.WinForms.Core.Styles.StyleInfoStore._EqualsProperty(Syncfusion.WinForms.Core.Styles.StyleInfoProperty,Syncfusion.WinForms.Core.Styles.StyleInfoStore)">
            <summary>
            Checks the property is equals to the current instance.
            </summary>
            <param name="sip">The the <see cref="T:Syncfusion.WinForms.Core.Styles.StyleInfoProperty"/> value.</param>
            <param name="style">The <see cref="T:Syncfusion.WinForms.Core.Styles.StyleInfoStore"/> value.</param>
            <returns>Returns true if equal, otherwise false.</returns>
        </member>
        <member name="M:Syncfusion.WinForms.Core.Styles.StyleInfoStore._ModifyProperty(Syncfusion.WinForms.Core.Styles.StyleInfoProperty,Syncfusion.WinForms.Core.Styles.StyleInfoStore,Syncfusion.WinForms.Core.Enums.StyleModifyType)">
            <summary>
            Modify the property type based on the <see cref="T:Syncfusion.WinForms.Core.Enums.StyleModifyType"/> value.
            </summary>
            <param name="sip">The the <see cref="T:Syncfusion.WinForms.Core.Styles.StyleInfoProperty"/> value.</param>
            <param name="style">The <see cref="T:Syncfusion.WinForms.Core.Styles.StyleInfoStore"/> value.</param>
            <param name="mt">The modify type.</param>
        </member>
        <member name="M:Syncfusion.WinForms.Core.Styles.StyleInfoStore._IStyleInfoModify(Syncfusion.WinForms.Core.Styles.StyleInfoProperty,Syncfusion.WinForms.Core.Styles.StyleInfoStore,Syncfusion.WinForms.Core.Enums.StyleModifyType)">
            <summary>
            Modify the style value.
            </summary>
            <param name="sip">The the <see cref="T:Syncfusion.WinForms.Core.Styles.StyleInfoProperty"/> value.</param>
            <param name="style">The <see cref="T:Syncfusion.WinForms.Core.Styles.StyleInfoStore"/> value.</param>
            <param name="mt">The modify type.</param>
        </member>
        <member name="M:Syncfusion.WinForms.Core.Styles.StyleInfoStore._ModifyExpandableProperty(Syncfusion.WinForms.Core.Styles.StyleInfoProperty,Syncfusion.WinForms.Core.Styles.StyleInfoStore,Syncfusion.WinForms.Core.Enums.StyleModifyType)">
            <summary>
            Modify the expandable property.
            </summary>
            <param name="sip">The the <see cref="T:Syncfusion.WinForms.Core.Styles.StyleInfoProperty"/> value.</param>
            <param name="style">The <see cref="T:Syncfusion.WinForms.Core.Styles.StyleInfoStore"/> value.</param>
            <param name="mt">The modify type.</param>
        </member>
        <member name="M:Syncfusion.WinForms.Core.Styles.StyleInfoStore._GetObject(System.Int32)">
            <summary>
            Gets the object based on the key.
            </summary>
            <param name="key">The key to get the object.</param>
            <returns>Returns the object.</returns>
        </member>
        <member name="M:Syncfusion.WinForms.Core.Styles.StyleInfoStore._SetObject(System.Int32,System.Object,System.Boolean)">
            <summary>
            Sets the object to specific key.
            </summary>
            <param name="key">The key value.</param>
            <param name="value">The object to set in particular key.</param>
            <param name="isDisposable">The boolean value indicates whether the object is disposable.</param>
        </member>
        <member name="M:Syncfusion.WinForms.Core.Styles.StyleInfoStore._ResetObject(System.Int32,System.Boolean)">
            <summary>
            Reset the object.
            </summary>
            <param name="key">The key to reset.</param>
            <param name="isDisposable">The boolean value.</param>
        </member>
        <member name="M:Syncfusion.WinForms.Core.Styles.StyleInfoStore._GetExpandableObject(System.Int32)">
            <summary>
            Gets the expandable object based on the key.
            </summary>
            <param name="key">The key to get the expandable object.</param>
            <returns>Returns the expandable object from store.</returns>
        </member>
        <member name="M:Syncfusion.WinForms.Core.Styles.StyleInfoStore._SetExpandableObject(System.Int32,System.Object)">
            <summary>
            Sets the expandable object to the specified key.
            </summary>
            <param name="key">The key where to set the object.</param>
            <param name="value">The value to set.</param>
        </member>
        <member name="M:Syncfusion.WinForms.Core.Styles.StyleInfoStore._ResetExpandableObject(System.Int32)">
            <summary>
            Resets the expandable object at specified key index.
            </summary>
            <param name="key">The key value to reset the expandable object.</param>
        </member>
        <member name="M:Syncfusion.WinForms.Core.Styles.StyleInfoStore._CopyStyle(Syncfusion.WinForms.Core.Styles.StyleInfoStore)">
            <summary>
            Copy the <see cref="T:Syncfusion.WinForms.Core.Styles.StyleInfoStore"/> value.
            </summary>
            <param name="style">The <see cref="T:Syncfusion.WinForms.Core.Styles.StyleInfoStore"/> value to copy.</param>
        </member>
        <member name="M:Syncfusion.WinForms.Core.Styles.StyleInfoStore.MultiModifyProperty(Syncfusion.WinForms.Core.Styles.StyleInfoProperty,Syncfusion.WinForms.Core.Styles.StyleInfoStore,Syncfusion.WinForms.Core.Enums.StyleModifyType)">
            <summary>
            Modify the property from different stores
            </summary>
            <param name="sip">The the <see cref="T:Syncfusion.WinForms.Core.Styles.StyleInfoProperty"/> value.</param>
            <param name="style">The <see cref="T:Syncfusion.WinForms.Core.Styles.StyleInfoStore"/> value.</param>
            <param name="mt">The modify type.</param>
        </member>
        <member name="M:Syncfusion.WinForms.Core.Styles.StyleInfoStore.MultiAssignProperty(Syncfusion.WinForms.Core.Styles.StyleInfoProperty,Syncfusion.WinForms.Core.Styles.StyleInfoStore)">
            <summary>
            Assigns property with sipInfo from style
            </summary>
            <param name="sip">The the <see cref="T:Syncfusion.WinForms.Core.Styles.StyleInfoProperty"/> value.</param>
            <param name="style">The <see cref="T:Syncfusion.WinForms.Core.Styles.StyleInfoStore"/> value.</param>
        </member>
        <member name="M:Syncfusion.WinForms.Core.Styles.StyleInfoStore.MultiResetValue(Syncfusion.WinForms.Core.Styles.StyleInfoProperty)">
            <summary>
            if the given <see cref="T:Syncfusion.WinForms.Core.Styles.StyleInfoProperty"/> is different store with current store than find StyleInfoProperty in current store with identical PropertyName and reset property
            </summary>
            <param name="sipSrc"> sip from some  store</param>
        </member>
        <member name="M:Syncfusion.WinForms.Core.Styles.StyleInfoStore.MultiModifyExpandableProperty(Syncfusion.WinForms.Core.Styles.StyleInfoProperty,Syncfusion.WinForms.Core.Styles.StyleInfoStore,Syncfusion.WinForms.Core.Enums.StyleModifyType)">
            <summary>
             Modifies expanded property
            </summary>
            <param name="sip"> sip from another storage </param>
            <param name="style"> style source </param>
            <param name="mt"> The modify style information.</param>
        </member>
        <member name="P:Syncfusion.WinForms.Core.Styles.StyleInfoStore.StyleInfoProperties">
            <summary>
            Gets a collection with <see cref="T:Syncfusion.WinForms.Core.Styles.StyleInfoProperty"/> objects.
            </summary>
        </member>
        <member name="P:Syncfusion.WinForms.Core.Styles.StyleInfoStore.IsEmpty">
            <summary>
            Gets a value indicating whether this is an empty object and no properties have been initialized.
            </summary>
        </member>
        <member name="P:Syncfusion.WinForms.Core.Styles.StyleInfoStore.IsChanged">
            <summary>
            Gets a value indicating whether any properties have been changed.
            </summary>
        </member>
        <member name="P:Syncfusion.WinForms.Core.Styles.StyleInfoStore.PropertyGridSortOrder">
            <summary>
            Gets the <see cref="T:Syncfusion.WinForms.Core.Styles.StyleInfoBaseConverter"/> class checks this property
            to find out about the sort order of the properties in this <see cref="T:Syncfusion.WinForms.Core.Styles.StyleInfoStore"/>.
            </summary>
        </member>
        <member name="P:Syncfusion.WinForms.Core.Styles.StyleInfoStore.Syncfusion#WinForms#Core#Styles#IStyleInfo#Store">
            <summary>
            Gets the style info store value.
            </summary>
        </member>
        <member name="P:Syncfusion.WinForms.Core.Styles.StyleInfoStore.StaticDataStore">
            <summary>
            Gets a Static data must be declared static in derived classes (this avoids collisions
            when StyleInfoStore is used in the same project for different types of style
            classes).
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Controls.Styles.DropDownStyleInfoStore.GripperBackColorProperty">
            <summary>
                Provides information about the <see cref="!:Syncfusion.WinForms.DataGrid.Styles.CellStyleInfo.BackColor"/> property.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Controls.Styles.DropDownStyleInfoStore.GripperForeColorProperty">
            <summary>
                Provides information about the <see cref="!:Syncfusion.WinForms.DataGrid.Styles.CellStyleInfo.HoverBackColor"/> property.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Controls.Styles.DropDownStyleInfoStore.sd">
            <summary>
                Maintains the static data.
            </summary>
        </member>
        <member name="M:Syncfusion.WinForms.Controls.Styles.DropDownStyleInfoStore.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.WinForms.Controls.Styles.DropDownStyleInfoStore"/> class. 
            </summary>
        </member>
        <member name="M:Syncfusion.WinForms.Controls.Styles.DropDownStyleInfoStore.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.WinForms.Controls.Styles.DropDownStyleInfoStore"/> class.
            </summary>
            <param name="info">Populates the SerializationInfo store with the name, type, and value of each piece of information it wants to serialize</param>
            <param name="context">Describes the source and destination of a given serialized stream, and provides an additional caller-defined context.</param>
        </member>
        <member name="M:Syncfusion.WinForms.Controls.Styles.DropDownStyleInfoStore.Clone">
            <summary>
                Creates a copy of the current object.
            </summary>
            <returns>A duplicate of the current object.</returns>
        </member>
        <member name="M:Syncfusion.WinForms.Controls.Styles.DropDownStyleInfoStore.GetStaticData">
            <summary>
            Initializes the <see cref="!:Syncfusion.WinForms.DataGrid.Styles.CellStyleInfoStore.sd"/>, if<see cref="F:Syncfusion.WinForms.Controls.Styles.DropDownStyleInfoStore.sd"/> is null.
            </summary>
            <returns><see cref="!:Syncfusion.WinForms.DataGrid.Styles.CellStyleInfoStore.sd"/></returns>
        </member>
        <member name="P:Syncfusion.WinForms.Controls.Styles.DropDownStyleInfoStore.StaticDataStore">
            <summary>
                Overridden to get the static data source.
            </summary>
        </member>
        <member name="T:Syncfusion.WinForms.Core.Popup">
            <summary>
            Modified PopupControlContainer that takes a child control and
            adds a sizable grip so that the window can be sized.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Core.Popup.showGripper">
            <summary>
            Initializes the container control.
            </summary>       
        </member>
        <member name="F:Syncfusion.WinForms.Core.Popup.childControl">
            <summary>
            The child control that is to be embedded.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Core.Popup.isResizing">
            <summary>
            The boolean value indicates the currently the window is resizing.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Core.Popup.showButtons">
            <summary>
            The boolean value.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Core.Popup.fitToChildSize">
            <summary>
            Indicates whether size is dependant of child control size.
            </summary>
        </member>
        <member name="M:Syncfusion.WinForms.Core.Popup.#ctor(System.Windows.Forms.Control)">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.WinForms.Core.Popup"/> class.
            </summary>
            <param name="childControl">The child control</param>
        </member>
        <member name="M:Syncfusion.WinForms.Core.Popup.Show(System.Drawing.Point)">
            <summary>
            Displays the popup control.
            </summary>
            <param name="location">The location at which the popup's left top position will appear.</param>
        </member>
        <member name="M:Syncfusion.WinForms.Core.Popup.ConfirmDeactivate">
            <summary>
            Confirm while deactivate.
            </summary>
        </member>
        <member name="M:Syncfusion.WinForms.Core.Popup.AdjustPopupHostBounds">
            <summary>
            Adjusts bounds of the popupHost.
            </summary>
        </member>
        <member name="M:Syncfusion.WinForms.Core.Popup.Dispose(System.Boolean)">
            <summary>
            Disposing the elements.
            </summary>
            <param name="disposing">The boolean value.</param>
        </member>
        <member name="M:Syncfusion.WinForms.Core.Popup.OnPaint(System.Windows.Forms.PaintEventArgs)">
            <summary>
            Override the paint.
            </summary>
            <param name="e">The paint event arguments</param>
        </member>
        <member name="M:Syncfusion.WinForms.Core.Popup.CreatePopupHost">
            <summary>
            Create the popup host.
            </summary>
            <returns>Returns the sizable popup host.</returns>
        </member>
        <member name="M:Syncfusion.WinForms.Core.Popup.OnMouseDown(System.Windows.Forms.MouseEventArgs)">
            <summary>
            Occurs when mouse down.
            </summary>
            <param name="e">A mouse event arguments</param>
        </member>
        <member name="M:Syncfusion.WinForms.Core.Popup.OnMouseLeave(System.EventArgs)">
            <summary>
            Occurs when mouse leave from the control.
            </summary>
            <param name="e">A event data.</param>
        </member>
        <member name="M:Syncfusion.WinForms.Core.Popup.OnMouseMove(System.Windows.Forms.MouseEventArgs)">
            <summary>
            Occurs while moue moved.
            </summary>
            <param name="e">The mouse event arguments.</param>
        </member>
        <member name="M:Syncfusion.WinForms.Core.Popup.OnMouseUp(System.Windows.Forms.MouseEventArgs)">
            <summary>
            Occurs when mouse up.
            </summary>
            <param name="e">The mouse event arguments</param>
        </member>
        <member name="M:Syncfusion.WinForms.Core.Popup.GetIsMirrored">
            <summary>
            Gets the right to left mode.
            </summary>
            <returns>Returns true if right to left mode enabled</returns>
        </member>
        <member name="M:Syncfusion.WinForms.Core.Popup.OnContentPaint(System.Object,System.Windows.Forms.PaintEventArgs)">
            <summary>
            Used to paint the content.
            </summary>
            <param name="sender">The source control.</param>
            <param name="e">The <see cref="T:System.Windows.Forms.PaintEventArgs"/> that contains the event data.</param>
        </member>
        <member name="M:Syncfusion.WinForms.Core.Popup.DrawResizeGrip(System.Windows.Forms.PaintEventArgs)">
            <summary>
            Draws the resize gripper for the control.
            </summary>
            <param name="e">The <see cref="T:System.Windows.Forms.PaintEventArgs"/> that contains event data.</param>
        </member>
        <member name="P:Syncfusion.WinForms.Core.Popup.ShowButtons">
            <summary>
            Gets or sets a value indicating whether the button can show or not.
            </summary>
        </member>
        <member name="P:Syncfusion.WinForms.Core.Popup.ShowGripper">
            <summary>
            Gets or sets a value indicating whether the gripper can show or not.
            </summary>
        </member>
        <member name="P:Syncfusion.WinForms.Core.Popup.ScaleFactor">
            <summary>
            Gets a value for the dpi factor
            </summary>
        </member>
        <member name="P:Syncfusion.WinForms.Core.Popup.FitToChildControlSize">
            <summary>
            Gets or sets a value indicating whether size is dependant of child control size.
            </summary>
        </member>
        <member name="P:Syncfusion.WinForms.Core.Popup.ChildControl">
            <summary>
            Gets the child control
            </summary>
        </member>
        <member name="P:Syncfusion.WinForms.Core.Popup.BottomGripBounds">
            <summary>
            Gets the bottom area of the resizing cursor.
            </summary>
        </member>
        <member name="P:Syncfusion.WinForms.Core.Popup.BottomRightGripBounds">
            <summary>
            Gets the bottom right area of the resizing cursor.
            </summary>
        </member>
        <member name="T:Syncfusion.WinForms.Core.PopupHost">
            <summary>
            Derives from the PopupHost class and adds a gripper label and
            makes the form sizable.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Core.PopupHost.MinBoundsWidth">
            <summary>
            The minimum bounds width.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Core.PopupHost.MinBoundsHeight">
            <summary>
            The minimum bounds height.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Core.PopupHost.OffsetY">
            <summary>
            Used when ShowGripper or ShowCloseButton property is set to true;
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Core.PopupHost.currentSize">
            <summary>
            The current size - used when resizing.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Core.PopupHost.isResizing">
            <summary>
            Indicates whether the window is being resized.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Core.PopupHost.showButtons">
            <summary>
            The boolean value.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Core.PopupHost.hostRect">
            <summary>
            The host rectangle.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Core.PopupHost.showGripper">
            <summary>
            Indicates whether to show gripper.
            </summary>
        </member>
        <member name="M:Syncfusion.WinForms.Core.PopupHost.#ctor(System.Windows.Forms.Control)">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.WinForms.Core.PopupHost"/> class.
            </summary>
            <param name="childControl">The child control</param>
        </member>
        <member name="M:Syncfusion.WinForms.Core.PopupHost.HidePopup">
            <summary>
            Hides the popup.
            </summary>
        </member>
        <member name="M:Syncfusion.WinForms.Core.PopupHost.HandleGripperMouseDown(System.Object,System.Windows.Forms.MouseEventArgs)">
            <summary>
            Handles the MouseDown event of the gripper label.
            </summary>
            <param name="sender">The gripper label.</param>
            <param name="e">The event data.</param>
        </member>
        <member name="M:Syncfusion.WinForms.Core.PopupHost.HandleGripperMouseUp(System.Object,System.Windows.Forms.MouseEventArgs)">
            <summary>
            Handles the MouseUp event of the gripper label.
            </summary>
            <param name="sender">The gripper label.</param>
            <param name="e">The event data.</param>
        </member>
        <member name="M:Syncfusion.WinForms.Core.PopupHost.ProcessGripperDragRelease(System.Boolean)">
            <summary>
            Process the resizing release operation.
            </summary>
            <param name="isCanceled">The boolean value.</param>
        </member>
        <member name="M:Syncfusion.WinForms.Core.PopupHost.HandleGripperMouseMove(System.Object,System.Windows.Forms.MouseEventArgs)">
            <summary>
            Handler for the MouseMove event of the gripper label.
            </summary>
            <param name="sender">The gripper label.</param>
            <param name="e">The event data.</param>
        </member>
        <member name="M:Syncfusion.WinForms.Core.PopupHost.Dispose(System.Boolean)">
            <summary>
            Releases the unmanaged resources.
            </summary>
            <param name="disposing">The boolean value.</param>
        </member>
        <member name="M:Syncfusion.WinForms.Core.PopupHost.ComputeSize">
            <summary>
            Overrides PopupHost.ComputeMySize.
            </summary>
        </member>
        <member name="M:Syncfusion.WinForms.Core.PopupHost.SetBoundsCore(System.Int32,System.Int32,System.Int32,System.Int32,System.Windows.Forms.BoundsSpecified)">
            <summary>
            Sets the bounds.
            </summary>
            <param name="x">The x position.</param>
            <param name="y">The y position.</param>
            <param name="width">The width</param>
            <param name="height">The height.</param>
            <param name="specified">The boolean value.</param>
        </member>
        <member name="P:Syncfusion.WinForms.Core.PopupHost.ShowGripper">
            <summary>
            Gets or sets a value indicating whether a gripper will be shown that can used for resizing
            </summary>
        </member>
        <member name="P:Syncfusion.WinForms.Core.PopupHost.ShowButtons">
            <summary>
            Gets or sets a value indicating whether the button can disable or not.
            </summary>
        </member>
        <member name="T:Syncfusion.WinForms.Controls.Accessibility.ButtonAccessibilityObject">
            <summary>
            Represents the class that provides the accessibility object for the SfButton.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Controls.Accessibility.ButtonAccessibilityObject.sfButton">
            <summary>
            Specifies the accessibility control.
            </summary>
        </member>
        <member name="M:Syncfusion.WinForms.Controls.Accessibility.ButtonAccessibilityObject.#ctor(Syncfusion.WinForms.Controls.SfButton)">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.WinForms.Controls.Accessibility.ButtonAccessibilityObject"/> class.
            </summary>
            <param name="sfButton">The SfButton which needs to create the accessibility object.</param>
        </member>
        <member name="P:Syncfusion.WinForms.Controls.Accessibility.ButtonAccessibilityObject.Role">
            <summary>
            Gets the AccessibleRole of the <see cref="T:Syncfusion.WinForms.Controls.SfButton"/> control.
            </summary>
        </member>
        <member name="P:Syncfusion.WinForms.Controls.Accessibility.ButtonAccessibilityObject.Name">
            <summary>
            Gets the AccessibleName of the <see cref="T:Syncfusion.WinForms.Controls.SfButton"/> control.
            </summary>
        </member>
        <member name="P:Syncfusion.WinForms.Controls.Accessibility.ButtonAccessibilityObject.Parent">
            <summary>
            Gets the accessibility object of the <see cref="T:Syncfusion.WinForms.Controls.SfButton"/> parent.
            </summary>
        </member>
        <member name="P:Syncfusion.WinForms.Controls.Accessibility.ButtonAccessibilityObject.Description">
            <summary>
            Gets the AccessibleDescription of the <see cref="T:Syncfusion.WinForms.Controls.SfButton"/> control.
            </summary>
        </member>
        <member name="P:Syncfusion.WinForms.Controls.Accessibility.ButtonAccessibilityObject.Bounds">
            <summary>
            Gets the bounds of the <see cref="T:Syncfusion.WinForms.Controls.SfButton"/> control.
            </summary>
        </member>
        <member name="T:Syncfusion.WinForms.Controls.Accessibility.FormAccessibilityObject">
            <summary>
            Represents the class that provides the accessibility object for the SfForm.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Controls.Accessibility.FormAccessibilityObject.sfForm">
            <summary>
            Specifies the SfForm for the accessibility object.
            </summary>
        </member>
        <member name="M:Syncfusion.WinForms.Controls.Accessibility.FormAccessibilityObject.#ctor(Syncfusion.WinForms.Controls.SfForm)">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.WinForms.Controls.Accessibility.FormAccessibilityObject"/> class.
            </summary>
            <param name="sfForm">The SfForm.</param>
        </member>
        <member name="M:Syncfusion.WinForms.Controls.Accessibility.FormAccessibilityObject.GetChildCount">
            <summary>
            Overridden to update the child count of the SfForm.
            </summary>
            <returns>Returns the child count of the Form.</returns>
        </member>
        <member name="M:Syncfusion.WinForms.Controls.Accessibility.FormAccessibilityObject.GetChild(System.Int32)">
            <summary>
            Overridden to return the inner elements of the form.
            </summary>
            <param name="index">The index of the child.</param>
            <returns>Returns the accessibility object of the child.</returns>
        </member>
        <member name="P:Syncfusion.WinForms.Controls.Accessibility.FormAccessibilityObject.Role">
            <summary>
            Gets the AccessibleRole of the <see cref="T:Syncfusion.WinForms.Controls.SfForm"/>.
            </summary>
        </member>
        <member name="P:Syncfusion.WinForms.Controls.Accessibility.FormAccessibilityObject.Name">
            <summary>
            Gets the AccessibleName of the <see cref="T:Syncfusion.WinForms.Controls.SfForm"/>.
            </summary>
        </member>
        <member name="P:Syncfusion.WinForms.Controls.Accessibility.FormAccessibilityObject.Parent">
            <summary>
            Gets the accessibility object of the <see cref="T:Syncfusion.WinForms.Controls.SfForm"/> parent.
            </summary>
        </member>
        <member name="P:Syncfusion.WinForms.Controls.Accessibility.FormAccessibilityObject.Description">
            <summary>
            Gets the AccessibleDescription of the <see cref="T:Syncfusion.WinForms.Controls.SfForm"/>.
            </summary>
        </member>
        <member name="P:Syncfusion.WinForms.Controls.Accessibility.FormAccessibilityObject.Bounds">
            <summary>
            Gets the bounds of the <see cref="T:Syncfusion.WinForms.Controls.SfForm"/>.
            </summary>
        </member>
        <member name="T:Syncfusion.WinForms.Controls.Accessibility.TitleBarAccessibilityObject">
            <summary>
            Represents the class that provides the accessibility object for the SfForm TitleBar.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Controls.Accessibility.TitleBarAccessibilityObject.sfForm">
            <summary>
            Specifies the parent form of the title bar.
            </summary>
        </member>
        <member name="M:Syncfusion.WinForms.Controls.Accessibility.TitleBarAccessibilityObject.#ctor(Syncfusion.WinForms.Controls.SfForm)">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.WinForms.Controls.Accessibility.TitleBarAccessibilityObject"/> class.
            </summary>
            <param name="sfForm">The parent of the title bar.</param>
        </member>
        <member name="M:Syncfusion.WinForms.Controls.Accessibility.TitleBarAccessibilityObject.GetChildCount">
            <summary>
            Gets the child count of the form.
            </summary>
            <returns>Returns the count of the accessibility object.</returns>
        </member>
        <member name="M:Syncfusion.WinForms.Controls.Accessibility.TitleBarAccessibilityObject.GetChild(System.Int32)">
            <summary>
            Gets the child accessibility object of the TitleBar.
            </summary>
            <param name="index">The index of the child.</param>
            <returns>Returns the accessibility object of the child control with the given index.</returns>
        </member>
        <member name="P:Syncfusion.WinForms.Controls.Accessibility.TitleBarAccessibilityObject.Role">
            <summary>
            Gets the AccessibleRole of the <see cref="T:Syncfusion.WinForms.Controls.SfForm"/>.
            </summary>
        </member>
        <member name="P:Syncfusion.WinForms.Controls.Accessibility.TitleBarAccessibilityObject.Name">
            <summary>
            Gets the AccessibleName of the <see cref="T:Syncfusion.WinForms.Controls.SfForm"/>.
            </summary>
        </member>
        <member name="P:Syncfusion.WinForms.Controls.Accessibility.TitleBarAccessibilityObject.Parent">
            <summary>
            Gets the accessibility object of the <see cref="T:Syncfusion.WinForms.Controls.SfForm"/> parent.
            </summary>
        </member>
        <member name="P:Syncfusion.WinForms.Controls.Accessibility.TitleBarAccessibilityObject.Description">
            <summary>
            Gets the AccessibleDescription of the <see cref="T:Syncfusion.WinForms.Controls.SfForm"/>.
            </summary>
        </member>
        <member name="P:Syncfusion.WinForms.Controls.Accessibility.TitleBarAccessibilityObject.Bounds">
            <summary>
            Gets the bounds of the <see cref="T:Syncfusion.WinForms.Controls.SfForm"/>.
            </summary>
        </member>
        <member name="T:Syncfusion.WinForms.Controls.Accessibility.TitleBarElementAccessibilityObject">
            <summary>
            Represents the class that provides the accessibility object for the SfForm TitleBar.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Controls.Accessibility.TitleBarElementAccessibilityObject.sfForm">
            <summary>
            Specifies the parent for the Title bar.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Controls.Accessibility.TitleBarElementAccessibilityObject.index">
            <summary>
            Specifies the index of the child.
            </summary>
        </member>
        <member name="M:Syncfusion.WinForms.Controls.Accessibility.TitleBarElementAccessibilityObject.#ctor(Syncfusion.WinForms.Controls.SfForm,System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.WinForms.Controls.Accessibility.TitleBarElementAccessibilityObject"/> class.
            </summary>
            <param name="sfForm">The parent form of the title bar.</param>
            <param name="index">The index of the child.</param>
        </member>
        <member name="P:Syncfusion.WinForms.Controls.Accessibility.TitleBarElementAccessibilityObject.Role">
            <summary>
            Gets the AccessibleRole of the <see cref="T:Syncfusion.WinForms.Controls.SfForm"/>.
            </summary>
        </member>
        <member name="P:Syncfusion.WinForms.Controls.Accessibility.TitleBarElementAccessibilityObject.Name">
            <summary>
            Gets the AccessibleName of the <see cref="T:Syncfusion.WinForms.Controls.SfForm"/>.
            </summary>
        </member>
        <member name="P:Syncfusion.WinForms.Controls.Accessibility.TitleBarElementAccessibilityObject.Parent">
            <summary>
            Gets the accessibility object of the <see cref="T:Syncfusion.WinForms.Controls.SfForm"/> parent.
            </summary>
        </member>
        <member name="P:Syncfusion.WinForms.Controls.Accessibility.TitleBarElementAccessibilityObject.Description">
            <summary>
            Gets the AccessibleDescription of the <see cref="T:Syncfusion.WinForms.Controls.SfForm"/>.
            </summary>
        </member>
        <member name="P:Syncfusion.WinForms.Controls.Accessibility.TitleBarElementAccessibilityObject.Bounds">
            <summary>
            Gets the bounds of the <see cref="T:Syncfusion.WinForms.Controls.SfForm"/>.
            </summary>
        </member>
        <member name="T:Syncfusion.WinForms.Controls.Styles.FormStyleInfoStore">
            <summary>
            Provides storage for the <see cref="T:Syncfusion.WinForms.Controls.Styles.FormVisualStyle"/> object.
            </summary>
        </member>
        <member name="T:Syncfusion.WinForms.Core.Styles.VisualStyleInfoStore">
            <summary>
            Provides storage for the <see cref="T:Syncfusion.WinForms.Core.Styles.VisualStyleBase"/> object.
            </summary>   
        </member>
        <member name="M:Syncfusion.WinForms.Core.Styles.VisualStyleInfoStore.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.WinForms.Core.Styles.VisualStyleInfoStore"/> class.
            </summary>
        </member>
        <member name="M:Syncfusion.WinForms.Core.Styles.VisualStyleInfoStore.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.WinForms.Core.Styles.VisualStyleInfoStore"/> class from a serialization stream.
            </summary>
            <param name="info">An object that holds all the data needed to serialize or deserialize this instance.</param>
            <param name="context">Describes the source and destination of the serialized stream specified by info. </param>
        </member>
        <member name="P:Syncfusion.WinForms.Core.Styles.VisualStyleInfoStore.StaticDataStore">
            <summary>
            Gets a Static data must be declared static in derived classes (this avoids collisions
            when StyleInfoStore is used in the same project for different types of style
            classes).
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Controls.Styles.FormStyleInfoStore.ForeColorProperty">
            <summary>
            Provides information about the <see cref="P:Syncfusion.WinForms.Controls.Styles.FormVisualStyle.ForeColor"/> property.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Controls.Styles.FormStyleInfoStore.BackColorProperty">
            <summary>
            Provides information about the <see cref="P:Syncfusion.WinForms.Controls.Styles.FormVisualStyle.BackColor"/> property.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Controls.Styles.FormStyleInfoStore.BorderProperty">
            <summary>
            Provides information about the <see cref="P:Syncfusion.WinForms.Controls.Styles.FormVisualStyle.Border"/> property.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Controls.Styles.FormStyleInfoStore.InactiveBorderProperty">
            <summary>
            Provides information about the <see cref="P:Syncfusion.WinForms.Controls.Styles.FormVisualStyle.InactiveBorder"/> property.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Controls.Styles.FormStyleInfoStore.ShadowOpacityProperty">
            <summary>
            Provides information about the <see cref="P:Syncfusion.WinForms.Controls.Styles.FormVisualStyle.ShadowOpacity"/> property.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Controls.Styles.FormStyleInfoStore.InactiveShadowOpacityProperty">
            <summary>
            Provides information about the <see cref="P:Syncfusion.WinForms.Controls.Styles.FormVisualStyle.InactiveShadowOpacity"/> property.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Controls.Styles.FormStyleInfoStore.TitleBarProperty">
            <summary>
            Provides information about the <see cref="P:Syncfusion.WinForms.Controls.Styles.FormVisualStyle.TitleBar"/> property.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Controls.Styles.FormStyleInfoStore.MdiChildProperty">
            <summary>
            Provides information about the <see cref="P:Syncfusion.WinForms.Controls.Styles.FormVisualStyle.MdiChild"/> property.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Controls.Styles.FormStyleInfoStore.staticData">
            <summary>
            It contains the value of the <see cref="!:Syncfusion.WinForms.Controls.Styles.FormVisualStyleStore.StaticDataStore"/> property value.
            </summary>
        </member>
        <member name="M:Syncfusion.WinForms.Controls.Styles.FormStyleInfoStore.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.WinForms.Controls.Styles.FormStyleInfoStore"/> class.
            </summary>
        </member>
        <member name="M:Syncfusion.WinForms.Controls.Styles.FormStyleInfoStore.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.WinForms.Controls.Styles.FormStyleInfoStore"/> class from a serialization stream.
            </summary>
            <param name="info">An object that holds all the data needed to serialize or deserialize this instance.</param>
            <param name="context">Describes the source and destination of the serialized stream specified by info. </param>
        </member>
        <member name="M:Syncfusion.WinForms.Controls.Styles.FormStyleInfoStore.GetStaticData">
            <summary>
            Initializes the <see cref="T:Syncfusion.WinForms.Core.Styles.StaticData"/>, if <see cref="F:Syncfusion.WinForms.Controls.Styles.FormStyleInfoStore.staticData"/> is null.
            </summary>
            <returns><see cref="T:Syncfusion.WinForms.Core.Styles.StaticData"/></returns>
        </member>
        <member name="P:Syncfusion.WinForms.Controls.Styles.FormStyleInfoStore.StaticDataStore">
            <summary>
            Gets the static data value of the <see cref="!:Syncfusion.WinForms.Controls.Styles.FormVisualStyleStore"/> class.
            </summary>
        </member>
        <member name="T:Syncfusion.WinForms.Controls.Styles.MdiChildStyleInfo">
            <summary>
            Represents the class that defines the MDI style information for the <see cref="T:Syncfusion.WinForms.Controls.SfForm"/> control.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Controls.Styles.MdiChildStyleInfo.defaultStyle">
            <summary>
            It contains the value of the <see cref="P:Syncfusion.WinForms.Controls.Styles.MdiChildStyleInfo.DefaultStyle"/> property.
            </summary>
        </member>
        <member name="M:Syncfusion.WinForms.Controls.Styles.MdiChildStyleInfo.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.WinForms.Controls.Styles.MdiChildStyleInfo"/> class.
            </summary>
        </member>
        <member name="M:Syncfusion.WinForms.Controls.Styles.MdiChildStyleInfo.#ctor(Syncfusion.WinForms.Core.Styles.StyleInfoSubObjectIdentity,Syncfusion.WinForms.Controls.Styles.MdiChildStyleInfoStore)">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.WinForms.Controls.Styles.MdiChildStyleInfo"/> class.
            </summary>
            <param name="identity">A <see cref="T:Syncfusion.WinForms.Core.Styles.StyleInfoSubObjectIdentity"/> that holds the identity for this <see cref="T:Syncfusion.WinForms.Core.Styles.StyleInfoBase"/>.</param>
            <param name="store">A <see cref="T:Syncfusion.WinForms.Controls.Styles.MdiChildStyleInfoStore"/> that holds data for this object.
            All changes in this style object will be saved in the <see cref="T:Syncfusion.WinForms.Controls.Styles.MdiChildStyleInfoStore"/> object.
            </param>
        </member>
        <member name="M:Syncfusion.WinForms.Controls.Styles.MdiChildStyleInfo.#ctor(Syncfusion.WinForms.Core.Styles.StyleInfoSubObjectIdentity)">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.WinForms.Controls.Styles.MdiChildStyleInfo"/> class.
            </summary>
            <param name="identity">A <see cref="T:Syncfusion.WinForms.Core.Styles.StyleInfoSubObjectIdentity"/> that holds the identity for this <see cref="T:Syncfusion.WinForms.Core.Styles.StyleInfoBase"/>.</param>
        </member>
        <member name="M:Syncfusion.WinForms.Controls.Styles.MdiChildStyleInfo.ShouldSerializeCloseButtonSize">
            <summary>
             Determines a value that indicates whether to serialize the CloseButtonSize property or not.
            </summary>
            <returns>returns true if serialized; Otherwise false</returns>
        </member>
        <member name="M:Syncfusion.WinForms.Controls.Styles.MdiChildStyleInfo.ShouldSerializeMaximizeButtonSize">
            <summary>
             Determines a value that indicates whether to serialize the MaximizeButtonSize property or not.
            </summary>
            <returns>returns true if serialized; Otherwise false</returns>
        </member>
        <member name="M:Syncfusion.WinForms.Controls.Styles.MdiChildStyleInfo.ShouldSerializeMinimizeButtonSize">
            <summary>
             Determines a value that indicates whether to serialize the MinimizeButtonSize property or not.
            </summary>
            <returns>returns true if serialized; Otherwise false</returns>
        </member>
        <member name="M:Syncfusion.WinForms.Controls.Styles.MdiChildStyleInfo.ShouldSerializeHelpButtonSize">
            <summary>
             Determines a value that indicates whether to serialize the HelpButtonSize property or not.
            </summary>
            <returns>returns true if serialized; Otherwise false</returns>
        </member>
        <member name="M:Syncfusion.WinForms.Controls.Styles.MdiChildStyleInfo.MakeCopy(Syncfusion.WinForms.Core.Styles.StyleInfoBase,Syncfusion.WinForms.Core.Styles.StyleInfoProperty)">
            <summary>
            Makes an exact copy of the current object.
            </summary>
            <param name="newOwner">The new owner style object for the copied object.</param>
            <param name="sip">The identifier for this object.</param>
            <returns>A copy of the current object registered with the new owner style object.</returns>
        </member>
        <member name="M:Syncfusion.WinForms.Controls.Styles.MdiChildStyleInfo.GetDefaultStyle">
            <summary>
            Provide the default style of the MDI form.
            </summary>
            <returns>Default style object.</returns>
        </member>
        <member name="P:Syncfusion.WinForms.Controls.Styles.MdiChildStyleInfo.DefaultStyle">
            <summary>
            Gets the default style of the MDI form.
            </summary>
        </member>
        <member name="P:Syncfusion.WinForms.Controls.Styles.MdiChildStyleInfo.CloseButtonForeColor">
            <summary>
            Gets or sets the fore color of the MDI form close button.
            </summary>
        </member>
        <member name="P:Syncfusion.WinForms.Controls.Styles.MdiChildStyleInfo.MaximizeButtonForeColor">
            <summary>
            Gets or sets the fore color of the MDI form maximize button.
            </summary>
        </member>
        <member name="P:Syncfusion.WinForms.Controls.Styles.MdiChildStyleInfo.MinimizeButtonForeColor">
            <summary>
            Gets or sets the fore color of the MDI form minimize button.
            </summary>
        </member>
        <member name="P:Syncfusion.WinForms.Controls.Styles.MdiChildStyleInfo.HelpButtonForeColor">
            <summary>
            Gets or sets the fore color of the MDI form help button.
            </summary>
        </member>
        <member name="P:Syncfusion.WinForms.Controls.Styles.MdiChildStyleInfo.CloseButtonHoverForeColor">
            <summary>
            Gets or sets the hover fore color for the MDI form close button.
            </summary>
        </member>
        <member name="P:Syncfusion.WinForms.Controls.Styles.MdiChildStyleInfo.MaximizeButtonHoverForeColor">
            <summary>
            Gets or sets the hover fore color for the MDI form maximize button.
            </summary>
        </member>
        <member name="P:Syncfusion.WinForms.Controls.Styles.MdiChildStyleInfo.MinimizeButtonHoverForeColor">
            <summary>
            Gets or sets the hover fore color for the MDI form minimize button.
            </summary>
        </member>
        <member name="P:Syncfusion.WinForms.Controls.Styles.MdiChildStyleInfo.HelpButtonHoverForeColor">
            <summary>
            Gets or sets the hover fore color for the MDI form help button.
            </summary>
        </member>
        <member name="P:Syncfusion.WinForms.Controls.Styles.MdiChildStyleInfo.CloseButtonHoverBackColor">
            <summary>
            Gets or sets the hover back color for the MDI form close button.
            </summary>
        </member>
        <member name="P:Syncfusion.WinForms.Controls.Styles.MdiChildStyleInfo.MaximizeButtonHoverBackColor">
            <summary>
            Gets or sets the hover back color for the MDI form maximize button.
            </summary>
        </member>
        <member name="P:Syncfusion.WinForms.Controls.Styles.MdiChildStyleInfo.MinimizeButtonHoverBackColor">
            <summary>
            Gets or sets the hover back color for the MDI form minimize button.
            </summary>
        </member>
        <member name="P:Syncfusion.WinForms.Controls.Styles.MdiChildStyleInfo.HelpButtonHoverBackColor">
            <summary>
            Gets or sets the hover back color for the MDI help button.
            </summary>
        </member>
        <member name="P:Syncfusion.WinForms.Controls.Styles.MdiChildStyleInfo.CloseButtonPressedForeColor">
            <summary>
            Gets or sets the pressed fore color of the MDI form close button.
            </summary>
        </member>
        <member name="P:Syncfusion.WinForms.Controls.Styles.MdiChildStyleInfo.MaximizeButtonPressedForeColor">
            <summary>
            Gets or sets the pressed fore color of the MDI form maximize button.
            </summary>
        </member>
        <member name="P:Syncfusion.WinForms.Controls.Styles.MdiChildStyleInfo.MinimizeButtonPressedForeColor">
            <summary>
            Gets or sets the pressed fore color of the MDI form minimize button.
            </summary>
        </member>
        <member name="P:Syncfusion.WinForms.Controls.Styles.MdiChildStyleInfo.HelpButtonPressedForeColor">
            <summary>
            Gets or sets the pressed fore color of the MDI form help button.
            </summary>
        </member>
        <member name="P:Syncfusion.WinForms.Controls.Styles.MdiChildStyleInfo.CloseButtonPressedBackColor">
            <summary>
            Gets or sets the pressed background color of the MDI form close button.
            </summary>
        </member>
        <member name="P:Syncfusion.WinForms.Controls.Styles.MdiChildStyleInfo.MaximizeButtonPressedBackColor">
            <summary>
            Gets or sets the pressed background color of the MDI form maximize button.
            </summary>
        </member>
        <member name="P:Syncfusion.WinForms.Controls.Styles.MdiChildStyleInfo.MinimizeButtonPressedBackColor">
            <summary>
            Gets or sets the pressed background color of the MDI form minimize button.
            </summary>
        </member>
        <member name="P:Syncfusion.WinForms.Controls.Styles.MdiChildStyleInfo.HelpButtonPressedBackColor">
            <summary>
            Gets or sets the pressed background color of the MDI form  help button.
            </summary>
        </member>
        <member name="P:Syncfusion.WinForms.Controls.Styles.MdiChildStyleInfo.CloseButtonImage">
            <summary>
            Gets or sets the image for the MDI form close button.
            </summary>
            <value>The default value is <b>null</b>.</value>
        </member>
        <member name="P:Syncfusion.WinForms.Controls.Styles.MdiChildStyleInfo.CloseButtonHoverImage">
            <summary>
            Gets or sets the hover image for the MDI form close button.
            </summary>
            <value>The default value is <b>null</b>.</value>
        </member>
        <member name="P:Syncfusion.WinForms.Controls.Styles.MdiChildStyleInfo.CloseButtonPressedImage">
            <summary>
            Gets or sets the pressed image for the MDI form close button.
            </summary>
            <value>The default value is <b>null</b>.</value>
        </member>
        <member name="P:Syncfusion.WinForms.Controls.Styles.MdiChildStyleInfo.MaximizeButtonImage">
            <summary>
            Gets or sets the image for the MDI form maximize button.
            </summary>
            <value>The default value is <b>null</b>.</value>
        </member>
        <member name="P:Syncfusion.WinForms.Controls.Styles.MdiChildStyleInfo.MaximizeButtonHoverImage">
            <summary>
            Gets or sets the hover image for the MDI form maximize button.
            </summary>
            <value>The default value is <b>null</b>.</value>
        </member>
        <member name="P:Syncfusion.WinForms.Controls.Styles.MdiChildStyleInfo.MaximizeButtonPressedImage">
            <summary>
            Gets or sets the pressed image for the MDI form maximize button.
            </summary>
            <value>The default value is <b>null</b>.</value>
        </member>
        <member name="P:Syncfusion.WinForms.Controls.Styles.MdiChildStyleInfo.MinimizeButtonImage">
            <summary>
            Gets or sets the image for the MDI form minimize button.
            </summary>
            <value>The default value is <b>null</b>.</value>
        </member>
        <member name="P:Syncfusion.WinForms.Controls.Styles.MdiChildStyleInfo.MinimizeButtonHoverImage">
            <summary>
            Gets or sets the hover image for the MDI form minimize button.
            </summary>
            <value>The default value is <b>null</b>.</value>
        </member>
        <member name="P:Syncfusion.WinForms.Controls.Styles.MdiChildStyleInfo.MinimizeButtonPressedImage">
            <summary>
            Gets or sets the pressed image for the MDI form minimize button.
            </summary>
            <value>The default value is <b>null</b>.</value>
        </member>
        <member name="P:Syncfusion.WinForms.Controls.Styles.MdiChildStyleInfo.HelpButtonImage">
            <summary>
            Gets or sets the image for the MDI form help button.
            </summary>
            <value>The default value is <b>null</b>.</value>
        </member>
        <member name="P:Syncfusion.WinForms.Controls.Styles.MdiChildStyleInfo.HelpButtonHoverImage">
            <summary>
            Gets or sets the hover image for the MDI form help button.
            </summary>
            <value>The default value is <b>null</b>.</value>
        </member>
        <member name="P:Syncfusion.WinForms.Controls.Styles.MdiChildStyleInfo.HelpButtonPressedImage">
            <summary>
            Gets or sets the pressed image for the MDI form help button.
            </summary>
            <value>The default value is <b>null</b>.</value>
        </member>
        <member name="P:Syncfusion.WinForms.Controls.Styles.MdiChildStyleInfo.TitleBarHeight">
            <summary>
            Gets or sets the height of the MDI form title bar.
            </summary>
        </member>
        <member name="P:Syncfusion.WinForms.Controls.Styles.MdiChildStyleInfo.CloseButtonSize">
            <summary>
            Gets or sets the size of the MDI form close button.
            </summary>
        </member>
        <member name="P:Syncfusion.WinForms.Controls.Styles.MdiChildStyleInfo.MaximizeButtonSize">
            <summary>
            Gets or sets the size of the MDI form maximize button.
            </summary>
        </member>
        <member name="P:Syncfusion.WinForms.Controls.Styles.MdiChildStyleInfo.MinimizeButtonSize">
            <summary>
            Gets or sets the size of the MDI form minimize button.
            </summary>
        </member>
        <member name="P:Syncfusion.WinForms.Controls.Styles.MdiChildStyleInfo.HelpButtonSize">
            <summary>
            Gets or sets the size of the MDI form help button.
            </summary>
        </member>
        <member name="T:Syncfusion.WinForms.Controls.Styles.MdiChildStyleInfoStore">
            <summary>
            Provides storage for the <see cref="T:Syncfusion.WinForms.Controls.Styles.MdiChildStyleInfo"/> object.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Controls.Styles.MdiChildStyleInfoStore.CloseButtonForeColorProperty">
            <summary>
            Provides information about the <see cref="P:Syncfusion.WinForms.Controls.Styles.MdiChildStyleInfo.CloseButtonForeColor"/> property.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Controls.Styles.MdiChildStyleInfoStore.HelpButtonForeColorProperty">
            <summary>
            Provides information about the <see cref="P:Syncfusion.WinForms.Controls.Styles.MdiChildStyleInfo.HelpButtonForeColor"/> property.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Controls.Styles.MdiChildStyleInfoStore.MaximizeButtonForeColorProperty">
            <summary>
            Provides information about the <see cref="P:Syncfusion.WinForms.Controls.Styles.MdiChildStyleInfo.MaximizeButtonForeColor"/> property.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Controls.Styles.MdiChildStyleInfoStore.MinimizeButtonForeColorProperty">
            <summary>
            Provides information about the <see cref="P:Syncfusion.WinForms.Controls.Styles.MdiChildStyleInfo.MinimizeButtonForeColor"/> property.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Controls.Styles.MdiChildStyleInfoStore.CloseButtonHoverForeColorProperty">
            <summary>
            Provides information about the <see cref="P:Syncfusion.WinForms.Controls.Styles.MdiChildStyleInfo.CloseButtonHoverForeColor"/> property.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Controls.Styles.MdiChildStyleInfoStore.HelpButtonHoverForeColorProperty">
            <summary>
            Provides information about the <see cref="P:Syncfusion.WinForms.Controls.Styles.MdiChildStyleInfo.HelpButtonHoverForeColor"/> property.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Controls.Styles.MdiChildStyleInfoStore.MaximizeButtonHoverForeColorProperty">
            <summary>
            Provides information about the <see cref="P:Syncfusion.WinForms.Controls.Styles.MdiChildStyleInfo.MaximizeButtonHoverForeColor"/> property.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Controls.Styles.MdiChildStyleInfoStore.MinimizeButtonHoverForeColorProperty">
            <summary>
            Provides information about the <see cref="P:Syncfusion.WinForms.Controls.Styles.MdiChildStyleInfo.MinimizeButtonHoverForeColor"/> property.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Controls.Styles.MdiChildStyleInfoStore.CloseButtonHoverBackColorProperty">
            <summary>
            Provides information about the <see cref="P:Syncfusion.WinForms.Controls.Styles.MdiChildStyleInfo.CloseButtonHoverBackColor"/> property.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Controls.Styles.MdiChildStyleInfoStore.HelpButtonHoverBackColorProperty">
            <summary>
            Provides information about the <see cref="P:Syncfusion.WinForms.Controls.Styles.MdiChildStyleInfo.HelpButtonHoverBackColor"/> property.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Controls.Styles.MdiChildStyleInfoStore.MaximizeButtonHoverBackColorProperty">
            <summary>
            Provides information about the <see cref="P:Syncfusion.WinForms.Controls.Styles.MdiChildStyleInfo.MaximizeButtonHoverBackColor"/> property.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Controls.Styles.MdiChildStyleInfoStore.MinimizeButtonHoverBackColorProperty">
            <summary>
            Provides information about the <see cref="P:Syncfusion.WinForms.Controls.Styles.MdiChildStyleInfo.MinimizeButtonHoverBackColor"/> property.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Controls.Styles.MdiChildStyleInfoStore.CloseButtonPressedForeColorProperty">
            <summary>
            Provides information about the <see cref="P:Syncfusion.WinForms.Controls.Styles.MdiChildStyleInfo.CloseButtonPressedForeColor"/> property.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Controls.Styles.MdiChildStyleInfoStore.MaximizeButtonPressedForeColorProperty">
            <summary>
            Provides information about the <see cref="P:Syncfusion.WinForms.Controls.Styles.MdiChildStyleInfo.MaximizeButtonPressedForeColor"/> property.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Controls.Styles.MdiChildStyleInfoStore.MinimizeButtonPressedForeColorProperty">
            <summary>
            Provides information about the <see cref="P:Syncfusion.WinForms.Controls.Styles.MdiChildStyleInfo.MinimizeButtonPressedForeColor"/> property.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Controls.Styles.MdiChildStyleInfoStore.HelpButtonPressedForeColorProperty">
            <summary>
            Provides information about the <see cref="P:Syncfusion.WinForms.Controls.Styles.MdiChildStyleInfo.HelpButtonPressedForeColor"/> property.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Controls.Styles.MdiChildStyleInfoStore.CloseButtonPressedBackColorProperty">
            <summary>
            Provides information about the <see cref="P:Syncfusion.WinForms.Controls.Styles.MdiChildStyleInfo.CloseButtonPressedBackColor"/> property.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Controls.Styles.MdiChildStyleInfoStore.MaximizeButtonPressedBackColorProperty">
            <summary>
            Provides information about the <see cref="P:Syncfusion.WinForms.Controls.Styles.MdiChildStyleInfo.MaximizeButtonPressedBackColor"/> property.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Controls.Styles.MdiChildStyleInfoStore.MinimizeButtonPressedBackColorProperty">
            <summary>
            Provides information about the <see cref="P:Syncfusion.WinForms.Controls.Styles.MdiChildStyleInfo.MinimizeButtonPressedBackColor"/> property.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Controls.Styles.MdiChildStyleInfoStore.HelpButtonPressedBackColorProperty">
            <summary>
            Provides information about the <see cref="P:Syncfusion.WinForms.Controls.Styles.MdiChildStyleInfo.HelpButtonPressedBackColor"/> property.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Controls.Styles.MdiChildStyleInfoStore.CloseButtonImageProperty">
            <summary>
            Provides information about the <see cref="P:Syncfusion.WinForms.Controls.Styles.MdiChildStyleInfo.CloseButtonImage"/> property.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Controls.Styles.MdiChildStyleInfoStore.CloseButtonHoverImageProperty">
            <summary>
            Provides information about the <see cref="P:Syncfusion.WinForms.Controls.Styles.MdiChildStyleInfo.CloseButtonHoverImage"/> property.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Controls.Styles.MdiChildStyleInfoStore.CloseButtonPressedImageProperty">
            <summary>
            Provides information about the <see cref="P:Syncfusion.WinForms.Controls.Styles.MdiChildStyleInfo.CloseButtonPressedImage"/> property.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Controls.Styles.MdiChildStyleInfoStore.MaximizeButtonImageProperty">
            <summary>
            Provides information about the <see cref="P:Syncfusion.WinForms.Controls.Styles.MdiChildStyleInfo.MaximizeButtonImage"/> property.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Controls.Styles.MdiChildStyleInfoStore.MaximizeButtonHoverImageProperty">
            <summary>
            Provides information about the <see cref="P:Syncfusion.WinForms.Controls.Styles.MdiChildStyleInfo.MaximizeButtonHoverImage"/> property.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Controls.Styles.MdiChildStyleInfoStore.MaximizeButtonPressedImageProperty">
            <summary>
            Provides information about the <see cref="P:Syncfusion.WinForms.Controls.Styles.MdiChildStyleInfo.MaximizeButtonPressedImage"/> property.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Controls.Styles.MdiChildStyleInfoStore.MinimizeButtonImageProperty">
            <summary>
            Provides information about the <see cref="P:Syncfusion.WinForms.Controls.Styles.MdiChildStyleInfo.MinimizeButtonImage"/> property.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Controls.Styles.MdiChildStyleInfoStore.MinimizeButtonHoverImageProperty">
            <summary>
            Provides information about the <see cref="P:Syncfusion.WinForms.Controls.Styles.MdiChildStyleInfo.MinimizeButtonHoverImage"/> property.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Controls.Styles.MdiChildStyleInfoStore.MinimizeButtonPressedImageProperty">
            <summary>
            Provides information about the <see cref="P:Syncfusion.WinForms.Controls.Styles.MdiChildStyleInfo.MinimizeButtonPressedImage"/> property.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Controls.Styles.MdiChildStyleInfoStore.HelpButtonImageProperty">
            <summary>
            Provides information about the <see cref="P:Syncfusion.WinForms.Controls.Styles.MdiChildStyleInfo.HelpButtonImage"/> property.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Controls.Styles.MdiChildStyleInfoStore.HelpButtonHoverImageProperty">
            <summary>
            Provides information about the <see cref="P:Syncfusion.WinForms.Controls.Styles.MdiChildStyleInfo.HelpButtonHoverImage"/> property.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Controls.Styles.MdiChildStyleInfoStore.HelpButtonPressedImageProperty">
            <summary>
            Provides information about the <see cref="P:Syncfusion.WinForms.Controls.Styles.MdiChildStyleInfo.HelpButtonPressedImage"/> property.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Controls.Styles.MdiChildStyleInfoStore.TitleBarHeightProperty">
            <summary>
            Provides information about the <see cref="P:Syncfusion.WinForms.Controls.Styles.MdiChildStyleInfo.TitleBarHeight"/> property.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Controls.Styles.MdiChildStyleInfoStore.CloseButtonSizeProperty">
            <summary>
            Provides information about the <see cref="P:Syncfusion.WinForms.Controls.Styles.MdiChildStyleInfo.CloseButtonSize"/> property.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Controls.Styles.MdiChildStyleInfoStore.HelpButtonSizeProperty">
            <summary>
            Provides information about the <see cref="P:Syncfusion.WinForms.Controls.Styles.MdiChildStyleInfo.HelpButtonSize"/> property.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Controls.Styles.MdiChildStyleInfoStore.MaximizeButtonSizeProperty">
            <summary>
            Provides information about the <see cref="P:Syncfusion.WinForms.Controls.Styles.MdiChildStyleInfo.MaximizeButtonSize"/> property.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Controls.Styles.MdiChildStyleInfoStore.MinimizeButtonSizeProperty">
            <summary>
            Provides information about the <see cref="P:Syncfusion.WinForms.Controls.Styles.MdiChildStyleInfo.MinimizeButtonSize"/> property.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Controls.Styles.MdiChildStyleInfoStore.staticData">
            <summary>
            It contains the value of the <see cref="P:Syncfusion.WinForms.Controls.Styles.MdiChildStyleInfoStore.StaticDataStore"/> property value.
            </summary>
        </member>
        <member name="M:Syncfusion.WinForms.Controls.Styles.MdiChildStyleInfoStore.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.WinForms.Controls.Styles.MdiChildStyleInfoStore"/> class.
            </summary>
        </member>
        <member name="M:Syncfusion.WinForms.Controls.Styles.MdiChildStyleInfoStore.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.WinForms.Controls.Styles.MdiChildStyleInfoStore"/> class from a serialization stream.
            </summary>
            <param name="info">An object that holds all the data needed to serialize or deserialize this instance.</param>
            <param name="context">Describes the source and destination of the serialized stream specified by info. </param>
        </member>
        <member name="M:Syncfusion.WinForms.Controls.Styles.MdiChildStyleInfoStore.GetStaticData">
            <summary>
            Initializes the <see cref="T:Syncfusion.WinForms.Core.Styles.StaticData"/>, if <see cref="F:Syncfusion.WinForms.Controls.Styles.MdiChildStyleInfoStore.staticData"/> is null.
            </summary>
            <returns><see cref="T:Syncfusion.WinForms.Core.Styles.StaticData"/></returns>
        </member>
        <member name="P:Syncfusion.WinForms.Controls.Styles.MdiChildStyleInfoStore.StaticDataStore">
            <summary>
            Gets the static data value of the <see cref="T:Syncfusion.WinForms.Controls.Styles.MdiChildStyleInfoStore"/> class.
            </summary>
        </member>
        <member name="T:Syncfusion.WinForms.Controls.SfForm">
            <summary>
            Represents a window or dialog box that makes up an application's user interface with options to customize its appearance.
            </summary>    
        </member>
        <member name="F:Syncfusion.WinForms.Controls.SfForm.CLOSE_BUTTON">
            <summary>
            Indicates the close button of the form. 
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Controls.SfForm.MAX_BUTTON">
            <summary>
            Indicates the maximize/restore button of the form.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Controls.SfForm.MIN_BUTTON">
            <summary>
            Indicates the minimize button of the form.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Controls.SfForm.HELP_BUTTON">
            <summary>
            Indicates the help button of the form.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Controls.SfForm.MDI_CLOSE_BUTTON">
            <summary>
            Indicates the close button for the maximized MDI child.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Controls.SfForm.MDI_MAX_BUTTON">
            <summary>
            Indicates the restore button of the maximized MDI child. 
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Controls.SfForm.MDI_MIN_BUTTON">
            <summary>
            Indicates the minimize button of the maximized MDI child. 
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Controls.SfForm.MDI_HELP_BUTTON">
            <summary>
            Indicates the help button of the maximized MDI child.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Controls.SfForm.CONSTANT_INCREASEDSIZE_IF100SCALING">
            <summary>
            Indicates the  scaling value for 100% dpi
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Controls.SfForm.CONSTANT_INCREASEDSIZE_IF125SCALING">
            <summary>
            Indicates the  scaling value for 125% dpi
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Controls.SfForm.CONSTANT_INCREASEDSIZE_IF150SCALING">
            <summary>
            Indicates the  scaling value for 150% dpi
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Controls.SfForm.CONSTANT_INCREASEDSIZE_IF175SCALING">
            <summary>
            Indicates the  scaling value for 175% dpi
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Controls.SfForm.CONSTANT_INCREASEDSIZE_IF200SCALING">
            <summary>
            Indicates the  scaling value for 200% dpi
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Controls.SfForm.CONSTANT_INCREASEDSIZE_IF225SCALING">
            <summary>
            Indicates the  scaling value for 225% dpi
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Controls.SfForm.CONSTANT_INCREASEDSIZE_IF250SCALING">
            <summary>
            Indicates the  scaling value for 250% dpi
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Controls.SfForm.CONSTANT_INCREASEDSIZE_IF275SCALING">
            <summary>
            Indicates the  scaling value for 275% dpi
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Controls.SfForm.CONSTANT_INCREASEDSIZE_IF300SCALING">
            <summary>
            Indicates the  scaling value for 300% dpi
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Controls.SfForm.padding">
            <summary>
            It stores the value of <see cref="P:Syncfusion.WinForms.Controls.SfForm.Padding"/> property.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Controls.SfForm.captionHeight">
            <summary>
            It stores the height of the title bar. 
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Controls.SfForm.mdiCaptionHeight">
            <summary>
            It stores the height of the mdi parent's title bar. 
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Controls.SfForm.style">
            <summary>
            It stores the value of the Style property.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Controls.SfForm.isMouseTracked">
            <summary>
            To track the mouse event. 
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Controls.SfForm.toolTip">
            <summary>
            Represents the instance of the <see cref="T:Syncfusion.WinForms.Controls.SfToolTip"/> class.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Controls.SfForm.sizing">
            <summary>
            Used to set bound for the form.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Controls.SfForm.updateCount">
            <summary>
            It stores the update count value. 
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Controls.SfForm.titleBarTextControl">
            <summary>
            It stores the TitleBarTextControl.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Controls.SfForm.shadowForm">
            <summary>
            Represents the form shadow window.
            </summary>
        </member>
        <member name="M:Syncfusion.WinForms.Controls.SfForm.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.WinForms.Controls.SfForm"/> class.
            </summary>
        </member>
        <member name="M:Syncfusion.WinForms.Controls.SfForm.BeginUpdate">
            <summary>
            Suspends the painting of the control until the <see cref="M:Syncfusion.WinForms.Controls.SfForm.EndUpdate"/> method is called.
            </summary>
            <example>
            <code lang="C#">
            //Call BeginUpdate() to ensure the form is painted only once.
            this.BeginUpdate();
            //Change the appearance of the form.
            this.Style.TitleBar.ForeColor = Color.Red;
            this.Style.TitleBar.BackColor = Color.SkyBlue;
            //Call EndUpdate() when finish changing the appearance of the form.
            this.EndUpdate();
            </code>
            </example>
        </member>
        <member name="M:Syncfusion.WinForms.Controls.SfForm.EndUpdate">
            <summary>
            Resumes the painting of the control suspended by calling the <see cref="M:Syncfusion.WinForms.Controls.SfForm.BeginUpdate"/> method.
            </summary>
            <example>
            <code lang="C#">
            //Call BeginUpdate() to ensure the form is painted only once.
            this.BeginUpdate();
            //Change the appearance of the form.
            this.Style.TitleBar.ForeColor = Color.Red;
            this.Style.TitleBar.BackColor = Color.SkyBlue;
            //Call EndUpdate() when finish changing the appearance of the form.
            this.EndUpdate();
            </code>
            </example>
        </member>
        <member name="M:Syncfusion.WinForms.Controls.SfForm.GetCaptionBarHeight">
            <summary>
            Gets the height of the title bar.
            </summary>
            <returns>Returns the height of the caption bar</returns>
        </member>
        <member name="M:Syncfusion.WinForms.Controls.SfForm.GetMdiCaptionBarHeight">
            <summary>
            Gets the height of the mdichild title bar.
            </summary>
            <returns>Returns the height of the mdi caption bar</returns>
        </member>
        <member name="M:Syncfusion.WinForms.Controls.SfForm.GetCloseButtonSize">
            <summary>
            Gets the size of the close button.
            </summary>
            <returns>Returns the size of the close button</returns>
        </member>
        <member name="M:Syncfusion.WinForms.Controls.SfForm.GetMaxButtonSize">
            <summary>
            Gets the size of the maximum button.
            </summary>
            <returns>Returns the size of the maximum button</returns>
        </member>
        <member name="M:Syncfusion.WinForms.Controls.SfForm.GetMinButtonSize">
            <summary>
            Gets the size of the minimum button.
            </summary>
            <returns>Returns the size of the minimum button</returns>
        </member>
        <member name="M:Syncfusion.WinForms.Controls.SfForm.GetHelpButtonSize">
            <summary>
            Gets the size of the help button
            </summary>
            <returns>Returns the size of the help button</returns>
        </member>
        <member name="M:Syncfusion.WinForms.Controls.SfForm.GetMdiCloseButtonSize">
            <summary>
            Gets the size of the mdi close button
            </summary>
            <returns>Returns the size of the mdi close button</returns>
        </member>
        <member name="M:Syncfusion.WinForms.Controls.SfForm.GetMdiMaxButtonSize">
            <summary>
            Gets the size of the mdi maximum button
            </summary>
            <returns>Returns the size of the mdi maximum button</returns>
        </member>
        <member name="M:Syncfusion.WinForms.Controls.SfForm.GetMdiMinButtonSize">
            <summary>
            Gets the size of the mdi minimum button
            </summary>
            <returns>Returns the size of the minimum button </returns>
        </member>
        <member name="M:Syncfusion.WinForms.Controls.SfForm.GetMdiHelpButtonSize">
            <summary>
            Get the size of the mdi help button
            </summary>
            <returns>Returns the size of the help button</returns>
        </member>
        <member name="M:Syncfusion.WinForms.Controls.SfForm.RefreshForm">
            <summary>
            Refresh the form to update the appearance.
            </summary>
        </member>
        <member name="M:Syncfusion.WinForms.Controls.SfForm.WndProc(System.Windows.Forms.Message@)">
            <summary>
            Processes Windows messages.
            </summary>
            <param name="m">Windows message.</param>
        </member>
        <member name="M:Syncfusion.WinForms.Controls.SfForm.SetBoundsCore(System.Int32,System.Int32,System.Int32,System.Int32,System.Windows.Forms.BoundsSpecified)">
            <summary>
            Set the specified bound for the form.
            </summary>
            <param name="x">The Left property value of the form.</param>
            <param name="y">The Top property value of the form.</param>
            <param name="width">The Width property value of the form.</param>
            <param name="height">The Height property value of the form.</param>
            <param name="specified">Specifies the bounds of the form.</param>
        </member>
        <member name="M:Syncfusion.WinForms.Controls.SfForm.OnLoad(System.EventArgs)">
            <summary>
            Raises the System.Windows.Forms.Form.Load event.
            </summary>
            <param name="args">Event Arguments.</param>
        </member>
        <member name="M:Syncfusion.WinForms.Controls.SfForm.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:Syncfusion.WinForms.Controls.SfForm.CreateAccessibilityInstance">
            <summary>
            Overridden to set the accessibility object for the SfForm.
            </summary>
            <returns>Returns the accessibility object of the SfForm.</returns>
        </member>
        <member name="M:Syncfusion.WinForms.Controls.SfForm.InvalidateFrame">
            <summary>
            Invalidate the frame
            </summary>
        </member>
        <member name="M:Syncfusion.WinForms.Controls.SfForm.OnWmSetText(System.Windows.Forms.Message@)">
            <summary>
            Sets the text of a window.
            </summary>
            <param name="m">Received window message.</param>
        </member>
        <member name="M:Syncfusion.WinForms.Controls.SfForm.On_Wm_NcActivate(System.Windows.Forms.Message@)">
            <summary>
            Process the WM_NCACTIVATE Windows message. 
            Occurs when the form is activated or deactivated.
            </summary>
            <param name="m">Received window message.</param>
        </member>
        <member name="M:Syncfusion.WinForms.Controls.SfForm.On_Wm_NcHitTest(System.Windows.Forms.Message@)">
            <summary>
            Process the WM_NCHITTEST Windows message.
            To determine what part of the window corresponds to a particular screen coordinate
            </summary>
            <param name="m">Received window message.</param>
        </member>
        <member name="M:Syncfusion.WinForms.Controls.SfForm.GetHitTest(System.Drawing.Point)">
            <summary>
            Determines the area on the form corresponding to the specified point.
            </summary>
            <param name="point">Specifies the cursor position.</param>
            <returns> Returns a value that indicates the mouse hit position.</returns>
        </member>
        <member name="M:Syncfusion.WinForms.Controls.SfForm.On_Wm_NcLButtonDblClk(System.Windows.Forms.Message@)">
            <summary>
            Process the WM_NCLBUTTONDBLCLK Windows message.
            Occurs when the left mouse button is double clicked while the cursor is on the non client area of the form.
            </summary>
            <param name="m">Received window message.</param>
        </member>
        <member name="M:Syncfusion.WinForms.Controls.SfForm.On_Wm_NcMouseLeave(System.Windows.Forms.Message@)">
            <summary>
            Process the WM_NCMOUSELEAVE Windows message 
            Occurs when the cursor leaves the non client area of the form.
            </summary>
            <param name="m">Received window message.</param>
        </member>
        <member name="M:Syncfusion.WinForms.Controls.SfForm.On_Wm_NcMouseMove(System.Windows.Forms.Message@)">
            <summary>
            Process the WM_NCMOUSEMOVE Windows message 
            Occurs when the cursor is moved within the non client area of the form.
            </summary>
            <param name="m">Received window message.</param>
        </member>
        <member name="M:Syncfusion.WinForms.Controls.SfForm.On_Wm_NcLButtonDown(System.Windows.Forms.Message@)">
            <summary>
            Process the WM_NCLBUTTONDOWN Windows message 
            Occurs when the left mouse button is pressed while the cursor is on the non client area of the form.
            </summary>
            <param name="m">Received window message.</param>
        </member>
        <member name="M:Syncfusion.WinForms.Controls.SfForm.On_Wm_NcLButtonUp(System.Windows.Forms.Message@)">
            <summary>
            Process the WM_NCLBUTTONUP Windows message 
            Occurs when the left mouse button is released while the cursor is on the non client area of the form.
            </summary>
            <param name="m">Received window message.</param>
        </member>
        <member name="M:Syncfusion.WinForms.Controls.SfForm.On_Wm_NcPaint(System.Windows.Forms.Message@)">
            <summary>
            Process the WM_NCPaint Windows message 
            To draw the title bar, border lines and background of the form.
            </summary>
            <param name="m">Received window message.</param>
        </member>
        <member name="M:Syncfusion.WinForms.Controls.SfForm.DrawFrame(System.Drawing.Graphics,System.Drawing.Rectangle)">
            <summary>
            Draw the non-client area of the form.
            </summary>
            <param name="graphics">Graphics object</param>
            <param name="rect">Window rectangle</param>
        </member>
        <member name="M:Syncfusion.WinForms.Controls.SfForm.DrawFrameBorders(System.Drawing.Graphics,System.Drawing.Rectangle)">
            <summary>
            Draw the border for the form with specified color and thickness.
            </summary>
            <param name="g">Graphics object.</param>
            <param name="rect">Rectangle to draw border.</param>
        </member>
        <member name="M:Syncfusion.WinForms.Controls.SfForm.DrawFrameBackground(System.Drawing.Graphics,System.Drawing.Rectangle)">
            <summary>
            Draw the region excluding the caption bar and client area of the form.
            </summary>
            <param name="g">Graphics object</param>
            <param name="rect">Window rectangle.</param>
        </member>
        <member name="M:Syncfusion.WinForms.Controls.SfForm.On_Wm_NcCalcSize(System.Windows.Forms.Message@)">
            <summary>
            Process the WM_NCCALCSIZE Windows message 
            Calculates the size and position of the form's client area.
            </summary>
            <param name="m">Received window message.</param>
        </member>
        <member name="M:Syncfusion.WinForms.Controls.SfForm.CalculateParentClientArea(Syncfusion.WinForms.Core.NativePaint.RECT,System.Single,System.Int32)">
            <summary> 
            Calculate the client region of the form.
            </summary>
            <param name="rect">Window rectangle.</param>
            <param name="borderThickness">Form border thickness.</param>
            <param name="titleBarHeight">Title bar height of the form.</param>param>
            <returns>Returns the client rectangle of the form.</returns>
        </member>
        <member name="M:Syncfusion.WinForms.Controls.SfForm.CalculateChildClientArea(Syncfusion.WinForms.Core.NativePaint.RECT,Syncfusion.WinForms.Core.NativePaint.RECT,System.Single)">
            <summary> 
            Calculate the client region of the form.
            </summary>
            <param name="rect">Window rectangle.</param>
            <param name ="parentRect">Window rectangle of the parent form.</param>
            <param name="borderThickness">Form border thickness.</param>
            <returns>Returns the client rectangle of the child form.</returns>
        </member>
        <member name="M:Syncfusion.WinForms.Controls.SfForm.On_Wm_WindowPosChanged(System.Windows.Forms.Message@)">
            <summary>
            Process the WM_WINDOWPOSCHANGED Windows message 
            Occurs when the size, position or place of the form is changed.
            </summary>
            <param name="m">Received window message.</param>
        </member>
        <member name="M:Syncfusion.WinForms.Controls.SfForm.SetWindowRegion(System.IntPtr)">
            <summary>
            Clip the required visible region within the window rectangle.
            </summary>
            <param name="handle">Window Handle.</param>
        </member>
        <member name="M:Syncfusion.WinForms.Controls.SfForm.GetButtonId(System.Drawing.Point)">
            <summary>
            To get the ID of the button present in the specified point.
            </summary>
            <param name="point">Specifies the cursor position.</param>
            <returns>Returns button ID. </returns>
        </member>
        <member name="M:Syncfusion.WinForms.Controls.SfForm.GetCursorPosition">
            <summary>
            Get the cursor position.
            </summary>
            <returns>Returns the cursor position.</returns>
        </member>
        <member name="M:Syncfusion.WinForms.Controls.SfForm.UpdatePreviousButtonState(System.Drawing.Graphics)">
            <summary>
            Redraw the button when its state changed.
            </summary>
            <param name="graphics">Graphics object</param>
        </member>
        <member name="P:Syncfusion.WinForms.Controls.SfForm.Padding">
            <summary>
            Gets or sets padding within the form.
            </summary>
        </member>
        <member name="P:Syncfusion.WinForms.Controls.SfForm.TitleBarTextControl">
            <summary>
            Gets or sets the control to be displayed in the title bar of the form instead of the title bar text.
            </summary>
            <example>
            <code lang="C#">
            //Loads a Button control to the title bar of the form.
            TitleBarTextControl = new Button();
            //Sets the text for the TitleBarTextControl.
            TitleBarTextControl.Text = "Control1";
            </code>
            </example>
            <remarks>Form.Text property value will be displayed on the title bar only when this property value is equal to null.</remarks>
            <value>The default value is <b>null</b>.</value>
        </member>
        <member name="P:Syncfusion.WinForms.Controls.SfForm.Style">
            <summary>
            Gets the <see cref="T:Syncfusion.WinForms.Controls.Styles.FormVisualStyle"/> value used to customize the appearance of the form.
            </summary>
        </member>
        <member name="P:Syncfusion.WinForms.Controls.SfForm.CloseButtonVisible">
            <summary>
            Gets or sets a value indicating whether the close button is displayed in the caption bar of the form.
            </summary>
            <value>The default value is <b>true</b>.</value>
        </member>
        <member name="P:Syncfusion.WinForms.Controls.SfForm.IconSize">
            <summary>
            Gets or sets a value indicating the size of the form icon.
            </summary>
        </member>
        <member name="P:Syncfusion.WinForms.Controls.SfForm.ShowToolTip">
            <summary>
            Gets or sets a value indicating whether the tooltip for the title bar button is enabled.
            </summary>
            <value>The default value is <b>true</b>.</value>
        </member>
        <member name="P:Syncfusion.WinForms.Controls.SfForm.BackColor">
            <summary>
            Gets or sets the back color of the form.
            </summary>
        </member>
        <member name="P:Syncfusion.WinForms.Controls.SfForm.ForeColor">
            <summary>
            Gets or sets the fore color of the form.
            </summary>
        </member>
        <member name="P:Syncfusion.WinForms.Controls.SfForm.AccessibilityEnabled">
            <summary>
            Gets or sets a value indicating whether the accessibility is enabled for the Form or not.
            </summary>
        </member>
        <member name="P:Syncfusion.WinForms.Controls.SfForm.TitleBar">
            <summary>
            Gets or sets the instance of the TitleBar.
            </summary>
        </member>
        <member name="P:Syncfusion.WinForms.Controls.SfForm.ButtonWidth">
            <summary>
            Gets or sets the initial width of the TitleBarTextControl.
            </summary>
        </member>
        <member name="P:Syncfusion.WinForms.Controls.SfForm.IsActive">
            <summary>
            Gets or sets a value indicating whether the form is active or not.
            </summary>
        </member>
        <member name="P:Syncfusion.WinForms.Controls.SfForm.SelectedButton">
            <summary>
            Gets or sets the caption bar button on which the mouse pointer is hovered.
            </summary>
        </member>
        <member name="T:Syncfusion.WinForms.Controls.ShadowForm">
            <summary>
            Represents the class that provides the shadow effect for the <see cref="T:Syncfusion.WinForms.Controls.SfForm"/>.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Controls.ShadowForm.baseForm">
            <summary>
            Represents an instance of <see cref="T:Syncfusion.WinForms.Controls.SfForm"/> class.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Controls.ShadowForm.shadowBitmap">
            <summary>
            represents the shadow bitmap.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Controls.ShadowForm.shadowWidth">
            <summary>
            Represents the width of form shadow.
            </summary>
        </member>
        <member name="M:Syncfusion.WinForms.Controls.ShadowForm.#ctor(Syncfusion.WinForms.Controls.SfForm)">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.WinForms.Controls.ShadowForm"/> class.
            </summary>
            <param name="form">Base form for which the shadow should be provided.</param>
        </member>
        <member name="M:Syncfusion.WinForms.Controls.ShadowForm.SetLocation(System.Object,System.EventArgs)">
            <summary>
            Set location of the ShadowForm.
            </summary>
            <param name="sender">Sender object.</param>
            <param name="eventArgs">Event arguments.</param>
        </member>
        <member name="M:Syncfusion.WinForms.Controls.ShadowForm.RefreshShadow">
            <summary>
            Draw the shadowForm and clip the region belongs to the Base Form from the ShadowForm.
            </summary>
        </member>
        <member name="M:Syncfusion.WinForms.Controls.ShadowForm.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:Syncfusion.WinForms.Controls.ShadowForm.WndProc(System.Windows.Forms.Message@)">
            <summary>
            Processes Windows messages.
            </summary>
            <param name="m">Windows message.</param>
        </member>
        <member name="M:Syncfusion.WinForms.Controls.ShadowForm.RenderShadow(System.Drawing.Bitmap)">
            <summary>
            Provide the shadow like appearance for the background window.
            </summary>
            <param name="bitmap">Bitmap created from the background window.</param>
        </member>
        <member name="P:Syncfusion.WinForms.Controls.ShadowForm.CreateParams">
            <summary>
            Returns a <see cref="T:System.Windows.Forms.CreateParams"/> that contains the required creation parameters
            when the handle to the control is created.
            </summary>
        </member>
        <member name="T:Syncfusion.WinForms.Controls.Styles.FormVisualStyle">
            <summary>
            Represents the class to define the style for <see cref="T:Syncfusion.WinForms.Controls.SfForm"/> control.
            </summary>
        </member>
        <member name="T:Syncfusion.WinForms.Core.Styles.VisualStyleBase">
            <summary>
            Represents the base class for visual styles to define the elements style.
            </summary>
            <example>
            <code lang="C#">
            // The following example demonstrates about how to implement the VisualStyle for the controls.
                public class GridVisualStyle : VisualStyleBase
                {
                    public GridVisualStyle()
                        : base(new GridVisualStyleStore())
                    {
                    }
                    
                    public GridVisualStyle(GridStyleInfoIdentity identity)
                        : base(identity, new GridVisualStyleStore())
                    {
                    }
                    
                    StyleInfoSubObjectBase Header;
                
                    StyleInfoSubObjectBase Cell;
                
                    StyleInfoSubObjectBase Row;
                    
                    public override StyleInfoSubObjectIdentity CreateSubObjectIdentity(StyleInfoProperty sip)
                    {
                        return new GridVisualStyleInfoSubObjectIdentity(this, sip);
                    }
                    
                    protected internal override StyleInfoBase GetDefaultStyle()
                    {
                        return DefaultStyle;
                    }
                }
                public class GridControlEXT : Control
                {
                    public GridControlEXT()
                    {
                     
                    }
            
                    public GridVisualStyle Style { get; set; }
                }
            </code>
            </example>
        </member>
        <member name="M:Syncfusion.WinForms.Core.Styles.VisualStyleBase.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.WinForms.Core.Styles.VisualStyleBase"/> class and associates it with an existing <see cref="T:Syncfusion.WinForms.Core.Styles.StyleInfoStore"/>.
            </summary>
        </member>
        <member name="M:Syncfusion.WinForms.Core.Styles.VisualStyleBase.#ctor(Syncfusion.WinForms.Core.Styles.VisualStyleInfoStore)">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.WinForms.Core.Styles.VisualStyleBase"/> class and associates it with an existing <see cref="T:Syncfusion.WinForms.Core.Styles.VisualStyleInfoStore"/>.
            </summary>
            <param name="store">A <see cref="T:Syncfusion.WinForms.Core.Styles.VisualStyleInfoStore"/> that holds data for this object.
            All changes in this style object will be saved in the <see cref="T:Syncfusion.WinForms.Core.Styles.VisualStyleInfoStore"/> object.
            </param>
        </member>
        <member name="M:Syncfusion.WinForms.Core.Styles.VisualStyleBase.#ctor(Syncfusion.WinForms.Core.Styles.StyleInfoSubObjectIdentity,Syncfusion.WinForms.Core.Styles.StyleInfoStore)">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.WinForms.Core.Styles.VisualStyleBase"/> class and associates it with an existing <see cref="T:Syncfusion.WinForms.Core.Styles.VisualStyleInfoStore"/> and <see cref="T:Syncfusion.WinForms.Core.Styles.StyleInfoIdentityBase"/>.
            </summary>
            <param name="identity">A <see cref="T:Syncfusion.WinForms.Core.Styles.StyleInfoIdentityBase"/> that holds the identity for this <see cref="T:Syncfusion.WinForms.Core.Styles.VisualStyleInfoStore"/>.</param>
            <param name="store">A <see cref="T:Syncfusion.WinForms.Core.Styles.StyleInfoStore"/> that holds data for this object.
            All changes in this style object will be saved in the <see cref="T:Syncfusion.WinForms.Core.Styles.StyleInfoStore"/> object.
            </param>
        </member>
        <member name="M:Syncfusion.WinForms.Core.Styles.VisualStyleBase.UpdateStyles(Syncfusion.WinForms.Core.Styles.IThemeProvider)">
            <summary>
            Updates the styles from the XML configured file to the target style.
            </summary>
            <param name="control">The control that is defined with the <see cref="T:Syncfusion.WinForms.Core.Styles.IThemeProvider"/>.</param>
        </member>
        <member name="M:Syncfusion.WinForms.Core.Styles.VisualStyleBase.GetDefaultStyle">
            <summary>
            Provide the default style of the <see cref="T:Syncfusion.WinForms.Core.Styles.VisualStyleBase"/>.
            </summary>
            <returns>Default style object.</returns>
        </member>
        <member name="F:Syncfusion.WinForms.Controls.Styles.FormVisualStyle.defaultStyle">
            <summary>
            It contains the value of the <see cref="!:Syncfusion.WinForms.Controls.Styles.FormStyleInfo.DefaultStyle"/> property.
            </summary>
        </member>
        <member name="M:Syncfusion.WinForms.Controls.Styles.FormVisualStyle.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.WinForms.Controls.Styles.FormVisualStyle"/> class.
            </summary>        
        </member>
        <member name="M:Syncfusion.WinForms.Controls.Styles.FormVisualStyle.#ctor(Syncfusion.WinForms.Controls.Styles.FormStyleInfoIdentity)">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.WinForms.Controls.Styles.FormVisualStyle"/> class.
            </summary>
            <param name="identity">A <see cref="T:Syncfusion.WinForms.Controls.Styles.FormStyleInfoIdentity"/> that holds the identity for this <see cref="T:Syncfusion.WinForms.Controls.Styles.FormStyleInfoStore"/>.</param>
        </member>
        <member name="M:Syncfusion.WinForms.Controls.Styles.FormVisualStyle.CreateSubObjectIdentity(Syncfusion.WinForms.Core.Styles.StyleInfoProperty)">
            <summary>
            Override this method to create a product-specific identity object for a sub object.
            </summary>
            <returns>An identity object for a sub object of this style.</returns>
            <example>
            The following code is an example how Essential form creates FormVisualStyleInfoSubObjectIdentity:
            <code lange="C#">
            public override StyleInfoSubObjectIdentity CreateSubObjectIdentity(StyleInfoProperty sip)
            {
            	return new FormVisualStyleInfoSubObjectIdentity(this, sip);
            }
            </code>
            </example>
            <param name="sip">The <see cref="T:Syncfusion.WinForms.Core.Styles.StyleInfoProperty"/>.</param>
        </member>
        <member name="M:Syncfusion.WinForms.Controls.Styles.FormVisualStyle.GetDefaultStyle">
            <summary>
            Provide the default style of the form.
            </summary>
            <returns>Default style object.</returns>
        </member>
        <member name="P:Syncfusion.WinForms.Controls.Styles.FormVisualStyle.DefaultStyle">
            <summary>
            Gets the default style of the form.
            </summary>
        </member>
        <member name="P:Syncfusion.WinForms.Controls.Styles.FormVisualStyle.MdiChild">
            <summary>
            Gets or sets the style information of the MDI form.
            </summary>
        </member>
        <member name="P:Syncfusion.WinForms.Controls.Styles.FormVisualStyle.TitleBar">
            <summary>
            Gets or sets the style information of the caption bar.
            </summary>
        </member>
        <member name="P:Syncfusion.WinForms.Controls.Styles.FormVisualStyle.BackColor">
            <summary>
            Gets or sets the back color of the <see cref="T:Syncfusion.WinForms.Controls.SfForm"/> control.
            </summary>
        </member>
        <member name="P:Syncfusion.WinForms.Controls.Styles.FormVisualStyle.ForeColor">
            <summary>
            Gets or sets the fore color of the <see cref="T:Syncfusion.WinForms.Controls.SfForm"/> control.
            </summary>
        </member>
        <member name="P:Syncfusion.WinForms.Controls.Styles.FormVisualStyle.Border">
            <summary>
            Gets or sets the selected state border of the <see cref="T:Syncfusion.WinForms.Controls.SfForm"/> control.
            </summary>
            <remarks>
            The width of the active state border and inactive state border should be same.
            </remarks>
        </member>
        <member name="P:Syncfusion.WinForms.Controls.Styles.FormVisualStyle.InactiveBorder">
            <summary>
            Gets or sets the inactive state border of the <see cref="T:Syncfusion.WinForms.Controls.SfForm"/> control.
            </summary>
            <remarks>
            The width of the active state border and inactive state border should be same.
            </remarks>
        </member>
        <member name="P:Syncfusion.WinForms.Controls.Styles.FormVisualStyle.ShadowOpacity">
            <summary>
            Gets or sets the opacity of the form's shadow in selected state.
            </summary>
            <remarks>The value should be from 0 to 255.</remarks>
        </member>
        <member name="P:Syncfusion.WinForms.Controls.Styles.FormVisualStyle.InactiveShadowOpacity">
            <summary>
            Gets or sets the opacity of the form's shadow in normal state.
            </summary>
            <remarks>The value should be from 0 to 255.</remarks>
        </member>
        <member name="T:Syncfusion.WinForms.Controls.Styles.FormVisualStyleInfoSubObjectIdentity">
            <summary>
            Defines a class that provides style identity information for nested objects of the VisualStyleInfo class of the control.
            </summary>
        </member>
        <member name="T:Syncfusion.WinForms.Core.Styles.CachedStyleInfoSubObjectIdentity">
            <summary>
            Provides style identity information for nested expandable objects of the GridStyleInfo and TreeStyleInfo classes.
            </summary>
        </member>
        <member name="T:Syncfusion.WinForms.Core.Styles.StyleInfoSubObjectIdentity">
            <summary>
            Provides style identity information for sub objects.
            </summary>
        </member>
        <member name="T:Syncfusion.WinForms.Core.Styles.StyleInfoIdentityBase">
            <summary>
            This is an abstract base class that provides identity information
            for <see cref="T:Syncfusion.WinForms.Core.Styles.StyleInfoBase"/>  objects.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Core.Styles.StyleInfoIdentityBase.innerIdentity">
            <summary>
            The inner identity value.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Core.Styles.StyleInfoIdentityBase.isDisposable">
            <summary>
            Indicates the disposable or not.
            </summary>
        </member>
        <member name="M:Syncfusion.WinForms.Core.Styles.StyleInfoIdentityBase.GetBaseStyle(Syncfusion.WinForms.Core.Styles.IStyleInfo,Syncfusion.WinForms.Core.Styles.StyleInfoProperty)">
            <summary>
            Loops through all base styles until it finds a style that has a specific property initialized.
            </summary>
            <param name="thisStyleInfo">The style information.</param>
            <param name="sipSrc">A <see cref="T:Syncfusion.WinForms.Core.Styles.StyleInfoProperty"/> that identifies the property to operate on.</param>
            <returns>A <see cref="T:Syncfusion.WinForms.Core.Styles.StyleInfoBase"/> that has the property initialized.</returns>
        </member>
        <member name="M:Syncfusion.WinForms.Core.Styles.StyleInfoIdentityBase.Dispose">
            <summary>
            Releases all resources used by the component.
            </summary>
        </member>
        <member name="M:Syncfusion.WinForms.Core.Styles.StyleInfoIdentityBase.GetBaseStyleNotEmptyExpandable(Syncfusion.WinForms.Core.Styles.IStyleInfo,Syncfusion.WinForms.Core.Styles.StyleInfoProperty)">
            <summary>
            Loops through all base styles until it finds an expandable <see cref="T:Syncfusion.WinForms.Core.Styles.StyleInfoSubObjectBase"/>
            that has one or more properties initialized.
            </summary>
            <param name="thisStyleInfo">The style object.</param>
            <param name="sip">A <see cref="T:Syncfusion.WinForms.Core.Styles.StyleInfoProperty"/> that identifies the property to operate on.</param>
            <returns>A <see cref="T:Syncfusion.WinForms.Core.Styles.StyleInfoBase"/> that has the property initialized.</returns>
        </member>
        <member name="M:Syncfusion.WinForms.Core.Styles.StyleInfoIdentityBase.GetBaseStyles(Syncfusion.WinForms.Core.Styles.IStyleInfo)">
            <summary>
            Returns an array with base styles for the specified style object.
            </summary>
            <param name="thisStyleInfo">The style object.</param>
            <returns>An array of style objects that are base styles for the current style object.</returns>
        </member>
        <member name="M:Syncfusion.WinForms.Core.Styles.StyleInfoIdentityBase.OnStyleChanged(Syncfusion.WinForms.Core.Styles.StyleInfoBase,Syncfusion.WinForms.Core.Styles.StyleInfoProperty)">
            <summary>
            Occurs when a property in the <see cref="T:Syncfusion.WinForms.Core.Styles.StyleInfoBase"/> has changed.
            </summary>
            <param name="style">The <see cref="T:Syncfusion.WinForms.Core.Styles.StyleInfoBase"/> instance that has changed.</param>
            <param name="sip">A <see cref="T:Syncfusion.WinForms.Core.Styles.StyleInfoProperty"/> that identifies the property to operate on.</param>
        </member>
        <member name="M:Syncfusion.WinForms.Core.Styles.StyleInfoIdentityBase.OnStyleChanging(Syncfusion.WinForms.Core.Styles.StyleInfoBase,Syncfusion.WinForms.Core.Styles.StyleInfoProperty)">
            <summary>
            Occurs before a property in the <see cref="T:Syncfusion.WinForms.Core.Styles.StyleInfoBase"/> is changing.
            </summary>
            <param name="style">The <see cref="T:Syncfusion.WinForms.Core.Styles.StyleInfoBase"/> instance that is changed.</param>
            <param name="sip">A <see cref="T:Syncfusion.WinForms.Core.Styles.StyleInfoProperty"/> that identifies the property to operate on.</param>
        </member>
        <member name="M:Syncfusion.WinForms.Core.Styles.StyleInfoIdentityBase.Dispose(System.Boolean)">
            <summary> 
            Cleans up any resources being used by the <see cref="T:Syncfusion.WinForms.Core.Styles.StyleInfoBase"/> class.
            </summary>
            <param name="disposing">
            True to release both managed and unmanaged resources; false to release only unmanaged resources.
            </param>
        </member>
        <member name="P:Syncfusion.WinForms.Core.Styles.StyleInfoIdentityBase.InnerIdentity">
            <summary>
            Gets or sets another identity object to be used for determining base styles.
            GetBaseStyle will call InnerIdentity.GetBaseStyle if this object is not NULL.
            </summary>
        </member>
        <member name="P:Syncfusion.WinForms.Core.Styles.StyleInfoIdentityBase.IsDisposable">
            <summary>
            Gets or sets a value indicating whether this object is disposable.
            </summary>
            <value>
            	<c>true</c> if this object is disposable; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="F:Syncfusion.WinForms.Core.Styles.StyleInfoSubObjectIdentity.owner">
            <summary>
            The owner.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Core.Styles.StyleInfoSubObjectIdentity.sip">
            <summary>
            The <see cref="T:Syncfusion.WinForms.Core.Styles.StyleInfoProperty"/> value.
            </summary>
        </member>
        <member name="M:Syncfusion.WinForms.Core.Styles.StyleInfoSubObjectIdentity.#ctor(Syncfusion.WinForms.Core.Styles.StyleInfoBase,Syncfusion.WinForms.Core.Styles.StyleInfoProperty)">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.WinForms.Core.Styles.StyleInfoSubObjectIdentity"/> class for a 
            given owner and <see cref="T:Syncfusion.WinForms.Core.Styles.StyleInfoProperty"/>.
            </summary>
            <param name="owner">The owner style of the sub object.</param>
            <param name="sip">The identifier of the sub object in the owner object.</param>
        </member>
        <member name="M:Syncfusion.WinForms.Core.Styles.StyleInfoSubObjectIdentity.GetBaseStyles(Syncfusion.WinForms.Core.Styles.IStyleInfo)">
            <summary>
            Returns an array with base styles for the specified style object.
            </summary>
            <param name="thisStyleInfo">The style object.</param>
            <returns>
            An array of style objects that are base styles for the current style object.
            </returns>
        </member>
        <member name="M:Syncfusion.WinForms.Core.Styles.StyleInfoSubObjectIdentity.Dispose(System.Boolean)">
            <summary> 
            Cleans up any resources being used by the <see cref="T:Syncfusion.WinForms.Core.Styles.StyleInfoSubObjectIdentity"/> class.
            </summary>
            <param name="disposing">
            True to release both managed and unmanaged resources; false to release only unmanaged resources.
            </param>
        </member>
        <member name="P:Syncfusion.WinForms.Core.Styles.StyleInfoSubObjectIdentity.Owner">
            <summary>
            Gets the owner style of the sub object.
            </summary>
        </member>
        <member name="P:Syncfusion.WinForms.Core.Styles.StyleInfoSubObjectIdentity.Sip">
            <summary>
            Gets the identifier of the sub object in the owner object.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Core.Styles.CachedStyleInfoSubObjectIdentity.cachedBaseStyles">
            <summary>
            The cache.
            </summary>
        </member>
        <member name="M:Syncfusion.WinForms.Core.Styles.CachedStyleInfoSubObjectIdentity.#ctor(Syncfusion.WinForms.Core.Styles.StyleInfoBase,Syncfusion.WinForms.Core.Styles.StyleInfoProperty)">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.WinForms.Core.Styles.CachedStyleInfoSubObjectIdentity"/> class and associates it with a <see cref="T:Syncfusion.WinForms.Core.Styles.StyleInfoBase"/>.
            </summary>
            <param name="owner">The <see cref="T:Syncfusion.WinForms.Core.Styles.StyleInfoBase"/> that owns this sub object.</param>
            <param name="sip">The <see cref="T:Syncfusion.WinForms.Core.Styles.StyleInfoProperty"/> descriptor for this expandable sub object.</param>
        </member>
        <member name="M:Syncfusion.WinForms.Core.Styles.CachedStyleInfoSubObjectIdentity.GetBaseStyles(Syncfusion.WinForms.Core.Styles.IStyleInfo)">
            <summary>
            Returns an array with base styles for the specified style object.
            </summary>
            <param name="thisStyleInfo">The style object.</param>
            <returns>
            An array of style objects that are base styles for the current style object.
            </returns>
        </member>
        <member name="M:Syncfusion.WinForms.Core.Styles.CachedStyleInfoSubObjectIdentity.OnStyleChanged(Syncfusion.WinForms.Core.Styles.StyleInfoBase,Syncfusion.WinForms.Core.Styles.StyleInfoProperty)">
            <summary>
            Occurs when a property in the <see cref="T:Syncfusion.WinForms.Core.Styles.StyleInfoBase"/> has changed.
            </summary>
            <param name="style">The <see cref="T:Syncfusion.WinForms.Core.Styles.StyleInfoBase"/> instance that has changed.</param>
            <param name="sip">A <see cref="T:Syncfusion.WinForms.Core.Styles.StyleInfoProperty"/> that identifies the property to operate on.</param>
        </member>
        <member name="M:Syncfusion.WinForms.Controls.Styles.FormVisualStyleInfoSubObjectIdentity.#ctor(Syncfusion.WinForms.Core.Styles.StyleInfoBase,Syncfusion.WinForms.Core.Styles.StyleInfoProperty)">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.WinForms.Controls.Styles.FormVisualStyleInfoSubObjectIdentity"/> class and associates it with a specified.
            </summary>
            <param name="owner">The <see cref="!:Syncfusion.Styles.StyleInfoBase"/> that owns this sub-object.</param>
            <param name="sip">The <see cref="!:Syncfusion.Styles.StyleInfoProperty"/> descriptor for this expandable sub-object.</param>
        </member>
        <member name="T:Syncfusion.WinForms.Controls.Styles.FormStyleInfoIdentity">
            <summary>
            Implements the class that provide the identity information of <see cref="T:Syncfusion.WinForms.Controls.Styles.FormVisualStyle"/> 
            using <see cref="T:Syncfusion.WinForms.Core.Styles.StyleInfoSubObjectIdentity"/>.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Controls.Styles.FormStyleInfoIdentity.sfForm">
            <summary>
             Maintains the SfDataGrid for create the identity. 
            </summary>
        </member>
        <member name="M:Syncfusion.WinForms.Controls.Styles.FormStyleInfoIdentity.#ctor(Syncfusion.WinForms.Controls.SfForm)">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.WinForms.Controls.Styles.FormStyleInfoIdentity"/> class.
            </summary>
            <param name="sfForm">
            <see cref="T:Syncfusion.WinForms.Controls.SfForm"/> to create an identity.
            </param>
        </member>
        <member name="M:Syncfusion.WinForms.Controls.Styles.FormStyleInfoIdentity.GetBaseStyles(Syncfusion.WinForms.Core.Styles.IStyleInfo)">
            <summary>
            Loops through all base styles until it finds a style that has a specific property initialized.
            </summary>
            <param name="thisStyleInfo">A instance of <see cref="T:Syncfusion.WinForms.Core.Styles.IStyleInfo"/></param>
            <returns>
            Returns the <see cref="T:Syncfusion.WinForms.Core.Styles.IStyleInfo"/>.
            </returns>
        </member>
        <member name="M:Syncfusion.WinForms.Controls.Styles.FormStyleInfoIdentity.OnStyleChanged(Syncfusion.WinForms.Core.Styles.StyleInfoBase,Syncfusion.WinForms.Core.Styles.StyleInfoProperty)">
            <summary>
            Occurs when a property in the <see cref="T:Syncfusion.WinForms.Core.Styles.StyleInfoBase"/> has changed.
            </summary>
            <param name="style">The <see cref="T:Syncfusion.WinForms.Core.Styles.StyleInfoBase"/> instance that has changed.</param>
            <param name="sip">A <see cref="T:Syncfusion.WinForms.Core.Styles.StyleInfoProperty"/> that identifies the property to operate on.</param>
        </member>
        <member name="T:Syncfusion.WinForms.Controls.TitleBar">
            <summary>
            Represents the class that draws the title bar of the form.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Controls.TitleBar.closeRect">
            <summary>
            Rectangle to draw the close button of the caption bar.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Controls.TitleBar.maximizeRect">
            <summary>
            Rectangle to draw the maximize/restore button of the caption bar.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Controls.TitleBar.minimizeRect">
            <summary>
            Rectangle to draw the minimize button of the caption bar.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Controls.TitleBar.helpRect">
            <summary>
            Rectangle to draw the help button of the caption bar.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Controls.TitleBar.iconRect">
            <summary>
            Rectangle used to draw the title bar icon of the form.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Controls.TitleBar.mdiCloseRect">
            <summary>
            Rectangle to draw the MDI close button of the caption bar.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Controls.TitleBar.mdiMaximizeRect">
            <summary>
            Rectangle to draw the MDI maximize button of the caption bar.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Controls.TitleBar.mdiMinimizeRect">
            <summary>
            Rectangle to draw the MDI minimize button of the caption bar.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Controls.TitleBar.mdiHelpRect">
            <summary>
            Rectangle to draw the MDI help button of the caption bar.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Controls.TitleBar.mdiIconRect">
            <summary>
            Rectangle used to draw the MDI icon on the caption bar.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Controls.TitleBar.textRect">
            <summary>
            Rectangle used to draw the title bar text.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Controls.TitleBar.closeIconRect">
            <summary>
            Rectangle that holds the close icon of the caption bar.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Controls.TitleBar.maxIconRect">
            <summary>
            Rectangle used to draw the maximize icon of the caption bar.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Controls.TitleBar.restoreIconRect">
            <summary>
            Rectangle used to draw the restore up icon of the caption bar of minimized mdi child.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Controls.TitleBar.mdiCaptionRect">
            <summary>
            Rectangle that specifies the area in the caption bar that contains MDI buttons and icon.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Controls.TitleBar.sfForm">
            <summary>
            Represents an instance of <see cref="T:Syncfusion.WinForms.Controls.SfForm"/> class.
            </summary>
        </member>
        <member name="M:Syncfusion.WinForms.Controls.TitleBar.#ctor(Syncfusion.WinForms.Controls.SfForm)">
            <summary>
             Initializes a new instance of the <see cref="T:Syncfusion.WinForms.Controls.TitleBar"/> class.
            </summary>
            <param name="form">Instance of <see cref="T:Syncfusion.WinForms.Controls.SfForm"/> class.</param>
        </member>
        <member name="M:Syncfusion.WinForms.Controls.TitleBar.Dispose">
            <summary>
            Clean up the unmanaged resources
            </summary>
        </member>
        <member name="M:Syncfusion.WinForms.Controls.TitleBar.DrawCaption(System.Drawing.Graphics,System.Drawing.Rectangle)">
            <summary>
            Draw the caption bar of the form.
            </summary>
            <param name="graphics">Graphics object.</param>
            <param name="rect">Caption rectangle.</param>
        </member>
        <member name="M:Syncfusion.WinForms.Controls.TitleBar.DrawCloseButton(System.Drawing.Graphics,System.Drawing.Color,System.Drawing.Color,System.Drawing.Image)">
            <summary>
            Draw the close button of the caption bar.
            </summary>
            <param name="g">Graphics object</param>
            <param name="backColor">Caption button BackColor</param>
            <param name="buttonColor">Caption ButtonColor</param>
            <param name="image">Button image</param>
        </member>
        <member name="M:Syncfusion.WinForms.Controls.TitleBar.DrawHelpButton(System.Drawing.Graphics,System.Drawing.Color,System.Drawing.Color,System.Drawing.Image)">
            <summary>
            Draw the help button button of the caption bar.
            </summary>
            <param name="g">Graphics object</param>
            <param name="backColor">Caption button BackColor</param>
            <param name="buttonColor">Caption ButtonColor</param>
            <param name="image">Button image</param>
        </member>
        <member name="M:Syncfusion.WinForms.Controls.TitleBar.DrawMinimizeButton(System.Drawing.Graphics,System.Drawing.Color,System.Drawing.Color,System.Drawing.Image)">
            <summary>
            Draw the minimize button button of the caption bar.
            </summary>
            <param name="g">Graphics object</param>
            <param name="backColor">Caption button BackColor</param>
            <param name="buttonColor">Caption ButtonColor</param>
            <param name="image">Button image</param>
        </member>
        <member name="M:Syncfusion.WinForms.Controls.TitleBar.DrawMaximizeButton(System.Drawing.Graphics,System.Drawing.Color,System.Drawing.Color,System.Drawing.Image)">
            <summary>
            Draw the maximize button button of the caption bar.
            </summary>
            <param name="g">Graphics object</param>
            <param name="backColor">Caption button BackColor</param>
            <param name="buttonColor">Caption ButtonColor</param>
            <param name="image">Button image</param>
        </member>
        <member name="M:Syncfusion.WinForms.Controls.TitleBar.DrawCaptionButtons(System.Drawing.Graphics,System.Drawing.Rectangle)">
            <summary>
            Draw the buttons on the caption bar.
            </summary>
            <param name="g">Graphics object</param>
            <param name="rect">Caption Rectangle </param>
        </member>
        <member name="M:Syncfusion.WinForms.Controls.TitleBar.DrawMdiHelpButton(System.Drawing.Graphics,System.Drawing.Color,System.Drawing.Image)">
            <summary>
            Draw MDI Help button on the caption bar.
            </summary>
            <param name="g">Graphics object.</param>
            <param name="foreColor">ForeColor of the MDI help button.</param>
            <param name="image">MDI help button image.</param>
        </member>
        <member name="M:Syncfusion.WinForms.Controls.TitleBar.DrawMdiCloseButton(System.Drawing.Graphics,System.Drawing.Color,System.Drawing.Image)">
            <summary>
            Draw MDI close button on the caption bar.
            </summary>
            <param name="g">Graphics object.</param>
            <param name="foreColor">ForeColor of the MDI close button.</param>
            <param name="image">MDI close button image.</param>
        </member>
        <member name="M:Syncfusion.WinForms.Controls.TitleBar.DrawMdiMaximizeButton(System.Drawing.Graphics,System.Drawing.Color,System.Drawing.Color,System.Drawing.Image)">
            <summary>
            Draw the MDI maximize button on the caption bar.
            </summary>
            <param name="g">Graphics object.</param>
            <param name="backColor">BackColor of the MDI maximize button.</param>
            <param name="foreColor">ForeColor of the MDI maximize button.</param>
            <param name="image">MDI maximize button image.</param>
        </member>
        <member name="M:Syncfusion.WinForms.Controls.TitleBar.DrawMdiMinimizeButton(System.Drawing.Graphics,System.Drawing.Color,System.Drawing.Image)">
            <summary>
            Draw the MDI minimize button on the caption bar.
            </summary>
            <param name="g">Graphics object.</param>
            <param name="foreColor">ForeColor of the MDI minimize button.</param>
            <param name="image">MDI minimize button image.</param>
        </member>
        <member name="M:Syncfusion.WinForms.Controls.TitleBar.DrawMdiButtons(System.Drawing.Graphics)">
            <summary>
            Draw the MDI buttons on the caption bar.
            </summary>
            <param name="g">Graphics object.</param>
        </member>
        <member name="M:Syncfusion.WinForms.Controls.TitleBar.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="dispose">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:Syncfusion.WinForms.Controls.TitleBar.CalculateCloseRect(System.Drawing.Rectangle,System.Single,System.Int32,System.Int32,System.Int32)">
            <summary>
            Calculate the rectangle to draw the close button.
            </summary>
            <param name="rect">Title bar rectangle.</param>
            <param name="borderThickness">Form border width.</param>
            <param name="buttonWidth">Button Width.</param>
            <param name="buttonHeight">Button height.</param>
            <param name="y">Button Y position.</param>
            <returns>Returns the rectangle to draw the close button.</returns>
        </member>
        <member name="M:Syncfusion.WinForms.Controls.TitleBar.CalculateMaximizeRect(System.Drawing.Rectangle,System.Int32,System.Int32,System.Int32)">
            <summary>
            Calculate the rectangle to draw the maximize button.
            </summary>
            <param name="closeRect">Close button rectangle.</param>
            <param name="buttonWidth">Button width.</param>
            <param name="buttonHeight">Button Height.</param>
            <param name="y">Button Y position.</param>
            <returns>Returns the rectangle to draw the maximize button.</returns>
        </member>
        <member name="M:Syncfusion.WinForms.Controls.TitleBar.CalculateMinimizeRect(System.Drawing.Rectangle,System.Int32,System.Int32,System.Int32)">
            <summary>
            Calculate the rectangle to draw the minimize button. 
            </summary>
            <param name="maximizeRect">Maximize button rectangle.</param>
            <param name="buttonWidth">Button width.</param>
            <param name="buttonHeight">Button height.</param>
            <param name="y">Button Y position.</param>
            <returns>Returns the rectangle to draw the minimize button.</returns>
        </member>
        <member name="M:Syncfusion.WinForms.Controls.TitleBar.CalculateHelpRect(System.Drawing.Rectangle,System.Int32,System.Int32,System.Int32)">
            <summary>
            Calculate the rectangle to draw the help button. 
            </summary>
            <param name="minimizeRect">Minimize button rectangle.</param>
            <param name="buttonWidth">Button width.</param>
            <param name="buttonHeight">Button height.</param>
            <param name="y">Button Y position.</param>
            <returns>Returns the rectangle to draw the help button.</returns>
        </member>
        <member name="M:Syncfusion.WinForms.Controls.TitleBar.CalculateMdiButtonsRect(System.Drawing.Rectangle)">
            <summary>
            Calculate the rectangles to draw the mdi buttons.
            </summary>
            <param name="mdiCaptionRect">Title bar rectangle.</param>
        </member>
        <member name="M:Syncfusion.WinForms.Controls.TitleBar.CalculateTitleBarRectangle(System.Drawing.Rectangle,System.Int32)">
            <summary>
            Calculate the rectangle to draw the title bar of the form.
            </summary>
            <param name="rect">Window rectangle.</param>
            <param name="captionHeight">Height of the title bar.</param>
            <returns>Returns the rectangle to draw the title bar of the form.</returns>
        </member>
        <member name="M:Syncfusion.WinForms.Controls.TitleBar.DrawCaptionIcon(System.Drawing.Graphics,System.Drawing.Rectangle)">
            <summary>
            Draw the form icon on the caption bar. 
            </summary>
            <param name="g">Graphics object.</param>
            <param name="rect"> Rectangle to draw the form icon.</param>
        </member>
        <member name="M:Syncfusion.WinForms.Controls.TitleBar.CalculateIconRectangle(System.Drawing.Rectangle)">
            <summary>
            Calculate the rectangle to draw the title bar icon.
            </summary>
            <param name="rect">Title bar rectangle.</param>
            <returns>Returns the rectangle to draw the title bar icon.</returns>
        </member>
        <member name="M:Syncfusion.WinForms.Controls.TitleBar.CalculateMdiIconRectangle">
            <summary>
            Calculate the rectangle to draw the mdi icon.
            </summary>
        </member>
        <member name="M:Syncfusion.WinForms.Controls.TitleBar.DrawCaptionBar(System.Drawing.Graphics,System.Drawing.Rectangle)">
            <summary>
            Fill the caption bar with the color specified by CaptionBackColor property.
            </summary>
            <param name="g">Graphics object.</param>
            <param name="rect">Caption bar rectangle.</param>
        </member>
        <member name="M:Syncfusion.WinForms.Controls.TitleBar.DrawCaptionText(System.Drawing.Graphics,System.Drawing.Rectangle)">
            <summary>
            Draw the text in the caption bar 
            </summary>
            <param name="g">Graphics object.</param>
            <param name="rect">Caption bar rectangle.</param>
        </member>
        <member name="M:Syncfusion.WinForms.Controls.TitleBar.CalculateTextRectangle(System.Drawing.Rectangle)">
            <summary>
            Calculate the rectangle to draw the title bar text.
            </summary>
            <param name="rect">Title bar rectangle.</param>
            <returns>Returns the rectangle to draw the title bar text.</returns>
        </member>
        <member name="M:Syncfusion.WinForms.Controls.TitleBar.DrawCaptionImage(System.Drawing.Graphics)">
            <summary>
             Draw the caption image in the caption bar. 
            </summary>
            <param name="g">Graphics object</param>
        </member>
        <member name="M:Syncfusion.WinForms.Controls.TitleBar.DrawRichText(System.Drawing.Graphics,System.String,System.Drawing.Rectangle)">
            <summary>
            Draws the rich text on the given graphics.
            </summary>
            <param name="graphics">Graphics object.</param>
            <param name="rtfText">The string value contains the rich text content.</param>
            <param name="textRect">The rectangle value used to draw the rich text.</param>
        </member>
        <member name="P:Syncfusion.WinForms.Controls.TitleBar.CloseRect">
            <summary>
            Gets the value indicating the rectangle to draw the close button.
            </summary>
        </member>
        <member name="P:Syncfusion.WinForms.Controls.TitleBar.MaximizeRect">
            <summary>
            Gets the value indicating the rectangle to draw the maximize button.
            </summary>
        </member>
        <member name="P:Syncfusion.WinForms.Controls.TitleBar.MinimizeRect">
            <summary>
            Gets the value indicating the rectangle to draw the minimize button.
            </summary>
        </member>
        <member name="P:Syncfusion.WinForms.Controls.TitleBar.HelpRect">
            <summary>
            Gets the value indicating the rectangle to draw the help button.
            </summary>
        </member>
        <member name="P:Syncfusion.WinForms.Controls.TitleBar.IconRect">
            <summary>
            Gets the value indicating the rectangle to draw the form icon.
            </summary>
        </member>
        <member name="P:Syncfusion.WinForms.Controls.TitleBar.MdiCloseRect">
            <summary>
            Gets the value indicating the rectangle to draw the mdi close button.
            </summary>
        </member>
        <member name="P:Syncfusion.WinForms.Controls.TitleBar.MdiMaximizeRect">
            <summary>
            Gets the value indicating the rectangle to draw the mdi maximize button.
            </summary>
        </member>
        <member name="P:Syncfusion.WinForms.Controls.TitleBar.MdiMinimizeRect">
            <summary>
            Gets the value indicating the rectangle to draw the mdi minimize button.
            </summary>
        </member>
        <member name="P:Syncfusion.WinForms.Controls.TitleBar.MdiHelpRect">
            <summary>
            Gets the value indicating the rectangle to draw the mdi help button.
            </summary>
        </member>
        <member name="T:Syncfusion.WinForms.Controls.Styles.TitleBarStyleInfo">
            <summary>
            Represents the class that defines the title bar style information for the <see cref="T:Syncfusion.WinForms.Controls.SfForm"/> control.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Controls.Styles.TitleBarStyleInfo.defaultStyle">
            <summary>
            It contains the value of the <see cref="P:Syncfusion.WinForms.Controls.Styles.TitleBarStyleInfo.DefaultStyle"/> property.
            </summary>
        </member>
        <member name="M:Syncfusion.WinForms.Controls.Styles.TitleBarStyleInfo.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.WinForms.Controls.Styles.TitleBarStyleInfo"/> class.
            </summary>
        </member>
        <member name="M:Syncfusion.WinForms.Controls.Styles.TitleBarStyleInfo.#ctor(Syncfusion.WinForms.Core.Styles.StyleInfoSubObjectIdentity,Syncfusion.WinForms.Controls.Styles.TitleBarStyleInfoStore)">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.WinForms.Controls.Styles.TitleBarStyleInfo"/> class and associates it with an existing <see cref="T:Syncfusion.WinForms.Core.Styles.StyleInfoStore"/>.
            </summary>
            <param name="identity">A <see cref="T:Syncfusion.WinForms.Core.Styles.StyleInfoSubObjectIdentity"/> that holds the identity for this <see cref="T:Syncfusion.WinForms.Core.Styles.StyleInfoBase"/>.</param>
            <param name="store">A <see cref="T:Syncfusion.WinForms.Core.Styles.StyleInfoStore"/> that holds data for this object.
            All changes in this style object will be saved in the <see cref="T:Syncfusion.WinForms.Core.Styles.StyleInfoStore"/> object.
            </param>
        </member>
        <member name="M:Syncfusion.WinForms.Controls.Styles.TitleBarStyleInfo.#ctor(Syncfusion.WinForms.Core.Styles.StyleInfoSubObjectIdentity)">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.WinForms.Controls.Styles.TitleBarStyleInfo"/> class and associates it with an existing <see cref="T:Syncfusion.WinForms.Core.Styles.StyleInfoStore"/>.
            </summary>
            <param name="identity">A <see cref="T:Syncfusion.WinForms.Core.Styles.StyleInfoSubObjectIdentity"/> that holds the identity for this <see cref="T:Syncfusion.WinForms.Core.Styles.StyleInfoBase"/>.</param>        
        </member>
        <member name="M:Syncfusion.WinForms.Controls.Styles.TitleBarStyleInfo.ShouldSerializeFont">
            <summary>
             Determines a value that indicates whether to serialize the Font property or not.
            </summary>
            <returns>returns true if serialized; Otherwise false</returns>
        </member>
        <member name="M:Syncfusion.WinForms.Controls.Styles.TitleBarStyleInfo.ShouldSerializeCloseButtonSize">
            <summary>
             Determines a value that indicates whether to serialize the CloseButtonSize property or not.
            </summary>
            <returns>returns true if serialized; Otherwise false</returns>
        </member>
        <member name="M:Syncfusion.WinForms.Controls.Styles.TitleBarStyleInfo.ShouldSerializeMaximizeButtonSize">
            <summary>
             Determines a value that indicates whether to serialize the MaximizeButtonSize property or not.
            </summary>
            <returns>returns true if serialized; Otherwise false</returns>
        </member>
        <member name="M:Syncfusion.WinForms.Controls.Styles.TitleBarStyleInfo.ShouldSerializeMinimizeButtonSize">
            <summary>
             Determines a value that indicates whether to serialize the MinimizeButtonSize property or not.
            </summary>
            <returns>returns true if serialized; Otherwise false</returns>
        </member>
        <member name="M:Syncfusion.WinForms.Controls.Styles.TitleBarStyleInfo.ShouldSerializeHelpButtonSize">
            <summary>
             Determines a value that indicates whether to serialize the HelpButtonSize property or not.
            </summary>
            <returns>returns true if serialized; Otherwise false</returns>
        </member>
        <member name="M:Syncfusion.WinForms.Controls.Styles.TitleBarStyleInfo.MakeCopy(Syncfusion.WinForms.Core.Styles.StyleInfoBase,Syncfusion.WinForms.Core.Styles.StyleInfoProperty)">
            <summary>
            Makes an exact copy of the current object.
            </summary>
            <param name="newOwner">The new owner style object for the copied object.</param>
            <param name="sip">The identifier for this object.</param>
            <returns>A copy of the current object registered with the new owner style object.</returns>
        </member>
        <member name="M:Syncfusion.WinForms.Controls.Styles.TitleBarStyleInfo.GetDefaultStyle">
            <summary>
            Provide the default style of the TitleBar bar.
            </summary>
            <returns>Default style object.</returns>
        </member>
        <member name="M:Syncfusion.WinForms.Controls.Styles.TitleBarStyleInfo.ShouldSerializeCaptionImage">
            <summary>
             Determines a value that indicates whether to serialize the <see cref="P:Syncfusion.WinForms.Controls.Styles.TitleBarStyleInfo.CaptionImage"/> property or not.
            </summary>
            <returns>returns true if serialized; Otherwise false</returns>
        </member>
        <member name="M:Syncfusion.WinForms.Controls.Styles.TitleBarStyleInfo.ShouldSerializeCaptionImageLocation">
            <summary>
            Determines a value that indicates whether to serialize the <see cref="P:Syncfusion.WinForms.Controls.Styles.TitleBarStyleInfo.CaptionImageLocation"/> property or not.
            </summary>
            <returns>returns true if serialized; Otherwise false</returns>
        </member>
        <member name="M:Syncfusion.WinForms.Controls.Styles.TitleBarStyleInfo.ShouldSerializeIconBackColor">
            <summary>
            Determines a value that indicates whether to serialize the <see cref="P:Syncfusion.WinForms.Controls.Styles.TitleBarStyleInfo.IconBackColor"/> property or not.
            </summary>
            <returns>returns true if serialized; Otherwise false</returns>
        </member>
        <member name="P:Syncfusion.WinForms.Controls.Styles.TitleBarStyleInfo.DefaultStyle">
            <summary>
            Gets the default style of the TitleBar bar.
            </summary>
        </member>
        <member name="P:Syncfusion.WinForms.Controls.Styles.TitleBarStyleInfo.AllowRichText">
            <summary>
            Gets or sets a value indicating whether rich text can be provided as caption or not.
            </summary>
            <value>The default value is <b>false</b>.</value>
            <example>
            <code lang="C#">
            this.Style.TitleBar.AllowRichText = true;
            // Set rich text for the Form.Text property.
            this.Text = "{\\rtf\\ansi \\b  Form1}";
            </code>
            </example>
        </member>
        <member name="P:Syncfusion.WinForms.Controls.Styles.TitleBarStyleInfo.CloseButtonPressedForeColor">
            <summary>
            Gets or sets the pressed fore color of the close button.
            </summary>
        </member>
        <member name="P:Syncfusion.WinForms.Controls.Styles.TitleBarStyleInfo.MaximizeButtonPressedForeColor">
            <summary>
            Gets or sets the pressed fore color of the maximize button.
            </summary>
        </member>
        <member name="P:Syncfusion.WinForms.Controls.Styles.TitleBarStyleInfo.MinimizeButtonPressedForeColor">
            <summary>
            Gets or sets the pressed fore color of the minimize button.
            </summary>
        </member>
        <member name="P:Syncfusion.WinForms.Controls.Styles.TitleBarStyleInfo.HelpButtonPressedForeColor">
            <summary>
            Gets or sets the pressed fore color of the help button.
            </summary>
        </member>
        <member name="P:Syncfusion.WinForms.Controls.Styles.TitleBarStyleInfo.CloseButtonPressedBackColor">
            <summary>
            Gets or sets the pressed background color of the close button.
            </summary>
        </member>
        <member name="P:Syncfusion.WinForms.Controls.Styles.TitleBarStyleInfo.MaximizeButtonPressedBackColor">
            <summary>
            Gets or sets the pressed background color of the maximize button.
            </summary>
        </member>
        <member name="P:Syncfusion.WinForms.Controls.Styles.TitleBarStyleInfo.MinimizeButtonPressedBackColor">
            <summary>
            Gets or sets the pressed background color of the minimize button.
            </summary>
        </member>
        <member name="P:Syncfusion.WinForms.Controls.Styles.TitleBarStyleInfo.HelpButtonPressedBackColor">
            <summary>
            Gets or sets the pressed background color of the help button.
            </summary>
        </member>
        <member name="P:Syncfusion.WinForms.Controls.Styles.TitleBarStyleInfo.CloseButtonHoverForeColor">
            <summary>
            Gets or sets the hover fore color for the close button.
            </summary>
        </member>
        <member name="P:Syncfusion.WinForms.Controls.Styles.TitleBarStyleInfo.MaximizeButtonHoverForeColor">
            <summary>
            Gets or sets the hover fore color for the maximize button.
            </summary>
        </member>
        <member name="P:Syncfusion.WinForms.Controls.Styles.TitleBarStyleInfo.MinimizeButtonHoverForeColor">
            <summary>
            Gets or sets the hover fore color for the minimize button.
            </summary>
        </member>
        <member name="P:Syncfusion.WinForms.Controls.Styles.TitleBarStyleInfo.HelpButtonHoverForeColor">
            <summary>
            Gets or sets the hover fore color for the help button.
            </summary>
        </member>
        <member name="P:Syncfusion.WinForms.Controls.Styles.TitleBarStyleInfo.CloseButtonHoverBackColor">
            <summary>
            Gets or sets the hover back color for the close button.
            </summary>
        </member>
        <member name="P:Syncfusion.WinForms.Controls.Styles.TitleBarStyleInfo.MaximizeButtonHoverBackColor">
            <summary>
            Gets or sets the hover back color for the maximize button.
            </summary>
        </member>
        <member name="P:Syncfusion.WinForms.Controls.Styles.TitleBarStyleInfo.MinimizeButtonHoverBackColor">
            <summary>
            Gets or sets the hover back color for the minimize button.
            </summary>
        </member>
        <member name="P:Syncfusion.WinForms.Controls.Styles.TitleBarStyleInfo.HelpButtonHoverBackColor">
            <summary>
            Gets or sets the hover back color for the help button.
            </summary>
        </member>
        <member name="P:Syncfusion.WinForms.Controls.Styles.TitleBarStyleInfo.CloseButtonForeColor">
            <summary>
            Gets or sets the fore color of the close button.
            </summary>
        </member>
        <member name="P:Syncfusion.WinForms.Controls.Styles.TitleBarStyleInfo.MaximizeButtonForeColor">
            <summary>
            Gets or sets the fore color of the maximize button.
            </summary>
        </member>
        <member name="P:Syncfusion.WinForms.Controls.Styles.TitleBarStyleInfo.MinimizeButtonForeColor">
            <summary>
            Gets or sets the fore color of the minimize button.
            </summary>
        </member>
        <member name="P:Syncfusion.WinForms.Controls.Styles.TitleBarStyleInfo.HelpButtonForeColor">
            <summary>
            Gets or sets the fore color of the help button.
            </summary>
        </member>
        <member name="P:Syncfusion.WinForms.Controls.Styles.TitleBarStyleInfo.ForeColor">
            <summary>
            Gets or sets the foreground color of the TitleBar.
            </summary>
        </member>
        <member name="P:Syncfusion.WinForms.Controls.Styles.TitleBarStyleInfo.BackColor">
            <summary>
            Gets or sets the background color of the TitleBar.
            </summary>
        </member>
        <member name="P:Syncfusion.WinForms.Controls.Styles.TitleBarStyleInfo.Height">
            <summary>
            Gets or sets the height of the TitleBar.
            </summary>
        </member>
        <member name="P:Syncfusion.WinForms.Controls.Styles.TitleBarStyleInfo.Padding">
            <summary>
            Gets or sets the padding for the <see cref="P:Syncfusion.WinForms.Controls.SfForm.TitleBarTextControl"/>.
            </summary>
        </member>
        <member name="P:Syncfusion.WinForms.Controls.Styles.TitleBarStyleInfo.IconBackColor">
            <summary>
            Gets or sets the backcolor for the icon
            </summary>
        </member>
        <member name="P:Syncfusion.WinForms.Controls.Styles.TitleBarStyleInfo.IconHorizontalAlignment">
            <summary>
            Gets or sets the horizontal alignment of the title bar icon.
            </summary>
            <value>The default value is <b>left</b>.</value>
        </member>
        <member name="P:Syncfusion.WinForms.Controls.Styles.TitleBarStyleInfo.IconVerticalAlignment">
            <summary>
            Gets or sets the vertical alignment of the title bar icon.
            </summary>
            <value>The default value is <b>center</b>.</value>
        </member>
        <member name="P:Syncfusion.WinForms.Controls.Styles.TitleBarStyleInfo.TextHorizontalAlignment">
            <summary>
            Gets or sets the horizontal alignment of the title bar text.
            </summary>
            <value>The default value is <b>left</b>.</value>
        </member>
        <member name="P:Syncfusion.WinForms.Controls.Styles.TitleBarStyleInfo.TextVerticalAlignment">
            <summary>
            Gets or sets the vertical alignment of the title Bar text.
            </summary>
            <value>The default value is <b>center</b>.</value>
        </member>
        <member name="P:Syncfusion.WinForms.Controls.Styles.TitleBarStyleInfo.CloseButtonImage">
            <summary>
            Gets or sets the image for the close button.
            </summary>
            <value>The default value is <b>null</b>.</value>
        </member>
        <member name="P:Syncfusion.WinForms.Controls.Styles.TitleBarStyleInfo.CloseButtonHoverImage">
            <summary>
            Gets or sets the hover image for the close button.
            </summary>
            <value>The default value is <b>null</b>.</value>
        </member>
        <member name="P:Syncfusion.WinForms.Controls.Styles.TitleBarStyleInfo.CloseButtonPressedImage">
            <summary>
            Gets or sets the pressed image for the close button.
            </summary>
            <value>The default value is <b>null</b>.</value>
        </member>
        <member name="P:Syncfusion.WinForms.Controls.Styles.TitleBarStyleInfo.MaximizeButtonImage">
            <summary>
            Gets or sets the image for the maximize button.
            </summary>
            <value>The default value is <b>null</b>.</value>
        </member>
        <member name="P:Syncfusion.WinForms.Controls.Styles.TitleBarStyleInfo.MaximizeButtonHoverImage">
            <summary>
            Gets or sets the hover image for the maximize button.
            </summary>
            <value>The default value is <b>null</b>.</value>
        </member>
        <member name="P:Syncfusion.WinForms.Controls.Styles.TitleBarStyleInfo.MaximizeButtonPressedImage">
            <summary>
            Gets or sets the pressed image for the maximize button.
            </summary>
            <value>The default value is <b>null</b>.</value>
        </member>
        <member name="P:Syncfusion.WinForms.Controls.Styles.TitleBarStyleInfo.MinimizeButtonImage">
            <summary>
            Gets or sets the image for the minimize button.
            </summary>
            <value>The default value is <b>null</b>.</value>
        </member>
        <member name="P:Syncfusion.WinForms.Controls.Styles.TitleBarStyleInfo.MinimizeButtonHoverImage">
            <summary>
            Gets or sets the hover image for the minimize button.
            </summary>
            <value>The default value is <b>null</b>.</value>
        </member>
        <member name="P:Syncfusion.WinForms.Controls.Styles.TitleBarStyleInfo.MinimizeButtonPressedImage">
            <summary>
            Gets or sets the pressed image for the minimize button.
            </summary>
            <value>The default value is <b>null</b>.</value>
        </member>
        <member name="P:Syncfusion.WinForms.Controls.Styles.TitleBarStyleInfo.HelpButtonImage">
            <summary>
            Gets or sets the image for the help button.
            </summary>
            <value>The default value is <b>null</b>.</value>
        </member>
        <member name="P:Syncfusion.WinForms.Controls.Styles.TitleBarStyleInfo.HelpButtonHoverImage">
            <summary>
            Gets or sets the hover image for the help button.
            </summary>
            <value>The default value is <b>null</b>.</value>
        </member>
        <member name="P:Syncfusion.WinForms.Controls.Styles.TitleBarStyleInfo.CaptionImage">
            <summary>
            Gets or sets the image to the caption bar.
            </summary>
            <value>The default value is <b>null</b>.</value>
        </member>
        <member name="P:Syncfusion.WinForms.Controls.Styles.TitleBarStyleInfo.CaptionImageLocation">
            <summary>
            Gets or sets the location to the caption image.
            </summary>
        </member>
        <member name="P:Syncfusion.WinForms.Controls.Styles.TitleBarStyleInfo.HelpButtonPressedImage">
            <summary>
            Gets or sets the pressed image for the help button.
            </summary>
            <value>The default value is <b>null</b>.</value>
        </member>
        <member name="P:Syncfusion.WinForms.Controls.Styles.TitleBarStyleInfo.CloseButtonSize">
            <summary>
            Gets or sets the size of the close button.
            </summary>
        </member>
        <member name="P:Syncfusion.WinForms.Controls.Styles.TitleBarStyleInfo.MaximizeButtonSize">
            <summary>
            Gets or sets the size of the maximize button.
            </summary>
        </member>
        <member name="P:Syncfusion.WinForms.Controls.Styles.TitleBarStyleInfo.MinimizeButtonSize">
            <summary>
            Gets or sets the size of the minimize button.
            </summary>
        </member>
        <member name="P:Syncfusion.WinForms.Controls.Styles.TitleBarStyleInfo.HelpButtonSize">
            <summary>
            Gets or sets the size of the help button.
            </summary>
        </member>
        <member name="P:Syncfusion.WinForms.Controls.Styles.TitleBarStyleInfo.Font">
            <summary>
            Gets or sets the Font used to display text in the title bar.
            </summary>
            <example>
            <code lang = "C#">
            this.Style.TitleBar.Font = new Font("Segoe UI", 15, FontStyle.Bold);
            </code> 
            </example>
        </member>
        <member name="P:Syncfusion.WinForms.Controls.Styles.TitleBarStyleInfo.HasFont">
            <summary>
            Gets a value indicating whether Font has been initialized for the TitleBar.
            </summary>
        </member>
        <member name="T:Syncfusion.WinForms.Controls.Styles.TitleBarStyleInfoStore">
            <summary>
            Provides storage for the <see cref="T:Syncfusion.WinForms.Controls.Styles.TitleBarStyleInfo"/> object.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Controls.Styles.TitleBarStyleInfoStore.FontProperty">
            <summary>
            Provides information about the <see cref="P:Syncfusion.WinForms.Controls.Styles.TitleBarStyleInfo.Font"/> property.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Controls.Styles.TitleBarStyleInfoStore.CloseButtonForeColorProperty">
            <summary>
            Provides information about the <see cref="P:Syncfusion.WinForms.Controls.Styles.TitleBarStyleInfo.CloseButtonForeColor"/> property.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Controls.Styles.TitleBarStyleInfoStore.HelpButtonForeColorProperty">
            <summary>
            Provides information about the <see cref="P:Syncfusion.WinForms.Controls.Styles.TitleBarStyleInfo.HelpButtonForeColor"/> property.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Controls.Styles.TitleBarStyleInfoStore.MaximizeButtonForeColorProperty">
            <summary>
            Provides information about the <see cref="P:Syncfusion.WinForms.Controls.Styles.TitleBarStyleInfo.MaximizeButtonForeColor"/> property.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Controls.Styles.TitleBarStyleInfoStore.MinimizeButtonForeColorProperty">
            <summary>
            Provides information about the <see cref="P:Syncfusion.WinForms.Controls.Styles.TitleBarStyleInfo.MinimizeButtonForeColor"/> property.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Controls.Styles.TitleBarStyleInfoStore.CloseButtonHoverForeColorProperty">
            <summary>
            Provides information about the <see cref="P:Syncfusion.WinForms.Controls.Styles.TitleBarStyleInfo.CloseButtonHoverForeColor"/> property.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Controls.Styles.TitleBarStyleInfoStore.HelpButtonHoverForeColorProperty">
            <summary>
            Provides information about the <see cref="P:Syncfusion.WinForms.Controls.Styles.TitleBarStyleInfo.HelpButtonHoverForeColor"/> property.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Controls.Styles.TitleBarStyleInfoStore.MaximizeButtonHoverForeColorProperty">
            <summary>
            Provides information about the <see cref="P:Syncfusion.WinForms.Controls.Styles.TitleBarStyleInfo.MaximizeButtonHoverForeColor"/> property.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Controls.Styles.TitleBarStyleInfoStore.MinimizeButtonHoverForeColorProperty">
            <summary>
            Provides information about the <see cref="P:Syncfusion.WinForms.Controls.Styles.TitleBarStyleInfo.MinimizeButtonHoverForeColor"/> property.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Controls.Styles.TitleBarStyleInfoStore.CloseButtonHoverBackColorProperty">
            <summary>
            Provides information about the <see cref="P:Syncfusion.WinForms.Controls.Styles.TitleBarStyleInfo.CloseButtonHoverBackColor"/> property.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Controls.Styles.TitleBarStyleInfoStore.HelpButtonHoverBackColorProperty">
            <summary>
            Provides information about the <see cref="P:Syncfusion.WinForms.Controls.Styles.TitleBarStyleInfo.HelpButtonHoverBackColor"/> property.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Controls.Styles.TitleBarStyleInfoStore.MaximizeButtonHoverBackColorProperty">
            <summary>
            Provides information about the <see cref="P:Syncfusion.WinForms.Controls.Styles.TitleBarStyleInfo.MaximizeButtonHoverBackColor"/> property.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Controls.Styles.TitleBarStyleInfoStore.MinimizeButtonHoverBackColorProperty">
            <summary>
            Provides information about the <see cref="P:Syncfusion.WinForms.Controls.Styles.TitleBarStyleInfo.MinimizeButtonHoverBackColor"/> property.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Controls.Styles.TitleBarStyleInfoStore.CloseButtonPressedForeColorProperty">
            <summary>
            Provides information about the <see cref="P:Syncfusion.WinForms.Controls.Styles.TitleBarStyleInfo.CloseButtonPressedForeColor"/> property.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Controls.Styles.TitleBarStyleInfoStore.MaximizeButtonPressedForeColorProperty">
            <summary>
            Provides information about the <see cref="P:Syncfusion.WinForms.Controls.Styles.TitleBarStyleInfo.MaximizeButtonPressedForeColor"/> property.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Controls.Styles.TitleBarStyleInfoStore.MinimizeButtonPressedForeColorProperty">
            <summary>
            Provides information about the <see cref="P:Syncfusion.WinForms.Controls.Styles.TitleBarStyleInfo.MinimizeButtonPressedForeColor"/> property.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Controls.Styles.TitleBarStyleInfoStore.HelpButtonPressedForeColorProperty">
            <summary>
            Provides information about the <see cref="P:Syncfusion.WinForms.Controls.Styles.TitleBarStyleInfo.HelpButtonPressedForeColor"/> property.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Controls.Styles.TitleBarStyleInfoStore.CloseButtonPressedBackColorProperty">
            <summary>
            Provides information about the <see cref="P:Syncfusion.WinForms.Controls.Styles.TitleBarStyleInfo.CloseButtonPressedBackColor"/> property.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Controls.Styles.TitleBarStyleInfoStore.MaximizeButtonPressedBackColorProperty">
            <summary>
            Provides information about the <see cref="P:Syncfusion.WinForms.Controls.Styles.TitleBarStyleInfo.MaximizeButtonPressedBackColor"/> property.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Controls.Styles.TitleBarStyleInfoStore.MinimizeButtonPressedBackColorProperty">
            <summary>
            Provides information about the <see cref="P:Syncfusion.WinForms.Controls.Styles.TitleBarStyleInfo.MinimizeButtonPressedBackColor"/> property.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Controls.Styles.TitleBarStyleInfoStore.HelpButtonPressedBackColorProperty">
            <summary>
            Provides information about the <see cref="P:Syncfusion.WinForms.Controls.Styles.TitleBarStyleInfo.HelpButtonPressedBackColor"/> property.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Controls.Styles.TitleBarStyleInfoStore.ForeColorProperty">
            <summary>
            Provides information about the <see cref="P:Syncfusion.WinForms.Controls.Styles.TitleBarStyleInfo.ForeColor"/> property.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Controls.Styles.TitleBarStyleInfoStore.BackColorProperty">
            <summary>
            Provides information about the <see cref="P:Syncfusion.WinForms.Controls.Styles.TitleBarStyleInfo.BackColor"/> property.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Controls.Styles.TitleBarStyleInfoStore.HeightProperty">
            <summary>
            Provides information about the <see cref="P:Syncfusion.WinForms.Controls.Styles.TitleBarStyleInfo.Height"/> property.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Controls.Styles.TitleBarStyleInfoStore.IconVerticalAlignmentProperty">
            <summary>
            Provides information about the <see cref="P:Syncfusion.WinForms.Controls.Styles.TitleBarStyleInfo.IconVerticalAlignment"/> property.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Controls.Styles.TitleBarStyleInfoStore.IconHorizontalAlignmentProperty">
            <summary>
            Provides information about the <see cref="P:Syncfusion.WinForms.Controls.Styles.TitleBarStyleInfo.IconHorizontalAlignment"/> property.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Controls.Styles.TitleBarStyleInfoStore.IconBackColorProperty">
            <summary>
            Provides information about the <see cref="P:Syncfusion.WinForms.Controls.Styles.TitleBarStyleInfo.IconBackColor"/> property.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Controls.Styles.TitleBarStyleInfoStore.TextVerticalAlignmentProperty">
            <summary>
            Provides information about the <see cref="P:Syncfusion.WinForms.Controls.Styles.TitleBarStyleInfo.TextVerticalAlignment"/> property.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Controls.Styles.TitleBarStyleInfoStore.TextHorizontalAlignmentProperty">
            <summary>
            Provides information about the <see cref="P:Syncfusion.WinForms.Controls.Styles.TitleBarStyleInfo.TextHorizontalAlignment"/> property.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Controls.Styles.TitleBarStyleInfoStore.AllowRichTextProperty">
            <summary>
            Provides information about the <see cref="P:Syncfusion.WinForms.Controls.Styles.TitleBarStyleInfo.AllowRichText"/> property.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Controls.Styles.TitleBarStyleInfoStore.CloseButtonImageProperty">
            <summary>
            Provides information about the <see cref="P:Syncfusion.WinForms.Controls.Styles.TitleBarStyleInfo.CloseButtonImage"/> property.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Controls.Styles.TitleBarStyleInfoStore.CloseButtonHoverImageProperty">
            <summary>
            Provides information about the <see cref="P:Syncfusion.WinForms.Controls.Styles.TitleBarStyleInfo.CloseButtonHoverImage"/> property.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Controls.Styles.TitleBarStyleInfoStore.CloseButtonPressedImageProperty">
            <summary>
            Provides information about the <see cref="P:Syncfusion.WinForms.Controls.Styles.TitleBarStyleInfo.CloseButtonPressedImage"/> property.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Controls.Styles.TitleBarStyleInfoStore.MaximizeButtonImageProperty">
            <summary>
            Provides information about the <see cref="P:Syncfusion.WinForms.Controls.Styles.TitleBarStyleInfo.MaximizeButtonImage"/> property.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Controls.Styles.TitleBarStyleInfoStore.MaximizeButtonHoverImageProperty">
            <summary>
            Provides information about the <see cref="P:Syncfusion.WinForms.Controls.Styles.TitleBarStyleInfo.MaximizeButtonHoverImage"/> property.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Controls.Styles.TitleBarStyleInfoStore.MaximizeButtonPressedImageProperty">
            <summary>
            Provides information about the <see cref="P:Syncfusion.WinForms.Controls.Styles.TitleBarStyleInfo.MaximizeButtonPressedImage"/> property.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Controls.Styles.TitleBarStyleInfoStore.MinimizeButtonImageProperty">
            <summary>
            Provides information about the <see cref="P:Syncfusion.WinForms.Controls.Styles.TitleBarStyleInfo.MinimizeButtonImage"/> property.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Controls.Styles.TitleBarStyleInfoStore.MinimizeButtonHoverImageProperty">
            <summary>
            Provides information about the <see cref="P:Syncfusion.WinForms.Controls.Styles.TitleBarStyleInfo.MinimizeButtonHoverImage"/> property.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Controls.Styles.TitleBarStyleInfoStore.MinimizeButtonPressedImageProperty">
            <summary>
            Provides information about the <see cref="P:Syncfusion.WinForms.Controls.Styles.TitleBarStyleInfo.MinimizeButtonPressedImage"/> property.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Controls.Styles.TitleBarStyleInfoStore.HelpButtonImageProperty">
            <summary>
            Provides information about the <see cref="P:Syncfusion.WinForms.Controls.Styles.TitleBarStyleInfo.HelpButtonImage"/> property.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Controls.Styles.TitleBarStyleInfoStore.HelpButtonHoverImageProperty">
            <summary>
            Provides information about the <see cref="P:Syncfusion.WinForms.Controls.Styles.TitleBarStyleInfo.HelpButtonHoverImage"/> property.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Controls.Styles.TitleBarStyleInfoStore.HelpButtonPressedImageProperty">
            <summary>
            Provides information about the <see cref="P:Syncfusion.WinForms.Controls.Styles.TitleBarStyleInfo.HelpButtonPressedImage"/> property.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Controls.Styles.TitleBarStyleInfoStore.CaptionImageProperty">
            <summary>
            Provides information about the <see cref="P:Syncfusion.WinForms.Controls.Styles.TitleBarStyleInfo.CaptionImage"/> property.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Controls.Styles.TitleBarStyleInfoStore.CaptionImageLocationProperty">
            <summary>
            Provides information about the <see cref="P:Syncfusion.WinForms.Controls.Styles.TitleBarStyleInfo.CaptionImageLocation"/> property.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Controls.Styles.TitleBarStyleInfoStore.CloseButtonSizeProperty">
            <summary>
            Provides information about the <see cref="P:Syncfusion.WinForms.Controls.Styles.TitleBarStyleInfo.CloseButtonSize"/> property.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Controls.Styles.TitleBarStyleInfoStore.HelpButtonSizeProperty">
            <summary>
            Provides information about the <see cref="P:Syncfusion.WinForms.Controls.Styles.TitleBarStyleInfo.HelpButtonSize"/> property.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Controls.Styles.TitleBarStyleInfoStore.MaximizeButtonSizeProperty">
            <summary>
            Provides information about the <see cref="P:Syncfusion.WinForms.Controls.Styles.TitleBarStyleInfo.MaximizeButtonSize"/> property.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Controls.Styles.TitleBarStyleInfoStore.MinimizeButtonSizeProperty">
            <summary>
            Provides information about the <see cref="P:Syncfusion.WinForms.Controls.Styles.TitleBarStyleInfo.MinimizeButtonSize"/> property.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Controls.Styles.TitleBarStyleInfoStore.PaddingProperty">
            <summary>
            Provides information about the <see cref="P:Syncfusion.WinForms.Controls.Styles.TitleBarStyleInfo.Padding"/> property.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Controls.Styles.TitleBarStyleInfoStore.staticData">
            <summary>
            It contains the value of the <see cref="P:Syncfusion.WinForms.Controls.Styles.TitleBarStyleInfoStore.StaticDataStore"/> property value.
            </summary>
        </member>
        <member name="M:Syncfusion.WinForms.Controls.Styles.TitleBarStyleInfoStore.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.WinForms.Controls.Styles.TitleBarStyleInfoStore"/> class.
            </summary>
        </member>
        <member name="M:Syncfusion.WinForms.Controls.Styles.TitleBarStyleInfoStore.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.WinForms.Controls.Styles.TitleBarStyleInfoStore"/> class from a serialization stream.
            </summary>
            <param name="info">An object that holds all the data needed to serialize or deserialize this instance.</param>
            <param name="context">Describes the source and destination of the serialized stream specified by info. </param>
        </member>
        <member name="M:Syncfusion.WinForms.Controls.Styles.TitleBarStyleInfoStore.GetStaticData">
            <summary>
            Initializes the <see cref="T:Syncfusion.WinForms.Core.Styles.StaticData"/>, if <see cref="F:Syncfusion.WinForms.Controls.Styles.TitleBarStyleInfoStore.staticData"/> is null.
            </summary>
            <returns><see cref="T:Syncfusion.WinForms.Core.Styles.StaticData"/></returns>
        </member>
        <member name="P:Syncfusion.WinForms.Controls.Styles.TitleBarStyleInfoStore.StaticDataStore">
            <summary>
            Gets the static data value of the <see cref="T:Syncfusion.WinForms.Controls.Styles.TitleBarStyleInfoStore"/> class.
            </summary>
        </member>
        <member name="T:Syncfusion.WinForms.Controls.Events.BeginAutoScrollEventHandler">
            <summary>
            Represents the method that will handle the <see cref="!:Syncfusion.WinForms.Core.SfScrollControl.StartAutoScrolling"/> event.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">The <see cref="T:Syncfusion.WinForms.Controls.Events.BeginAutoScrollEventArgs"/> that contains event data.</param>
        </member>
        <member name="T:Syncfusion.WinForms.Controls.Events.ScrollWindowEventHandler">
            <summary>
            Represents the method that will handle the <see cref="E:Syncfusion.WinForms.Controls.SfScrollControl.WindowScrolling"/> and <see cref="!:Syncfusion.WinForms.Core.SfScrollControl.WindowScrolled"/> events.
            </summary>
            <param name="sender">The object of the sender.</param>
            <param name="e">An <see cref="!:Syncfusion.WinForms.Controls.ScrollWindowEventArgs"/> that contains event data.</param>
        </member>
        <member name="T:Syncfusion.WinForms.Controls.Events.ContextMenuShowingEventHandler">
            <summary>
            Represents the method that will handle the <see cref="!:Syncfusion.WinForms.Controls.ScrollBarBase.ContexMnueShowing"/> event.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">The <see cref="T:Syncfusion.WinForms.Controls.Events.ContextMenuShowingEventArgs"/> that contains the event data.</param>
        </member>
        <member name="T:Syncfusion.WinForms.Controls.Events.ReaderModeScrollControllerEventHandler">
            <summary>
            Handles the DragScroll event of an IntelliMouseDragScroll object.
            </summary>
            <param name="sender">The object of the sender.</param>
            <param name="e">The <see cref="T:Syncfusion.WinForms.Controls.Events.ReaderModeScrollControllerEventArgs"/> class.</param>
        </member>
        <member name="T:Syncfusion.WinForms.Controls.Events.BeginAutoScrollEventArgs">
            <summary>
            Provides data for the <see cref="!:Syncfusion.WinForms.Controls.SfScrollControl.StartAutoScrolling"/> event.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Controls.Events.BeginAutoScrollEventArgs.reason">
            <summary>
            Specifies the reason for the auto scrolling.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Controls.Events.BeginAutoScrollEventArgs.direction">
            <summary>
            Specifies the direction of the auto scrolling.
            </summary>
        </member>
        <member name="M:Syncfusion.WinForms.Controls.Events.BeginAutoScrollEventArgs.#ctor(Syncfusion.WinForms.Controls.Enums.AutoScrollReason,Syncfusion.WinForms.Controls.Enums.AutoScrollOrientation)">
            <summary>Initializes a new instance of the <see cref="T:Syncfusion.WinForms.Controls.Events.BeginAutoScrollEventArgs"/> class.</summary>
            <param name="reason">The reason for scrolling.</param>
            <param name="direction">The direction of the auto scrolling.</param>
        </member>
        <member name="P:Syncfusion.WinForms.Controls.Events.BeginAutoScrollEventArgs.Reason">
            <summary>
            Gets the reason for performing the auto scrolling, either scrollbar acceleration or mouse dragging outside window bounds.
            </summary>		
        </member>
        <member name="P:Syncfusion.WinForms.Controls.Events.BeginAutoScrollEventArgs.Direction">
            <summary>
            Gets the scrollbars that need to be perform the auto scroll.
            </summary>		
        </member>
        <member name="T:Syncfusion.WinForms.Controls.Events.ScrollWindowEventArgs">
            <summary>
            Provides the data for the <see cref="!:Syncfusion.WinForms.Core.SfScrollControl.WindowScrolling"/> and <see cref="!:Syncfusion.WinForms.Core.SfScrollControl.WindowScrolled"/> events.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Controls.Events.ScrollWindowEventArgs.xAmount">
            <summary>
            The horizontal scroll amount.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Controls.Events.ScrollWindowEventArgs.yAmount">
            <summary>
            The vertical scroll amount.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Controls.Events.ScrollWindowEventArgs.rect">
            <summary>
            Holds the rectangle that need to be scrolled.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Controls.Events.ScrollWindowEventArgs.clipRect">
            <summary>
            Holds the rectangle that need to be clipped while scrolling.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Controls.Events.ScrollWindowEventArgs.updateRect">
            <summary>
            Specifies the updated rectangle after the scrolling.
            </summary>
        </member>
        <member name="M:Syncfusion.WinForms.Controls.Events.ScrollWindowEventArgs.#ctor(System.Int32,System.Int32,System.Drawing.Rectangle,System.Drawing.Rectangle,System.Drawing.Rectangle)">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.WinForms.Controls.Events.ScrollWindowEventArgs"/> class.
            </summary>
            <param name="xAmount">The horizontal scroll distance in pixel.</param>
            <param name="yAmount">The vertical scroll distance in pixel.</param>
            <param name="rect">The bounds of the rectangle that is scrolled.</param>
            <param name="clipRect">Clipping rectangle.</param>
            <param name="updateRect">The rectangle that was scrolled into view.</param>
        </member>
        <member name="P:Syncfusion.WinForms.Controls.Events.ScrollWindowEventArgs.XAmount">
            <summary>
            Gets the horizontal scroll distance in pixels.
            </summary>		
        </member>
        <member name="P:Syncfusion.WinForms.Controls.Events.ScrollWindowEventArgs.YAmount">
            <summary>
            Gets the vertical scroll distance in pixels.
            </summary>		
        </member>
        <member name="P:Syncfusion.WinForms.Controls.Events.ScrollWindowEventArgs.Rect">
            <summary>
            Gets the bounds of the rectangle that is scrolled.
            </summary>		
        </member>
        <member name="P:Syncfusion.WinForms.Controls.Events.ScrollWindowEventArgs.ClipRect">
            <summary>
            Gets the clipped rectangle.
            </summary>		
        </member>
        <member name="P:Syncfusion.WinForms.Controls.Events.ScrollWindowEventArgs.UpdateRect">
            <summary>
            Gets the rectangle that need to be updated.        
            </summary>		
        </member>
        <member name="T:Syncfusion.WinForms.Controls.Events.ContextMenuShowingEventArgs">
            <summary>
            Provides data about the cancel-able <see cref="!:Syncfusion.WinForms.Controls.ScrollBarBase.ContexMenuShowing"/> event.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Controls.Events.ContextMenuShowingEventArgs.point">
            <summary>
            Specifies the point that needs to be show the context menu.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Controls.Events.ContextMenuShowingEventArgs.contextMenu">
            <summary>
            The context menu.
            </summary>
        </member>
        <member name="M:Syncfusion.WinForms.Controls.Events.ContextMenuShowingEventArgs.#ctor(System.Drawing.Point,System.Windows.Forms.ContextMenu)">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.WinForms.Controls.Events.ContextMenuShowingEventArgs"/> class.
            </summary>
            <param name="point">The mouse location in screen coordinates.</param>
            <param name="contextMenu">The context menu that needs to be show on the given point.</param>
        </member>
        <member name="P:Syncfusion.WinForms.Controls.Events.ContextMenuShowingEventArgs.Point">
            <summary>
            Gets the screen coordinates of the mouse cursor.
            </summary>		
        </member>
        <member name="P:Syncfusion.WinForms.Controls.Events.ContextMenuShowingEventArgs.ContextMenu">
            <summary>
            Gets or sets the context menu that need to be displayed.
            </summary>
        </member>
        <member name="T:Syncfusion.WinForms.Controls.Events.ReaderModeScrollControllerEventArgs">
            <summary>
            Provides data for the DragScroll event of an IntelliMouseDragScroll object.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Controls.Events.ReaderModeScrollControllerEventArgs.dx">
            <summary>
            The value of the horizontal co-ordinate.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Controls.Events.ReaderModeScrollControllerEventArgs.dy">
            <summary>
            The value of the vertical co-ordinate.
            </summary>
        </member>
        <member name="M:Syncfusion.WinForms.Controls.Events.ReaderModeScrollControllerEventArgs.#ctor(System.Int32,System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.WinForms.Controls.Events.ReaderModeScrollControllerEventArgs"/> class.
            </summary>
            <param name="dx">The distance in pixels the mouse pointer has been moved horizontally.</param>
            <param name="dy">The distance in pixels the mouse pointer has been moved vertically.</param>
        </member>
        <member name="P:Syncfusion.WinForms.Controls.Events.ReaderModeScrollControllerEventArgs.DX">
            <summary>
            Gets or sets the distance in pixels the mouse pointer has been moved horizontally.
            </summary>
        </member>
        <member name="P:Syncfusion.WinForms.Controls.Events.ReaderModeScrollControllerEventArgs.DY">
            <summary>
            Gets or sets the distance in pixels the mouse pointer has been moved vertically.
            </summary>
        </member>
        <member name="T:Syncfusion.WinForms.Controls.IDragDispatcher">
            <summary>
            Interface for implementing by parent control for supporting Drag operation.
            Methods of this interface invoke corresponding drag methods of parent control.
            </summary>
        </member>
        <member name="M:Syncfusion.WinForms.Controls.IDragDispatcher.DispatchDragOver(System.Windows.Forms.DragEventArgs)">
            <summary>
            Dispatch the message for DragOver.
            </summary>
            <param name="drgevent">The <see cref="T:System.Windows.Forms.DragEventArgs"/> that contains event data.</param>
        </member>
        <member name="M:Syncfusion.WinForms.Controls.IDragDispatcher.DispatchOnDragDrop(System.Windows.Forms.DragEventArgs)">
            <summary>
            Dispatches the message for DragDrop.
            </summary>
            <param name="drgevent">The <see cref="T:System.Windows.Forms.DragEventArgs"/> that contains event data.</param>
        </member>
        <member name="M:Syncfusion.WinForms.Controls.IDragDispatcher.DispatchOnDragEnter(System.Windows.Forms.DragEventArgs)">
            <summary>
            Dispatches the message for DragEnter.
            </summary>
            <param name="drgevent">The <see cref="T:System.Windows.Forms.DragEventArgs"/> that contains event data.</param>
        </member>
        <member name="M:Syncfusion.WinForms.Controls.IDragDispatcher.DispatchOnDragLeave(System.EventArgs)">
            <summary>
            Dispatches the message for DragLeave.
            </summary>
            <param name="e">An <see cref="T:System.EventArgs"/> that contains event data.</param>
        </member>
        <member name="M:Syncfusion.WinForms.Controls.IDragDispatcher.DispatchOnQueryContinueDrag(System.Windows.Forms.QueryContinueDragEventArgs)">
            <summary>
            Dispatches the message for QueryContinueDrag.
            </summary>
            <param name="args">The <see cref="T:System.Windows.Forms.QueryContinueDragEventArgs"/> that contains event data.</param>
        </member>
        <member name="M:Syncfusion.WinForms.Controls.IDragDispatcher.DispatchOnGiveFeedback(System.Windows.Forms.GiveFeedbackEventArgs)">
            <summary>
            Dispatches the message for GiveFeedback.
            </summary>
            <param name="args">The <see cref="T:System.Windows.Forms.GiveFeedbackEventArgs"/> that contains event data.</param>
        </member>
        <member name="M:Syncfusion.WinForms.Controls.IDragDispatcher.DispatchDoDragDrop(System.Object,System.Windows.Forms.DragDropEffects)">
            <summary>
            Provides the drag drop effects.
            </summary>
            <param name="data">The data that need to be dragged.</param>
            <param name="allowedEffects">The drag drop effects.</param>
            <returns>Returns the DragDropEffects.</returns>
        </member>
        <member name="T:Syncfusion.WinForms.Controls.DragHelper">
            <summary>
            Represents the class that used to show the bitmap while dragging the cursor.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Controls.DragHelper.dragBitmap">
            <summary>
            Holds the bitmap that needs to be dragged.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Controls.DragHelper.isDragging">
            <summary>
            Specifies whether the dragging is in process or not.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Controls.DragHelper.origin">
            <summary>
            Specifies the origin of the bitmap.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Controls.DragHelper.overrideCursor">
            <summary>
            Holds the cursor that needs to be set for the control.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Controls.DragHelper.parent">
            <summary>
            Specifies the methods for implementing by parent control for supporting Drag operation.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Controls.DragHelper.shiftCalculated">
            <summary>
            Specifies whether the shift is calculated or not.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Controls.DragHelper.keepOrigin">
            <summary>
            The point that needs to be tracked for the dragging.
            </summary>
        </member>
        <member name="M:Syncfusion.WinForms.Controls.DragHelper.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.WinForms.Controls.DragHelper"/> class.
            </summary>
        </member>
        <member name="M:Syncfusion.WinForms.Controls.DragHelper.ShowWindowTopMost">
            <summary>
            Displays the drag window as the topmost window.
            </summary>
        </member>
        <member name="M:Syncfusion.WinForms.Controls.DragHelper.OnSetCursor(System.Windows.Forms.Message@)">
            <summary>
            Sets the current display cursor.
            </summary>
            <param name="m">The windows process message.</param>
        </member>
        <member name="M:Syncfusion.WinForms.Controls.DragHelper.StartDrag(System.Drawing.Point)">
            <summary>
            Starts the Dragging of window.
            </summary>
            <param name="p">The mouse point.</param>
            <returns>Return false, when the background image is null otherwise return true.</returns>
        </member>
        <member name="M:Syncfusion.WinForms.Controls.DragHelper.StopDrag">
            <summary>
            Stops the dragging of window.
            </summary>
            <returns>If the window is in dragging it will return true, otherwise return false.</returns>
        </member>
        <member name="M:Syncfusion.WinForms.Controls.DragHelper.WndProc(System.Windows.Forms.Message@)">
            <summary>
            Overrides the WndProc method for setting the drag cursor.
            </summary>
            <param name="msg">The windows message.</param>        
        </member>
        <member name="M:Syncfusion.WinForms.Controls.DragHelper.OnPaintBackground(System.Windows.Forms.PaintEventArgs)">
            <summary>
            Changes the windows background as the transparent.
            </summary>
            <param name="e">The <see cref="T:System.Drawing.PaintEventArgs"/> that contains event data.</param>
        </member>
        <member name="M:Syncfusion.WinForms.Controls.DragHelper.OnDragOver(System.Windows.Forms.DragEventArgs)">
            <summary>
            Occurs while dragging is done over the window.
            </summary>
            <param name="e">The <see cref="T:System.Window.Forms.DragEventArgs"/> that contains event data.</param>
        </member>
        <member name="M:Syncfusion.WinForms.Controls.DragHelper.OnDragDrop(System.Windows.Forms.DragEventArgs)">
            <summary>
            Occurs while dropping the window.
            </summary>
            <param name="e">The <see cref="T:System.Window.Forms.DragEventArgs"/> that contains event data.</param>
        </member>
        <member name="M:Syncfusion.WinForms.Controls.DragHelper.OnDragEnter(System.Windows.Forms.DragEventArgs)">
            <summary>
            Occurs while entering the drag window.
            </summary>
            <param name="drgevent">An <see cref="T:System.Window.Forms.DragEventArgs"/> that contains event data.</param>
        </member>
        <member name="M:Syncfusion.WinForms.Controls.DragHelper.OnDragLeave(System.EventArgs)">
            <summary>
            Occurs while mouse leaves the drag window.
            </summary>
            <param name="e">An <see cref="T:System.EventArgs"/> that contains event data.</param>
        </member>
        <member name="M:Syncfusion.WinForms.Controls.DragHelper.OnQueryContinueDrag(System.Windows.Forms.QueryContinueDragEventArgs)">
            <summary>
            Occurs while continue the dragging.
            </summary>
            <param name="qcdevent">The <see cref="T:System.Windows.Forms.QueryContinueDragEventArgs"/> that contains event data.</param>
        </member>
        <member name="M:Syncfusion.WinForms.Controls.DragHelper.OnGiveFeedback(System.Windows.Forms.GiveFeedbackEventArgs)">
            <summary>
            Occurs while showing the feed back about the dragging.
            </summary>
            <param name="gfbevent">The <see cref="T:System.Windows.Forms.GiveFeedbackEventArgs"/> that contains event data.</param>
        </member>
        <member name="M:Syncfusion.WinForms.Controls.DragHelper.InitializeComponent">
            <summary>
            Initialize the components of the <see cref="T:Syncfusion.WinForms.Controls.DragHelper"/>.
            </summary>
        </member>
        <member name="M:Syncfusion.WinForms.Controls.DragHelper.WmSetCursor(System.Windows.Forms.Message@)">
            <summary>
            Handles the Window message for SETCURSOR.
            </summary>
            <param name="m">The window message.</param>
        </member>
        <member name="M:Syncfusion.WinForms.Controls.DragHelper.MoveWindow(System.Drawing.Point)">
            <summary>
            Moves the cursor to the specific point.
            </summary>
            <param name="p">The point to move the cursor.</param>
        </member>
        <member name="P:Syncfusion.WinForms.Controls.DragHelper.DragBitmap">
            <summary>
            Gets or sets the bitmap image for the DragDrop.
            </summary>
        </member>
        <member name="P:Syncfusion.WinForms.Controls.DragHelper.WindowCursor">
            <summary>
            Gets or sets the window cursor.
            </summary>
        </member>
        <member name="P:Syncfusion.WinForms.Controls.DragHelper.DragParent">
            <summary>
            Gets or sets the parent control supporting drag operation.
            </summary>
        </member>
        <member name="P:Syncfusion.WinForms.Controls.DragHelper.CreateParams">
            <summary>
            Overrides the CreateParams. 
            </summary>
        </member>
        <member name="T:Syncfusion.WinForms.Controls.ReaderModeScrollController">
            <summary>
            Implements support for reader mode scrolling. When the user presses the middle mouse button and drags the mouse,
            the window will scroll. <see cref="T:Syncfusion.WinForms.Controls.SfScrollControl"/> has built-in support for this call. 
            </summary>
        </member>
        <member name="T:Syncfusion.WinForms.Core.Utils.NonFinalizeDisposable">
            <summary>
            Provides the base class for Disposable object. 
            </summary>
            <exclude/>
        </member>
        <member name="M:Syncfusion.WinForms.Core.Utils.NonFinalizeDisposable.Dispose">
            <summary>
            Releases all resources used by the Component.
            </summary>
        </member>
        <member name="M:Syncfusion.WinForms.Core.Utils.NonFinalizeDisposable.Dispose(System.Boolean)">
            <summary>
            Releases the unmanaged resources used by the Component and optionally releases the managed resources.
            </summary>
            <param name="disposing"><see langword="true"/> to release both managed and unmanaged resources; <see langword="false"/> to release only unmanaged resources.</param>
            <remarks>See the documentation for the <see cref="T:System.ComponentModel.Component"/> class and its Dispose member.</remarks>
        </member>
        <member name="F:Syncfusion.WinForms.Controls.ReaderModeScrollController.ManifestPrefix">
            <summary>
            Specifies the manifest for retrieving the resources.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Controls.ReaderModeScrollController.ClickHoldTicks">
            <summary>
            Specifies the default click hold ticks for scrolling.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Controls.ReaderModeScrollController.dragWindow">
            <summary>
            The drag window that used to show the bitmap for the reader mode scrolling.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Controls.ReaderModeScrollController.activeImm">
            <summary>
            The reader mode scroll controller.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Controls.ReaderModeScrollController.startStopSemaphor">
            <summary>
            The semaphore for the dragging.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Controls.ReaderModeScrollController.parent">
            <summary>
            The parent control of the controller.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Controls.ReaderModeScrollController.bitmapRect">
            <summary>
            Specifies the rectangle region of the bitmap.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Controls.ReaderModeScrollController.startPoint">
            <summary>
            The start point of the scrolling.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Controls.ReaderModeScrollController.downMouseTick">
            <summary>
            Specifies the timer count for the mouse down.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Controls.ReaderModeScrollController.timerCount">
            <summary>
            The timer count of the reader mode scrolling.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Controls.ReaderModeScrollController.vertical">
            <summary>
            Specifies whether to perform the vertical scrolling or not.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Controls.ReaderModeScrollController.horizontal">
            <summary>
            Specifies whether the perform the horizontal scrolling or not.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Controls.ReaderModeScrollController.clickHold">
            <summary>
            Specifies whether the mouse click is remain hold or not.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Controls.ReaderModeScrollController.enabled">
            <summary>
            Specifies whether the  Reader mode scrolling is enabled or not.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Controls.ReaderModeScrollController.wireMouseDownMessage">
            <summary>
            Specifies whether the dragging is started by using the parent controls mouse down or not.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Controls.ReaderModeScrollController.repeatScrollEventTimer">
            <summary>
            The timer for the reader mode scrolling.
            </summary>
        </member>
        <member name="M:Syncfusion.WinForms.Controls.ReaderModeScrollController.#ctor(System.Windows.Forms.Control)">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.WinForms.Controls.ReaderModeScrollController"/> class.
            </summary>
            <param name="control">The control to add this functionality to.</param>
        </member>
        <member name="M:Syncfusion.WinForms.Controls.ReaderModeScrollController.#ctor(System.Windows.Forms.Control,System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.WinForms.Controls.ReaderModeScrollController"/> class.
            </summary>
            <param name="control">The control to add this functionality to.</param>
            <param name="wireMouseDown">True if <see cref="T:Syncfusion.WinForms.Controls.ReaderModeScrollController"/> should listen for MouseDown event; 
            False if dragging should be started manually by calling StartDrag.</param>
        </member>
        <member name="M:Syncfusion.WinForms.Controls.ReaderModeScrollController.GetBitmap(System.String)">
            <summary>
            Returns the bitmap from manifest. 
            </summary>
            <param name="bitmapName">The bitmap image name.</param>
            <returns>Returns the bitmap.</returns>
        </member>
        <member name="M:Syncfusion.WinForms.Controls.ReaderModeScrollController.StartDrag(System.Drawing.Point)">
            <summary>
            Starts the IntelliSence mouse dragging at the given screen coordinates.
            </summary>
            <param name="startPoint">The screen coordinates.</param>
        </member>
        <member name="M:Syncfusion.WinForms.Controls.ReaderModeScrollController.StopDrag">
            <summary>
            Stops the IntelliSence-Mouse dragging.
            </summary>
        </member>
        <member name="M:Syncfusion.WinForms.Controls.ReaderModeScrollController.Dispose(System.Boolean)">
            <summary>
            Disposes the unused resources.
            </summary>
            <param name="dispose">Specifies whether to dispose both managed and unmanaged resources or only the unmanaged resources.</param>
        </member>
        <member name="M:Syncfusion.WinForms.Controls.ReaderModeScrollController.WireControl">
            <summary>
            Wire the mouse events for the control.
            </summary>
        </member>
        <member name="M:Syncfusion.WinForms.Controls.ReaderModeScrollController.UnwireControl">
            <summary>
            Unwire the mouse events.
            </summary>
        </member>
        <member name="M:Syncfusion.WinForms.Controls.ReaderModeScrollController.ControlMouseDown(System.Object,System.Windows.Forms.MouseEventArgs)">
            <summary>
            Occurs when mouse down is performed on the control.
            </summary>
            <param name="sender">The object of the sender.</param>
            <param name="e">The <see cref="T:System.Windows.Forms.MouseEventArgs"/>  that contains event data.</param>
        </member>
        <member name="M:Syncfusion.WinForms.Controls.ReaderModeScrollController.ControlMouseUp(System.Object,System.Windows.Forms.MouseEventArgs)">
            <summary>
            Occurs when mouse up is performed over the control.
            </summary>
            <param name="sender">The object of the sender.</param>
            <param name="e">The <see cref="T:System.Windows.Forms.MouseEventArgs"/> that contains event data.</param>
        </member>
        <member name="M:Syncfusion.WinForms.Controls.ReaderModeScrollController.ControlClick(System.Object,System.EventArgs)">
            <summary>
            Occurs when the mouse click is performed.
            </summary>
            <param name="sender">The object of the sender.</param>
            <param name="e">An <see cref="T:System.EventArgs"/> that contains event data.</param>
        </member>
        <member name="M:Syncfusion.WinForms.Controls.ReaderModeScrollController.SetCursor(System.Windows.Forms.Control,System.Windows.Forms.Cursor)">
            <summary>
            Sets the cursor for the given control.
            </summary>
            <param name="control">The control that need to be override the given cursor.</param>
            <param name="cursor">The cursor that need to be set for the control.</param>
        </member>
        <member name="M:Syncfusion.WinForms.Controls.ReaderModeScrollController.CheckAction">
            <summary>
            Checks the Action of the mouse controller.
            </summary>
        </member>
        <member name="M:Syncfusion.WinForms.Controls.ReaderModeScrollController.RaiseIntelliSenseMouseDragScroll(System.Int32@,System.Int32@)">
            <summary>
            Raise the <see cref="E:Syncfusion.WinForms.Controls.ReaderModeScrollController.DragScroll"/> event.
            </summary>
            <param name="dx">The x location of the mouse.</param>
            <param name="dy">the y location of the mouse.</param>
            <returns>Returns false when the ea.Cancel is set to true other wise return true.</returns>
        </member>
        <member name="M:Syncfusion.WinForms.Controls.ReaderModeScrollController.StartTimer">
            <summary>
            Start the timer.
            </summary>
        </member>
        <member name="M:Syncfusion.WinForms.Controls.ReaderModeScrollController.SlowTimer">
            <summary>
            Slows the timer.
            </summary>
        </member>
        <member name="M:Syncfusion.WinForms.Controls.ReaderModeScrollController.StopTimer">
            <summary>
            Stops the timer.
            </summary>
        </member>
        <member name="M:Syncfusion.WinForms.Controls.ReaderModeScrollController.OnTimerElapsed(System.Object,System.EventArgs)">
            <summary>
            Occurs while the timer is elapsed.
            </summary>
            <param name="source">The object of the sender.</param>
            <param name="e">An <see cref="T:System.EventArgs"/> that contains event data.</param>
        </member>
        <member name="E:Syncfusion.WinForms.Controls.ReaderModeScrollController.DragScroll">
            <summary>
            Occurs when the user has dragged the mouse outside the scrolling bitmap.
            </summary>
        </member>
        <member name="P:Syncfusion.WinForms.Controls.ReaderModeScrollController.DragWindow">
            <summary>
            Gets the DragWindow.
            </summary>
        </member>
        <member name="P:Syncfusion.WinForms.Controls.ReaderModeScrollController.ActiveReaderModeScrollController">
            <summary>
            Gets the active <see cref="T:Syncfusion.WinForms.Controls.ReaderModeScrollController"/> object.
            </summary>
        </member>
        <member name="P:Syncfusion.WinForms.Controls.ReaderModeScrollController.AllowScrolling">
            <summary>
            Gets or sets the scrolling direction.
            </summary>
        </member>
        <member name="P:Syncfusion.WinForms.Controls.ReaderModeScrollController.IsDragging">
            <summary>
            Gets a value indicating whether the user is dragging.
            </summary>
        </member>
        <member name="P:Syncfusion.WinForms.Controls.ReaderModeScrollController.Cursor">
            <summary>
            Gets the cursor to be displayed.
            </summary>
        </member>
        <member name="P:Syncfusion.WinForms.Controls.ReaderModeScrollController.Enabled">
            <summary>
            Gets or sets a value indicating whether the Reader mode scrolling feature is enabled or not.
            </summary>
        </member>
        <member name="T:Syncfusion.WinForms.Controls.Accessibility.ScrollBarAccessibilityObject">
            <summary>
            Represents the class that provides the accessibility object for the SfScrollBar.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Controls.Accessibility.ScrollBarAccessibilityObject.scrollBar">
            <summary>
            Specifies the scrollbar.
            </summary>
        </member>
        <member name="M:Syncfusion.WinForms.Controls.Accessibility.ScrollBarAccessibilityObject.#ctor(Syncfusion.WinForms.Controls.ScrollBarBase)">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.WinForms.Controls.Accessibility.ScrollBarAccessibilityObject"/> class.
            </summary>
            <param name="scrollBar">The ScrollBarBase.</param>
        </member>
        <member name="M:Syncfusion.WinForms.Controls.Accessibility.ScrollBarAccessibilityObject.GetChildCount">
            <summary>
            Overridden to get the child count of the scrollbar.
            </summary>
            <returns>Returns the child count of the scrollbar.</returns>
        </member>
        <member name="M:Syncfusion.WinForms.Controls.Accessibility.ScrollBarAccessibilityObject.GetChild(System.Int32)">
            <summary>
            Overridden to get the child at the given index.
            </summary>
            <param name="index">The index of the child.</param>
            <returns>Returns the accessibility object of the child.</returns>
        </member>
        <member name="M:Syncfusion.WinForms.Controls.Accessibility.ScrollBarAccessibilityObject.GetScrollBarAccessibilityObject(System.Int32)">
            <summary>
            Gets the accessibility object for the given index.
            </summary>
            <param name="index">The index of the child control.</param>
            <returns>Returns the accessibility object of the child control.</returns>
        </member>
        <member name="P:Syncfusion.WinForms.Controls.Accessibility.ScrollBarAccessibilityObject.Role">
            <summary>
            Gets the AccessibleRole of the <see cref="T:Syncfusion.WinForms.Controls.ScrollBarBase"/> control.
            </summary>
        </member>
        <member name="P:Syncfusion.WinForms.Controls.Accessibility.ScrollBarAccessibilityObject.Name">
            <summary>
            Gets the AccessibleName of the <see cref="T:Syncfusion.WinForms.Controls.ScrollBarBase"/> control.
            </summary>
        </member>
        <member name="P:Syncfusion.WinForms.Controls.Accessibility.ScrollBarAccessibilityObject.Parent">
            <summary>
            Gets the accessibility object of the <see cref="T:Syncfusion.WinForms.Controls.ScrollBarBase"/> parent.
            </summary>
        </member>
        <member name="P:Syncfusion.WinForms.Controls.Accessibility.ScrollBarAccessibilityObject.Description">
            <summary>
            Gets the AccessibleDescription of the <see cref="T:Syncfusion.WinForms.Controls.ScrollBarBase"/> control.
            </summary>
        </member>
        <member name="P:Syncfusion.WinForms.Controls.Accessibility.ScrollBarAccessibilityObject.Bounds">
            <summary>
            Gets the bounds of the <see cref="T:Syncfusion.WinForms.Controls.ScrollBarBase"/> control.
            </summary>
        </member>
        <member name="T:Syncfusion.WinForms.Controls.Accessibility.ScrollBarAccessibileObject">
            <summary>
            Represents the class that provides the accessibility object of the Scrollbar components.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Controls.Accessibility.ScrollBarAccessibileObject.scrollbar">
            <summary>
            Specifies the parent control of the accessibility object.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Controls.Accessibility.ScrollBarAccessibileObject.region">
            <summary>
            Specifies the region of the scrollbar component.
            </summary>
        </member>
        <member name="M:Syncfusion.WinForms.Controls.Accessibility.ScrollBarAccessibileObject.#ctor(Syncfusion.WinForms.Controls.ScrollBarBase,System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.WinForms.Controls.Accessibility.ScrollBarAccessibileObject"/> class.
            </summary>
            <param name="scrollbar">The parent control.</param>
            <param name="region">The region of the scrollbar component.</param>
        </member>
        <member name="P:Syncfusion.WinForms.Controls.Accessibility.ScrollBarAccessibileObject.Name">
            <summary>
            Gets the AccessibleName of the Scrollbar component.
            </summary>
        </member>
        <member name="P:Syncfusion.WinForms.Controls.Accessibility.ScrollBarAccessibileObject.Role">
            <summary>
            Gets the AccessibleRole of the <see cref="T:Syncfusion.WinForms.Controls.ScrollBarBase"/> component.
            </summary>
        </member>
        <member name="P:Syncfusion.WinForms.Controls.Accessibility.ScrollBarAccessibileObject.Bounds">
            <summary>
            Gets the bounds of the scrollbar component.
            </summary>
        </member>
        <member name="P:Syncfusion.WinForms.Controls.Accessibility.ScrollBarAccessibileObject.Parent">
            <summary>
            Gets the accessibility object of the parent control.
            </summary>
        </member>
        <member name="T:Syncfusion.WinForms.Controls.Accessibility.ScrollControlAccessibilityObject">
            <summary>
            Represents a class that provides the accessibility object for the SfScrollControl.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Controls.Accessibility.ScrollControlAccessibilityObject.sfScrollControl">
            <summary>
            Specifies the SfScrollControl.
            </summary>
        </member>
        <member name="M:Syncfusion.WinForms.Controls.Accessibility.ScrollControlAccessibilityObject.#ctor(Syncfusion.WinForms.Controls.SfScrollControl)">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.WinForms.Controls.Accessibility.ScrollControlAccessibilityObject"/> class.
            </summary>
            <param name="sfScrollControl">The SfScrollControl.</param>
        </member>
        <member name="M:Syncfusion.WinForms.Controls.Accessibility.ScrollControlAccessibilityObject.GetChildCount">
            <summary>
            Overridden to get the child count of the SfScrollFrame.
            </summary>
            <returns>Returns the child count of the scrollbar.</returns>
        </member>
        <member name="M:Syncfusion.WinForms.Controls.Accessibility.ScrollControlAccessibilityObject.GetChild(System.Int32)">
            <summary>
            Overridden to get the child at the given index.
            </summary>
            <param name="index">The index of the child.</param>
            <returns>Returns the accessibility object of the child.</returns>
        </member>
        <member name="P:Syncfusion.WinForms.Controls.Accessibility.ScrollControlAccessibilityObject.Role">
            <summary>
            Gets the AccessibleRole of the <see cref="T:Syncfusion.WinForms.Controls.SfScrollControl"/> control.
            </summary>
        </member>
        <member name="P:Syncfusion.WinForms.Controls.Accessibility.ScrollControlAccessibilityObject.Name">
            <summary>
            Gets the AccessibleName of the <see cref="T:Syncfusion.WinForms.Controls.SfScrollControl"/> control.
            </summary>
        </member>
        <member name="P:Syncfusion.WinForms.Controls.Accessibility.ScrollControlAccessibilityObject.Parent">
            <summary>
            Gets the accessibility object of the <see cref="T:Syncfusion.WinForms.Controls.SfScrollControl"/> parent.
            </summary>
        </member>
        <member name="P:Syncfusion.WinForms.Controls.Accessibility.ScrollControlAccessibilityObject.Description">
            <summary>
            Gets the AccessibleDescription of the <see cref="T:Syncfusion.WinForms.Controls.SfScrollControl"/> control.
            </summary>
        </member>
        <member name="P:Syncfusion.WinForms.Controls.Accessibility.ScrollControlAccessibilityObject.Bounds">
            <summary>
            Gets the bounds of the <see cref="T:Syncfusion.WinForms.Controls.SfScrollControl"/> control.
            </summary>
        </member>
        <member name="T:Syncfusion.WinForms.Controls.ScrollCursors">
            <summary>
            Provides the cursors for the intelliSence mouse drag scrolling.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Controls.ScrollCursors.assemblyNameSpace">
            <summary>
            Specifies the assembly name space for retrieving the values from the resource.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Controls.ScrollCursors.dragWheelAllCursor">
            <summary>
            Holds the cursor that used indicate the dragging in all direction.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Controls.ScrollCursors.dragWheelSouthCursor">
            <summary>
            Holds the cursor that used indicate the dragging in south direction.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Controls.ScrollCursors.dragWheelNorthCursor">
            <summary>
            Holds the cursor that used indicate the dragging in north direction.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Controls.ScrollCursors.dragWheelWestCursor">
            <summary>
            Holds the cursor that used indicate the dragging in west direction.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Controls.ScrollCursors.dragWheelEastCursor">
            <summary>
            Holds the cursor that used indicate the dragging in east direction.
            </summary>
        </member>
        <member name="M:Syncfusion.WinForms.Controls.ScrollCursors.GetCursor(System.String)">
            <summary>
            Gets the scroll cursor.
            </summary>
            <param name="cursorName">The name of the cursor.</param>
            <returns>Returns the cursor.</returns>
        </member>
        <member name="P:Syncfusion.WinForms.Controls.ScrollCursors.DragWheelAllCursor">
            <summary>
            Gets the cursor for mouse wheel at all direction.
            </summary>
        </member>
        <member name="P:Syncfusion.WinForms.Controls.ScrollCursors.DragWheelSouthCursor">
            <summary>
            Gets the cursor for drag wheel at south direction.
            </summary>
        </member>
        <member name="P:Syncfusion.WinForms.Controls.ScrollCursors.DragWheelNorthCursor">
            <summary>
            Gets the cursor for drag wheel at North direction.
            </summary>
        </member>
        <member name="P:Syncfusion.WinForms.Controls.ScrollCursors.DragWheelWestCursor">
            <summary>
            Gets the cursor for drag wheel at west direction.
            </summary>
        </member>
        <member name="P:Syncfusion.WinForms.Controls.ScrollCursors.DragWheelEastCursor">
            <summary>
            Gets the cursor for drag wheel at east direction.
            </summary>
        </member>
        <member name="T:Syncfusion.WinForms.Controls.HorizontalScrollBar">
            <summary>
            Represents a class that is used to draw the horizontal scrollbar of the scroll control.
            </summary>
        </member>
        <member name="T:Syncfusion.WinForms.Controls.ScrollBarBase">
            <summary>
            Represents a base class that is used to draw the Horizontal and Vertical scrollbars of the <see cref="T:Syncfusion.WinForms.Controls.SfScrollControl"/>.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Controls.ScrollBarBase.timerDelegate">
            <summary>
            The timer delegate.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Controls.ScrollBarBase.largeChange">
            <summary>
            The large change of the scrollbar.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Controls.ScrollBarBase.previousLargeChange">
            <summary>
            Holds the previous large change value.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Controls.ScrollBarBase.maximum">
            <summary>
            The maximum value of the scrollbar.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Controls.ScrollBarBase.minimum">
            <summary>
            The minimum value of the scrollbar.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Controls.ScrollBarBase.smallChange">
            <summary>
            The small change of the scrollbar.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Controls.ScrollBarBase.scrollBarValue">
            <summary>
            The value of the scrollbar.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Controls.ScrollBarBase.scrollBarRects">
            <summary>
            Holds the rectangle regions for the scrollbar elements.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Controls.ScrollBarBase.enableThumb">
            <summary>
            Specifies whether the thumb is enabled or not.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Controls.ScrollBarBase.enableMinimumArrow">
            <summary>
            Specifies whether the minimum arrow is enabled or not.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Controls.ScrollBarBase.enableMaximumArrow">
            <summary>
            Specifies whether the maximum arrow is enabled or not.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Controls.ScrollBarBase.updateStates">
            <summary>
            Specifies whether the scrollbar state is needs to be update or not.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Controls.ScrollBarBase.horizontal">
            <summary>
            Specifies whether the scrollbar is horizontal or vertical.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Controls.ScrollBarBase.timer">
            <summary>
            The timer for the repeat scrolling.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Controls.ScrollBarBase.pressedRegion">
            <summary>
            The pressed region of the scrollbar.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Controls.ScrollBarBase.selectedRegion">
            <summary>
            The selected region of the scrollbar.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Controls.ScrollBarBase.movedRegion">
            <summary>
            The moved region of the scrollbar.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Controls.ScrollBarBase.style">
            <summary>
            The style info of the scrollbar.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Controls.ScrollBarBase.contextMenu">
            <summary>
            The context menu that needs to be showed while right clicking on the scrollbar.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Controls.ScrollBarBase.mouseLocation">
            <summary>
            Holds the current mouse location.
            </summary>
        </member>
        <member name="M:Syncfusion.WinForms.Controls.ScrollBarBase.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.WinForms.Controls.ScrollBarBase"/> class.
            </summary>        
        </member>
        <member name="M:Syncfusion.WinForms.Controls.ScrollBarBase.#ctor(System.Windows.Forms.ScrollBars,Syncfusion.WinForms.Controls.Styles.ScrollBarStyleInfo)">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.WinForms.Controls.ScrollBarBase"/> class.
            </summary> 
            <param name="type">The type of the scrollbar.</param>
            <param name="style">The <see cref="!:Syncfusion.WinForms.Controls.ScrollBarStyleInfo"/> of the scroll bar.</param>
        </member>
        <member name="M:Syncfusion.WinForms.Controls.ScrollBarBase.DropHandle">
            <summary>
            Destroys the handle associated with the control.
            </summary>
        </member>
        <member name="M:Syncfusion.WinForms.Controls.ScrollBarBase.RaiseMouseDown(System.Windows.Forms.MouseEventArgs)">
            <summary>
            Raise the MouseDown event
            </summary>
            <param name="args">The <see cref="T:System.Windows.Forms.MouseEventArgs"/> that contains  data.</param>
        </member>
        <member name="M:Syncfusion.WinForms.Controls.ScrollBarBase.RaiseMouseMove(System.Windows.Forms.MouseEventArgs)">
            <summary>
            Used to raise the MouseMove event.
            </summary>
            <param name="args">The <see cref="T:System.Windows.Forms.MouseEventArgs"/> contains event data</param>
        </member>
        <member name="M:Syncfusion.WinForms.Controls.ScrollBarBase.RaiseMouseUp(System.Windows.Forms.MouseEventArgs)">
            <summary>
            Used to raise the MouseUp event
            </summary>
            <param name="args">The <see cref="T:System.Windows.Forms.MouseEventArgs"/> that contains event data</param>
        </member>
        <member name="M:Syncfusion.WinForms.Controls.ScrollBarBase.SendScrollMessage(System.Windows.Forms.ScrollEventType)">
            <summary>
            Sends or emulates a	scroll event.
            </summary>
            <param name="et">The <see cref="T:System.Windows.Forms.ScrollEventType"/>.</param>
        </member>
        <member name="M:Syncfusion.WinForms.Controls.ScrollBarBase.InvalidateScrollBar">
            <summary>
            Recalculates the bounds of the scrollbar.
            </summary>
        </member>
        <member name="M:Syncfusion.WinForms.Controls.ScrollBarBase.GetStyle">
            <summary>
            Gets the style of the <see cref="T:Syncfusion.WinForms.Controls.Styles.ScrollBarStyleInfo"/>.
            </summary>
            <returns>Returns the ScrollBar style.</returns>
        </member>
        <member name="M:Syncfusion.WinForms.Controls.ScrollBarBase.IsRightToLeft">
            <summary>
            Gets a value indicating whether RightToLeft mode is enabled or not for scrollbar.
            </summary>
            <returns>Returns true when the RTL is enabled otherwise return false.</returns>
        </member>
        <member name="M:Syncfusion.WinForms.Controls.ScrollBarBase.Dispose(System.Boolean)">
            <summary>
            Releases the unmanaged resources.
            </summary>
            <param name="disposing">Specifies whether to dispose the managed and unmanaged resources or only the unmanaged resource.</param>>
        </member>
        <member name="M:Syncfusion.WinForms.Controls.ScrollBarBase.OnLayout(System.Windows.Forms.LayoutEventArgs)">
            <summary>
            Recalculates the scrollbar regions when performs the layout.
            </summary>
            <param name="e">The <see cref="T:System.Windows.Forms.LayoutEventArgs"/> that contains event data.</param>
        </member>
        <member name="M:Syncfusion.WinForms.Controls.ScrollBarBase.CreateAccessibilityInstance">
            <summary>
            Overridden to update the accessibility object of the SfScrollBar.
            </summary>
            <returns>Returns the accessibility object of the SfScrollBar.</returns>
        </member>
        <member name="M:Syncfusion.WinForms.Controls.ScrollBarBase.OnPaint(System.Windows.Forms.PaintEventArgs)">
            <summary>
            Draws the Scrollbar components based on the <see cref="P:Syncfusion.WinForms.Controls.ScrollBarBase.Style"/> value.
            </summary>
            <param name="e">The <see cref="T:System.Windows.Forms.PaintEventArgs"/> that contains event data.</param>
        </member>
        <member name="M:Syncfusion.WinForms.Controls.ScrollBarBase.DrawArrow(System.Drawing.Graphics,System.Drawing.Rectangle,System.Windows.Forms.ScrollButton,System.Windows.Forms.ButtonState,Syncfusion.WinForms.Controls.Styles.ScrollBarStyleInfo)">
            <summary>
            Draws the arrow for the scrollbar button.
            </summary>
            <param name="g">The <see cref="T:System.Drawing.Graphics"/> that used to draw the arrow..</param>
            <param name="rect">The bounds of the arrow.</param>
            <param name="type">The scroll button type.</param>
            <param name="state">The scroll button state.</param>
            <param name="style">The Style of the scrollbar.</param>
        </member>
        <member name="M:Syncfusion.WinForms.Controls.ScrollBarBase.DrawScrollBarBackground(System.Drawing.Graphics,System.Drawing.Rectangle,System.Windows.Forms.ButtonState,Syncfusion.WinForms.Controls.Styles.ScrollBarStyleInfo)">
            <summary>Draws the background for the scrollbar.</summary>
            <param name="g">The <see cref="T:System.Drawing.Graphics"/> object.</param>
            <param name="bounds">The bounds of the scrollbar.</param>
            <param name="state">The state of the scrollbar.</param>
            <param name="style">The Style of the scrollbar.</param>
        </member>
        <member name="M:Syncfusion.WinForms.Controls.ScrollBarBase.DrawThumbBackground(System.Drawing.Graphics,System.Drawing.Rectangle,System.Windows.Forms.ButtonState,Syncfusion.WinForms.Controls.Styles.ScrollBarStyleInfo)">
            <summary>Draws the background for the scrollbar Thumb.</summary>
            <param name="g">The <see cref="T:System.Graphics"/> object.</param>
            <param name="rect">The bounds of the scroll button.</param>
            <param name="state">The state of the scroll button.</param>
            <param name="style">The Style of the scrollbar.</param>
        </member>
        <member name="M:Syncfusion.WinForms.Controls.ScrollBarBase.OnSizeChanged(System.EventArgs)">
            <summary>
            Raises the <see cref="T:System.Windows.Forms.Control.SizeChanged"/> event.
            </summary>
            <param name="e">An <see cref="T:System.EventArgs"/> that contains event data.</param>
        </member>
        <member name="M:Syncfusion.WinForms.Controls.ScrollBarBase.OnValueChanged(System.EventArgs)">
            <summary>
            Raises the <see cref="E:Syncfusion.WinForms.Controls.ScrollBarBase.ValueChanged"/> event.
            </summary>
            <param name="e">An <see cref="T:System.EventArgs"/> that contains event data.</param>
        </member>
        <member name="M:Syncfusion.WinForms.Controls.ScrollBarBase.OnMouseDown(System.Windows.Forms.MouseEventArgs)">
            <summary>
            Raises the <see cref="T:System.Windows.Forms.Control.MouseDown"/> event.
            </summary>
            <param name="e">The <see cref="T:System.Windows.Forms.MouseEventArgs"/> that contains event data.</param>
        </member>
        <member name="M:Syncfusion.WinForms.Controls.ScrollBarBase.OnRightToLeftChanged(System.EventArgs)">
            <summary>
            Redraws the scroll control when RightToLeft is changed.
            </summary>
            <param name="e">An <see cref="T:System.EventArgs"/> that contains event data.</param>
        </member>
        <member name="M:Syncfusion.WinForms.Controls.ScrollBarBase.OnMouseUp(System.Windows.Forms.MouseEventArgs)">
            <summary>
            Performs the scrolling on the <see cref="T:System.Windows.Forms.Control.MouseUp"/> event.
            </summary>
            <param name="e">The <see cref="T:System.Windows.Forms.MouseEventArgs"/> that contains event data.</param>
        </member>
        <member name="M:Syncfusion.WinForms.Controls.ScrollBarBase.OnMouseEnter(System.EventArgs)">
            <summary>
            Raises the <see cref="T:System.Windows.Forms.Control.MouseEnter"/> event.
            </summary>
            <param name="e">An <see cref="T:System.EventArgs"/> that contains event data.</param>
        </member>
        <member name="M:Syncfusion.WinForms.Controls.ScrollBarBase.OnMouseMove(System.Windows.Forms.MouseEventArgs)">
            <summary>
            Raises the <see cref="T:System.Windows.Forms.Control.MouseMove"/> event.
            </summary>
            <param name="e">The <see cref="T:System.Windows.Forms.MouseEventArgs"/> that contains event data.</param>
        </member>
        <member name="M:Syncfusion.WinForms.Controls.ScrollBarBase.OnMouseLeave(System.EventArgs)">
            <summary>
            Raises the <see cref="T:System.Windows.Forms.Control.MouseLeave"/> event.
            </summary>
            <param name="e">An <see cref="T:System.EventArgs"/> that contains event data.</param>
        </member>
        <member name="M:Syncfusion.WinForms.Controls.ScrollBarBase.OnThumbPositionChanged(System.Int32,System.Int32)">
            <summary>
            Occurs when the scrollbar thumb is dragged.
            </summary>
            <param name="x">The X co-ordinates.</param>
            <param name="y">The Y co-ordinates.</param>
        </member>
        <member name="M:Syncfusion.WinForms.Controls.ScrollBarBase.GetMinButton">
            <summary>
            Gets min button. 
            </summary>
            <returns>Returns the min scroll button.</returns>
        </member>
        <member name="M:Syncfusion.WinForms.Controls.ScrollBarBase.GetMaxButton">
            <summary>
            Gets max button. 
            </summary>
            <returns>Returns the max scroll button.</returns>
        </member>
        <member name="M:Syncfusion.WinForms.Controls.ScrollBarBase.InvalidateArrowRegion">
            <summary>
            Invalidates the bounds of the arrow buttons.
            </summary>
        </member>
        <member name="M:Syncfusion.WinForms.Controls.ScrollBarBase.InvalidateThumbRegion">
            <summary>
            Invalidates the bounds of the thumb region.
            </summary>
        </member>
        <member name="M:Syncfusion.WinForms.Controls.ScrollBarBase.CalculateThumbDelta(System.Int32,System.Int32)">
            <summary>
            Used for calculating thumb offset.
            </summary>
            <param name="x">The X co-ordinate.</param>
            <param name="y">The Y co-ordinate.</param>
        </member>
        <member name="M:Syncfusion.WinForms.Controls.ScrollBarBase.PointToValue(System.Int32,System.Int32)">
            <summary>Gets the value of the scrollbar at the given point.</summary>
            <param name="x">The X co-ordinate.</param>
            <param name="y">The Y co-ordinate.</param>
            <returns>Returns the value of the scrollbar.</returns>
        </member>
        <member name="M:Syncfusion.WinForms.Controls.ScrollBarBase.OnScroll(System.Windows.Forms.ScrollEventArgs)">
            <summary>
            Raise the Scroll event.
            </summary>
            <param name="e">The <see cref="T:System.Windows.Forms.ScrollEventArgs"/> that contains event data.</param>
        </member>
        <member name="M:Syncfusion.WinForms.Controls.ScrollBarBase.OnScrollHereClick(System.Object,System.EventArgs)">
            <summary>
            Raises the mouse click on the scrollbar.
            </summary>
            <param name="sender">The object of the sender</param>
            <param name="e">An <see cref="T:System.EventArgs"/> that contains the event data.</param>
        </member>
        <member name="M:Syncfusion.WinForms.Controls.ScrollBarBase.OnMinimumClick(System.Object,System.EventArgs)">
            <summary>
            Raises the Scroll event when the mouse click on minimum thumb region.
            </summary>
            <param name="sender">The object of the sender</param>
            <param name="e">An <see cref="T:System.EventArgs"/> that contains the event data.</param>
        </member>
        <member name="M:Syncfusion.WinForms.Controls.ScrollBarBase.OnMaximumClick(System.Object,System.EventArgs)">
            <summary>
            Raises the Scroll event when mouse click on maximum thumb region.
            </summary>
            <param name="sender">The object of the sender</param>
            <param name="e">An <see cref="T:System.EventArgs"/> that contains the event data.</param>
        </member>
        <member name="M:Syncfusion.WinForms.Controls.ScrollBarBase.OnPageUpLeftClick(System.Object,System.EventArgs)">
            <summary>
            Raises the Scroll event when the mouse click on top left thumb region.
            </summary>
            <param name="sender">The object of the sender</param>
            <param name="e">An <see cref="T:System.EventArgs"/> that contains the event data.</param>
        </member>
        <member name="M:Syncfusion.WinForms.Controls.ScrollBarBase.OnPageDownRightClick(System.Object,System.EventArgs)">
            <summary>
            Raises the Scroll event mouse click on bottom right thumb region.
            </summary>
            <param name="sender">The object of the sender</param>
            <param name="e">An <see cref="T:System.EventArgs"/> that contains the event data.</param>
        </member>
        <member name="M:Syncfusion.WinForms.Controls.ScrollBarBase.OnScrollUpLeftClick(System.Object,System.EventArgs)">
            <summary>
            Raises Scroll event when the mouse click on top left thumb region.
            </summary>
            <param name="sender">The object of the sender</param>
            <param name="e">An <see cref="T:System.EventArgs"/> that contains the event data.</param>
        </member>
        <member name="M:Syncfusion.WinForms.Controls.ScrollBarBase.OnScrollDownRightClick(System.Object,System.EventArgs)">
            <summary>
            Raises the Scroll event when the mouse click on down left thumb region.
            </summary>
            <param name="sender">The object of the sender</param>
            <param name="e">An <see cref="T:System.EventArgs"/> that contains the event data.</param>
        </member>
        <member name="M:Syncfusion.WinForms.Controls.ScrollBarBase.InitializeContextMenu(System.Windows.Forms.ContextMenu)">
            <summary>
            Initialize the context menu for the scrollbar.
            </summary>
            <param name="contextMenu">The context menu that need to be displayed.</param>
        </member>
        <member name="M:Syncfusion.WinForms.Controls.ScrollBarBase.DisplayContextMenu(Syncfusion.WinForms.Controls.ScrollBarBase)">
            <summary>
            Creates and displays the context menu for the control.
            </summary>
            <param name="scrollBar">The <see cref="!:CustomScrollBar"/> control.</param>
        </member>
        <member name="M:Syncfusion.WinForms.Controls.ScrollBarBase.OnShowContextMenu(System.Object,Syncfusion.WinForms.Controls.Events.ContextMenuShowingEventArgs)">
            <summary>
            Raises the <see cref="E:Syncfusion.WinForms.Controls.ScrollBarBase.ContextMenuShowing"/> event.
            </summary>
            <param name="sender">The object of the sender.</param>
            <param name="e">The <see cref="T:Syncfusion.WinForms.Controls.Events.ContextMenuShowingEventArgs"/> that contains event data.</param>
        </member>
        <member name="M:Syncfusion.WinForms.Controls.ScrollBarBase.OnTimerTick(System.Object)">
            <summary>
            Occurs when the time tick is performed.
            </summary>
            <param name="sender">The object of the sender.</param>
        </member>
        <member name="M:Syncfusion.WinForms.Controls.ScrollBarBase.PerformAutoScroll(Syncfusion.WinForms.Controls.Enums.ScrollBarRegion)">
            <summary>
            Performs the scrolling based on the moved region.
            </summary>
            <param name="movedRegion">The region of the scrollbar that needs to be scrolled.</param>
        </member>
        <member name="M:Syncfusion.WinForms.Controls.ScrollBarBase.PerformThumbMinRegionClick(System.Object,System.EventArgs)">
            <summary>
            Performs the mouse click on left thumb region.
            </summary>
            <param name="sender">The object of the sender</param>
            <param name="e">An <see cref="T:System.EventArgs"/> that contains the event data.</param>
        </member>
        <member name="M:Syncfusion.WinForms.Controls.ScrollBarBase.PerformThumbMaxRegionClick(System.Object,System.EventArgs)">
            <summary>
            Performs the mouse click on max region.
            </summary>
            <param name="sender">The object of the sender</param>
            <param name="e">An <see cref="T:System.EventArgs"/> that contains the event data.</param>
        </member>
        <member name="M:Syncfusion.WinForms.Controls.ScrollBarBase.PerformMinButtonClick(System.Object,System.EventArgs)">
            <summary>
            Performs the mouse click on min button.
            </summary>
            <param name="sender">The object of the sender.</param>
            <param name="e">An <see cref="T:System.EventArgs"/> that contains the event data.</param>
        </member>
        <member name="M:Syncfusion.WinForms.Controls.ScrollBarBase.PerformMaxButtonClick(System.Object,System.EventArgs)">
            <summary>
            Performs the mouse click on max button.
            </summary>
            <param name="sender">The object of the sender</param>
            <param name="e">An <see cref="T:System.EventArgs"/> that contains the event data.</param>
        </member>
        <member name="M:Syncfusion.WinForms.Controls.ScrollBarBase.DefineMovedRegion(System.Drawing.Point)">
            <summary>
            Defines the moved position of the cursor.
            </summary>
            <param name="p">The point which need to be in the moved region.</param>
        </member>
        <member name="M:Syncfusion.WinForms.Controls.ScrollBarBase.DefineMovedRegion(System.Int32,System.Int32)">
            <summary>
            Defines the moved position of the cursor.
            </summary>
            <param name="x">X coordinate of mouse.</param>
            <param name="y">Y coordinate of mouse.</param>
        </member>
        <member name="M:Syncfusion.WinForms.Controls.ScrollBarBase.SetInnerValue(System.Int32)">
            <summary>
            Sets value without raising the ValueChanged event. 
            </summary>
            <param name="value">The value that need to be set for the scrollbar.</param>
        </member>
        <member name="M:Syncfusion.WinForms.Controls.ScrollBarBase.HitTest(System.Int32,System.Int32)">
            <summary>
            Defines pressed region.
            </summary>
            <param name="x">The X co-ordinate.</param>
            <param name="y">The Y co-ordinate.</param>
            <returns>Returns the pressed region.</returns>
        </member>
        <member name="M:Syncfusion.WinForms.Controls.ScrollBarBase.PerformScroll(System.Windows.Forms.MouseEventArgs,Syncfusion.WinForms.Controls.Enums.ScrollBarRegion)">
            <summary>
            Updates the scrollbar value based on the given ScrollBarRegion.
            </summary>
            <param name="e">The <see cref="T:System.Windows.Forms.MouseEventArgs"/> that contains event data.</param>
            <param name="pressedRegion">The <see cref="!:Syncfusion.WinForms.Controls.ScrollBarRegion"/> in which the mouse down is occurs.</param>
        </member>
        <member name="E:Syncfusion.WinForms.Controls.ScrollBarBase.ValueChanged">
            <summary>
            Occurs when the Value property is changed.
            </summary>
        </member>
        <member name="E:Syncfusion.WinForms.Controls.ScrollBarBase.Scroll">
            <summary>
            Occurs when the scrolling is performed.
            </summary>
        </member>
        <member name="E:Syncfusion.WinForms.Controls.ScrollBarBase.ContextMenuShowing">
            <summary>
            Occurs when the context menu is showing for the control.
            </summary>
        </member>
        <member name="P:Syncfusion.WinForms.Controls.ScrollBarBase.LargeChange">
            <summary>
            Gets or sets a value to be added to or subtracted from the <see cref="P:Syncfusion.WinForms.Controls.ScrollBarBase.Value"/>
            property when the scroll box is moved a large distance.
            </summary>
            <remarks>
            When the user clicks the scroll bar, Maximum button or minimum button, the <see cref="P:Syncfusion.WinForms.Controls.ScrollBarBase.Value"/> property changes according to the value set in the <see cref="P:Syncfusion.WinForms.Controls.ScrollBarBase.LargeChange"/> property.
            </remarks>
        </member>
        <member name="P:Syncfusion.WinForms.Controls.ScrollBarBase.Maximum">
            <summary>
            Gets or sets the upper limit of values of the scrollable range.
            </summary>
        </member>
        <member name="P:Syncfusion.WinForms.Controls.ScrollBarBase.Minimum">
            <summary>
            Gets or sets the lower limit of values of the scrollable range.
            </summary>
        </member>
        <member name="P:Syncfusion.WinForms.Controls.ScrollBarBase.SmallChange">
            <summary>
            Gets or sets a value to be added or subtracted from the Value 
            property when the scroll box is moved a small distance.
            </summary>
            <remarks>
            When the user clicks the scroll bar, Maximum button or minimum button , the <see cref="P:Syncfusion.WinForms.Controls.ScrollBarBase.Value"/> property changes according to the value set in the <see cref="P:Syncfusion.WinForms.Controls.ScrollBarBase.SmallChange"/> property.
            </remarks>
        </member>
        <member name="P:Syncfusion.WinForms.Controls.ScrollBarBase.Value">
            <summary>
            Gets or sets a numeric value that represents the current position of the
            scroll box on the scroll bar control.
            </summary>
        </member>
        <member name="P:Syncfusion.WinForms.Controls.ScrollBarBase.EnableThumb">
            <summary>
            Gets or sets a value indicating whether the scroll bar thumb can be enabled or not.
            Default value is true.
            </summary>
        </member>
        <member name="P:Syncfusion.WinForms.Controls.ScrollBarBase.EnableMinimumArrow">
            <summary>
            Gets or sets a value indicating whether minimum arrow can be enabled or not.
            Default value is true.
            </summary>
        </member>
        <member name="P:Syncfusion.WinForms.Controls.ScrollBarBase.EnableMaximumArrow">
            <summary>
            Gets or sets a value indicating whether maximum arrow can be enabled or not.
            Default value is true.
            </summary>
        </member>
        <member name="P:Syncfusion.WinForms.Controls.ScrollBarBase.Style">
            <summary>
            Gets or sets the <see cref="!:Syncfusion.WinForms.Controls.ScrollBarStyleInfo"/> with settings that control the appearance of the scroll bar.
            </summary>
        </member>
        <member name="P:Syncfusion.WinForms.Controls.ScrollBarBase.AccessibilityEnabled">
            <summary>
            Gets or sets a value indicating whether the accessibility is enabled for the control or not.
            </summary>
        </member>
        <member name="P:Syncfusion.WinForms.Controls.ScrollBarBase.Orientation">
            <summary>
            Gets the orientation of the scrolling.
            </summary>
        </member>
        <member name="P:Syncfusion.WinForms.Controls.ScrollBarBase.MouseLocation">
            <summary>
            Gets the current mouse location.
            </summary>
        </member>
        <member name="P:Syncfusion.WinForms.Controls.ScrollBarBase.ScrollBarRects">
            <summary>
            Gets the rectangle regions of the scrollbar elements.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Controls.HorizontalScrollBar.DefaultThumbWidth">
            <summary>
            Specifies the default thumb width.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Controls.HorizontalScrollBar.deltaX">
            <summary>
            Specifies the location of the mouse click on the thumb.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Controls.HorizontalScrollBar.defaultSize">
            <summary>
            The default size of the scrollbar.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Controls.HorizontalScrollBar.sfScrollControl">
            <summary>
            The attached SfScrollControl;
            </summary>
        </member>
        <member name="M:Syncfusion.WinForms.Controls.HorizontalScrollBar.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.WinForms.Controls.HorizontalScrollBar"/> class.
            </summary>        
        </member>
        <member name="M:Syncfusion.WinForms.Controls.HorizontalScrollBar.#ctor(Syncfusion.WinForms.Controls.Styles.ScrollBarStyleInfo)">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.WinForms.Controls.HorizontalScrollBar"/> class.
            </summary>
            <param name="style">The <see cref="T:Syncfusion.WinForms.Controls.Styles.ScrollBarStyleInfo"/> for the horizontal scrollbar.</param>
        </member>
        <member name="M:Syncfusion.WinForms.Controls.HorizontalScrollBar.#ctor(Syncfusion.WinForms.Controls.Styles.ScrollBarStyleInfo,Syncfusion.WinForms.Controls.SfScrollControl)">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.WinForms.Controls.HorizontalScrollBar"/> class.
            </summary>
            <param name="style">The <see cref="T:Syncfusion.WinForms.Controls.Styles.ScrollBarStyleInfo"/> for the horizontal scrollbar.</param>
            <param name="control">Instance of the SfScrollControl.</param>
        </member>
        <member name="M:Syncfusion.WinForms.Controls.HorizontalScrollBar.GetStyle">
            <summary>
            Gets the style of the <see cref="T:Syncfusion.WinForms.Controls.Styles.ScrollBarStyleInfo"/>
            </summary>
            <returns>Returns the ScrollControl' horizontal scrollbar style.</returns>
        </member>
        <member name="M:Syncfusion.WinForms.Controls.HorizontalScrollBar.PointToValue(System.Int32,System.Int32)">
            <summary>
            Gets value by cursor position.
            </summary>
            <param name="x">The x position of the scrollbar. </param>
            <param name="y">The y position of the scrollbar.</param>
            <returns>Returns the value of the given point.</returns>
        </member>
        <member name="M:Syncfusion.WinForms.Controls.HorizontalScrollBar.InvalidateArrowRegion">
            <summary>
            Recalculates the arrow positions of the scrollbar.
            </summary>
        </member>
        <member name="M:Syncfusion.WinForms.Controls.HorizontalScrollBar.InvalidateThumbRegion">
            <summary>
            Recalculates the thumb positions of the scrollbar.
            </summary>
        </member>
        <member name="M:Syncfusion.WinForms.Controls.HorizontalScrollBar.GetMaxButton">
            <summary>
            Gets the maximum button.
            </summary>
            <returns>Returns the maximum scroll button.</returns>
        </member>
        <member name="M:Syncfusion.WinForms.Controls.HorizontalScrollBar.GetMinButton">
            <summary>
            Gets the Minimum scroll button.
            </summary>
            <returns>Returns the minimum scroll button.</returns>
        </member>
        <member name="M:Syncfusion.WinForms.Controls.HorizontalScrollBar.OnThumbPositionChanged(System.Int32,System.Int32)">
            <summary>Occurs while moving the mouse position on the scrollbar.</summary>
            <param name="x">The location of the x co-ordinate.</param>
            <param name="y">The location of the y co-ordinate.</param>
        </member>
        <member name="M:Syncfusion.WinForms.Controls.HorizontalScrollBar.CalculateThumbDelta(System.Int32,System.Int32)">
            <summary>Calculates the delta value of x.</summary>
            <param name="x">The x position of the mouse cursor.</param>
            <param name="y">The y position of the mouse cursor.</param>
        </member>
        <member name="M:Syncfusion.WinForms.Controls.HorizontalScrollBar.OnScrollHereClick(System.Object,System.EventArgs)">
            <summary>
            Occurs while clicking the ScrollHere menu item.
            </summary>
            <param name="sender">The object of the sender.</param>
            <param name="e">An <see cref="T:System.EventArgs"/> that contains event data.</param>
        </member>
        <member name="M:Syncfusion.WinForms.Controls.HorizontalScrollBar.OnPageDownRightClick(System.Object,System.EventArgs)">
            <summary>
            Occurs while clicking on the PageDown or Right menu items.
            </summary>
            <param name="sender">The sender of the event.</param>
            <param name="e">An <see cref="T:System.EventArgs"/> that contains event data.</param>
        </member>
        <member name="M:Syncfusion.WinForms.Controls.HorizontalScrollBar.OnPageUpLeftClick(System.Object,System.EventArgs)">
            <summary>
            Occurs while clicking the PageUp or Left menu items.
            </summary>
            <param name="sender">The sender of the event.</param>
            <param name="e">The <see cref="T:System.EventArgs"/> that contains event data.</param>
        </member>
        <member name="M:Syncfusion.WinForms.Controls.HorizontalScrollBar.CalculateArrowButtonLocation">
            <summary>
            Calculates the positions of the Arrow button.
            </summary>
        </member>
        <member name="M:Syncfusion.WinForms.Controls.HorizontalScrollBar.CalculateThumbLeftAndRightRegion">
            <summary>
            Calculates the bounds for leftThumb and rightThumb region of the scrollbar.
            </summary>
        </member>
        <member name="P:Syncfusion.WinForms.Controls.HorizontalScrollBar.DefaultSize">
            <summary>
            Gets the default size of the horizontal scrollbar.
            </summary>
        </member>
        <member name="T:Syncfusion.WinForms.Controls.ScrollControlResourceWrapper">
            <summary>
            Provides a class that contains properties to get the localized string for the <see cref="T:Syncfusion.WinForms.Controls.SfScrollControl"/> based on the current culture.
            </summary>
        </member>
        <member name="P:Syncfusion.WinForms.Controls.ScrollControlResourceWrapper.ScrollHere">
            <summary>
            Gets the localized string for ScrollHere item of ScrollBar ContextMenu.
            </summary>
        </member>
        <member name="P:Syncfusion.WinForms.Controls.ScrollControlResourceWrapper.ScrollUp">
            <summary>
            Gets the localized string for ScrollUp item of ScrollBar ContextMenu.
            </summary>
        </member>
        <member name="P:Syncfusion.WinForms.Controls.ScrollControlResourceWrapper.ScrollDown">
            <summary>
            Gets the localized string for ScrollDown item of ScrollBar ContextMenu.
            </summary>
        </member>
        <member name="P:Syncfusion.WinForms.Controls.ScrollControlResourceWrapper.PageUp">
            <summary>
            Gets the localized string for PageUp item of ScrollBar ContextMenu.
            </summary>
        </member>
        <member name="P:Syncfusion.WinForms.Controls.ScrollControlResourceWrapper.PageDown">
            <summary>
            Gets the localized string for PageDown item of ScrollBar ContextMenu.
            </summary>
        </member>
        <member name="P:Syncfusion.WinForms.Controls.ScrollControlResourceWrapper.Top">
            <summary>
            Gets the localized string for Top item of ScrollBar ContextMenu.
            </summary>
        </member>
        <member name="P:Syncfusion.WinForms.Controls.ScrollControlResourceWrapper.Bottom">
            <summary>
            Gets the localized string for Bottom item of ScrollBar ContextMenu.
            </summary>
        </member>
        <member name="P:Syncfusion.WinForms.Controls.ScrollControlResourceWrapper.ScrollLeft">
            <summary>
            Gets the localized string for ScrollLeft item of ScrollBar ContextMenu.
            </summary>
        </member>
        <member name="P:Syncfusion.WinForms.Controls.ScrollControlResourceWrapper.ScrollRight">
            <summary>
            Gets the localized string for ScrollRight item of ScrollBar ContextMenu.
            </summary>
        </member>
        <member name="P:Syncfusion.WinForms.Controls.ScrollControlResourceWrapper.PageLeft">
            <summary>
            Gets the localized string for PageLeft item of ScrollBar ContextMenu.
            </summary>
        </member>
        <member name="P:Syncfusion.WinForms.Controls.ScrollControlResourceWrapper.PageRight">
            <summary>
            Gets the localized string for PageRight item of ScrollBar ContextMenu.
            </summary>
        </member>
        <member name="P:Syncfusion.WinForms.Controls.ScrollControlResourceWrapper.LeftEdge">
            <summary>
            Gets the localized string for LeftEdge item of ScrollBar ContextMenu.
            </summary>
        </member>
        <member name="P:Syncfusion.WinForms.Controls.ScrollControlResourceWrapper.RightEdge">
            <summary>
            Gets the localized string for RightEdge item of ScrollBar ContextMenu.
            </summary>
        </member>
        <member name="T:Syncfusion.WinForms.Controls.ScrollProperties">
            <summary>
            Represents a class that holds the properties of the scrollbar.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Controls.ScrollProperties.isAttached">
            <summary>
            Specifies whether the scrollbar is the attached scrollbar or not.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Controls.ScrollProperties.scrollBar">
            <summary>
            The scrollbar base that needs to be wrapped.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Controls.ScrollProperties.attachedSfScrollBar">
            <summary>
            Holds the custom attached scrollbar.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Controls.ScrollProperties.attachedScrollBar">
            <summary>
            Holds the attached system scrollbar.
            </summary>
        </member>
        <member name="M:Syncfusion.WinForms.Controls.ScrollProperties.#ctor(Syncfusion.WinForms.Controls.ScrollBarBase)">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.WinForms.Controls.ScrollProperties"/> class.
            </summary>
            <param name="scrollBar">The scrollbar.</param>
        </member>
        <member name="M:Syncfusion.WinForms.Controls.ScrollProperties.AttachScrollBar(System.Windows.Forms.Control)">
            <summary>
            Attach the scroll events of the given scrollbar to the scroll control.
            </summary>
            <param name="scrollBar">The scrollbar that need to be attached.</param>
        </member>
        <member name="M:Syncfusion.WinForms.Controls.ScrollProperties.DetachScrollBar">
            <summary>
            Remove the scroll events of the attached scrollbars.
            </summary>
        </member>
        <member name="M:Syncfusion.WinForms.Controls.ScrollProperties.InitializeScrollBar">
            <summary>
            Initializes the values of the attached scrollbar.
            </summary>
        </member>
        <member name="M:Syncfusion.WinForms.Controls.ScrollProperties.OnInnerScrollBarValueChanged(System.Object,System.EventArgs)">
            <summary>
            Raises the ValueChanged event.
            </summary>
            <param name="sender">The object of the sender.</param>
            <param name="e">The <see cref="T:System.EventArgs"/> that contains event data.</param>
        </member>
        <member name="M:Syncfusion.WinForms.Controls.ScrollProperties.OnInnerScroll(System.Object,System.Windows.Forms.ScrollEventArgs)">
            <summary>
            Raises the <see cref="E:Syncfusion.WinForms.Controls.ScrollProperties.Scroll"/> event of the scrollbar.
            </summary>
            <param name="sender">The object of the sender.</param>
            <param name="se">The <see cref="T:System.Windows.Forms.ScrollEventArgs"/> that contains event data.</param>
        </member>
        <member name="E:Syncfusion.WinForms.Controls.ScrollProperties.ValueChanged">
            <summary>
            Occurs when the value property is changed.
            </summary>
        </member>
        <member name="E:Syncfusion.WinForms.Controls.ScrollProperties.Scroll">
            <summary>
            Occurs when the scrolling is done on the scrollbar.
            </summary>
        </member>
        <member name="P:Syncfusion.WinForms.Controls.ScrollProperties.ScrollBar">
            <summary>
            Gets the reference to the scrollbar.
            </summary>
        </member>
        <member name="P:Syncfusion.WinForms.Controls.ScrollProperties.LargeChange">
            <summary>
            Gets or sets a value to	be added to	or subtracted from the value of the	property when the scroll box is	moved a large distance.
            </summary>
        </member>
        <member name="P:Syncfusion.WinForms.Controls.ScrollProperties.Maximum">
            <summary>
            Gets or sets the upper limit of	values of the scrollable range.
            </summary>
        </member>
        <member name="P:Syncfusion.WinForms.Controls.ScrollProperties.Minimum">
            <summary>
            Gets or sets a lower limit of	values of the scrollable range.
            </summary>
        </member>
        <member name="P:Syncfusion.WinForms.Controls.ScrollProperties.SmallChange">
            <summary>
            Gets or sets the value to be added or subtracted from the Value property when the scroll box is moved a small distance.
            </summary>
        </member>
        <member name="P:Syncfusion.WinForms.Controls.ScrollProperties.Value">
            <summary>
            Gets or sets the numeric value that represents the current position of the scroll	box	on the scroll bar control.
            </summary>
        </member>
        <member name="P:Syncfusion.WinForms.Controls.ScrollProperties.Enabled">
            <summary>
            Gets or sets a value indicating whether the scrollbar can be enabled.
            </summary>
        </member>
        <member name="T:Syncfusion.WinForms.Controls.SfScrollControl">
            <summary>
            Represents a base class for the controls that supports scrolling.
            </summary>
        </member>
        <member name="T:Syncfusion.WinForms.Core.ISupportUpdate">
            <summary>
            Provides the functionalities for the control to have BeginUpdate and EndUpdate options.
            </summary>
        </member>
        <member name="M:Syncfusion.WinForms.Core.ISupportUpdate.BeginUpdate">
            <summary>
            Suspends updating the component. An internal counter will be increased if called multiple times.
            </summary>
        </member>
        <member name="M:Syncfusion.WinForms.Core.ISupportUpdate.EndUpdate">
            <summary>
            Resumes updating the component. If <see cref="M:Syncfusion.WinForms.Core.ISupportUpdate.BeginUpdate"/> was called multiple times, an internal counter is decreased.
            </summary>
        </member>
        <member name="P:Syncfusion.WinForms.Core.ISupportUpdate.IsUpdating">
            <summary>
            Gets a value indicating whether <see cref="M:Syncfusion.WinForms.Core.ISupportUpdate.BeginUpdate"/> was called.
            </summary>
        </member>
        <member name="T:Syncfusion.WinForms.Core.Styles.IThemeProvider">
            <summary>
            Provides the functionalities for the control to provide theme support.
            </summary>
        </member>
        <member name="M:Syncfusion.WinForms.Core.Styles.IThemeProvider.GetActiveThemeName">
            <summary>
            Gets the name of the active theme that is currently applied to the control.
            </summary>
            <returns>Returns the active theme name.</returns>
        </member>
        <member name="E:Syncfusion.WinForms.Core.Styles.IThemeProvider.ThemeChanged">
            <summary>
            Occurs when theme is changed.
            </summary>
        </member>
        <member name="P:Syncfusion.WinForms.Core.Styles.IThemeProvider.ActiveThemeName">
            <summary>
            Gets or sets the name of the <see cref="T:Syncfusion.WinForms.Controls.SfSkinManager"/> theme.
            </summary>
            <remarks>
            This property will be set if the theme is initialized using the <see cref="T:Syncfusion.WinForms.Controls.SfSkinManager"/> component.
            </remarks>
        </member>
        <member name="P:Syncfusion.WinForms.Core.Styles.IThemeProvider.ThemeName">
            <summary>
            Gets or sets the name of the theme.
            </summary>
        </member>
        <member name="P:Syncfusion.WinForms.Core.Styles.IThemeProvider.ControlName">
            <summary>
            Gets the name of the control.
            </summary>
        </member>
        <member name="P:Syncfusion.WinForms.Core.Styles.IThemeProvider.CanApplyTheme">
            <summary>
            Gets or sets a value indicating whether the <see cref="T:Syncfusion.WinForms.Controls.SfSkinManager"/> theme should be applied to the control.
            Default value is true.
            </summary>
            <remarks>
            If true, <see cref="!:Syncfusion.WinForms.Core.IThemeProvider.ActiveThemeName"/> will be applied to control. 
            Otherwise <see cref="!:Syncfusion.WinForms.Core.IThemeProvider.ThemeName"/> will be applied to control.
            </remarks>
        </member>
        <member name="P:Syncfusion.WinForms.Core.Styles.IThemeProvider.CanOverrideStyle">
            <summary>
            Gets or sets a value indicating whether control elements styles can be overridden by theme style settings.
            Default value is false.
            </summary>
            <remarks>
            By default, the control's element styles will not be overridden by theme style settings if the style is set in sample level. 
            If this property is enabled, element style will be overridden by theme style settings event if it is set in sample level.
            This property should be enabled or disabled before calling the ThemeName property of the control.
            </remarks>
        </member>
        <member name="F:Syncfusion.WinForms.Controls.SfScrollControl.startstopSemaphor">
            <summary>
            Specifies the semaphore for the auto scroll timer.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Controls.SfScrollControl.overrideCursor">
            <summary>
            Specifies the cursor that needs to set for the scroll control.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Controls.SfScrollControl.wiredParentForm">
            <summary>
            Specifies the parent form of the scroll control.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Controls.SfScrollControl.repeatScrollMessage">
            <summary>
            Specifies the repeat scroll timer message for the control.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Controls.SfScrollControl.autoScrollBounds">
            <summary>
            Specifies the auto scroll bounds of the control. 
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Controls.SfScrollControl.autoScrollMode">
            <summary>
            Holds the default auto scrolling mode of the control.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Controls.SfScrollControl.autoScrollMargin">
            <summary>
            Specifies the auto scroll margin for the control.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Controls.SfScrollControl.repeatScrollEventTimer">
            <summary>
            Specifies the timer for the repeat scrolling.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Controls.SfScrollControl.hScrollBar">
            <summary>
            Holds the horizontal scrollbar.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Controls.SfScrollControl.vScrollBar">
            <summary>
            Holds the vertical scrollbar.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Controls.SfScrollControl.readerModeScrollController">
            <summary>
            Holds the reader mode scroll controller.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Controls.SfScrollControl.sizeBox">
            <summary>
            Specifies the size box that needs to be added to the scroll control.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Controls.SfScrollControl.updateCount">
            <summary>
            Holds the number of updates pending for the control.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Controls.SfScrollControl.lastMouseTick">
            <summary>
            holds the timer tick for the auto scrolling.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Controls.SfScrollControl.gestureConfigSize">
            <summary>
            Holds the size of the GestureConfig.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Controls.SfScrollControl.gestureInfoSize">
            <summary>
            Holds the size of the GestureInfo.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Controls.SfScrollControl.verticalScrollValue">
            <summary>
            Holds the value of the vertical scrollbar.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Controls.SfScrollControl.horizontalScrollValue">
            <summary>
            Holds the value of the horizontal scrollbar.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Controls.SfScrollControl.vScrollIncrement">
            <summary>
            Specifies the value that needs to be incremented/decremented for vertical scrollbar using the mouse wheel.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Controls.SfScrollControl.hScrollIncrement">
            <summary>
            Specifies the value that needs to be incremented/decremented for horizontal scrollbar using the mouse wheel.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Controls.SfScrollControl.timerCount">
            <summary>
            Holds the timer count of the auto scroll timer.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Controls.SfScrollControl.touchStartPoint">
            <summary>
            Holds the starting touch point of the scroll control.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Controls.SfScrollControl.horizontalScrollBarVisible">
            <summary>
            Holds the value that indicates whether the horizontal scrollbar can be visible.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Controls.SfScrollControl.verticalScrollBarVisible">
            <summary>
            Holds the value that indicates whether the vertical scrollbar can be visible.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Controls.SfScrollControl.disableAutoScroll">
            <summary>
            Holds the value that indicates whether the auto scrolling is needs to be disabled.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Controls.SfScrollControl.paintPending">
            <summary>
            Specifies whether the paint pending is available or not.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Controls.SfScrollControl.isActiveControl">
            <summary>
            Specifies the value that indicates whether the scroll control is active or not.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Controls.SfScrollControl.hasControlFocus">
            <summary>
            Holds a value that indicates whether the Scroll control has the focus or not.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Controls.SfScrollControl.inOleDragOver">
            <summary>
            Specifies whether the control is currently in the DragOver state or not.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Controls.SfScrollControl.inMouseDragScroll">
            <summary>
            Specifies whether the auto scrolling is currently in performing on the control or not.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Controls.SfScrollControl.isTouchOverHScrollBar">
            <summary>
            Specifies whether the hovering is made on the horizontal scrollbar using the touch.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Controls.SfScrollControl.isTouchOverVScrollBar">
            <summary>
            Specifies whether the hovering is made on the vertical scrollbar using the touch.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Controls.SfScrollControl.scrollControlStyle">
            <summary>
            Holds the style info collection for the scroll control elements.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Controls.SfScrollControl.horizontalScroll">
            <summary>
            Holds the wrapped properties of the horizontal scrollbar.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Controls.SfScrollControl.verticalScroll">
            <summary>
            Holds the wrapped properties of the vertical scrollbar.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Controls.SfScrollControl.autoScrollInterval">
            <summary>
            Holds the timespan for the auto scrolling interval.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Controls.SfScrollControl.themeName">
            <summary>
            Represents the theme name of the control.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Controls.SfScrollControl.activeThemeName">
            <summary>
            Represents the active theme name of the control.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Controls.SfScrollControl.allowSkinManager">
            <summary>
            Specifies the theme need to be applied to the control or not.
            </summary>
        </member>
        <member name="M:Syncfusion.WinForms.Controls.SfScrollControl.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.WinForms.Controls.SfScrollControl"/> class.
            </summary>
        </member>
        <member name="M:Syncfusion.WinForms.Controls.SfScrollControl.GetActiveThemeName">
            <summary>
            Gets the name of the active theme that is currently applied to the control.
            </summary>
            <returns>Returns the active theme name.</returns>
        </member>
        <member name="M:Syncfusion.WinForms.Controls.SfScrollControl.BeginUpdate">
            <summary>
            Suspends the painting of the control until the <see cref="M:Syncfusion.WinForms.Controls.SfScrollControl.EndUpdate"/> method is called.
            </summary>
        </member>
        <member name="M:Syncfusion.WinForms.Controls.SfScrollControl.EndUpdate">
            <summary>
            Resumes the painting of the control suspended by calling the BeginUpdate method.
            </summary>
        </member>
        <member name="M:Syncfusion.WinForms.Controls.SfScrollControl.ScrollWindow(System.Int32,System.Int32,System.Drawing.Rectangle,System.Drawing.Rectangle,System.Boolean)">
            <summary>
            Scrolls the contents of the control based on the given values.
            </summary>
            <returns>Returns the rectangle region that is scrolled.</returns>
            <param name="xAmount">The x amount that need to be scrolled.</param>
            <param name="yAmount">The y amount that need to be scrolled on vertical direction.</param>
            <param name="rect">The bounds that need to be scrolled. </param>
            <param name="clipRect">The ClipRectangle.</param>
            <param name="allowUpdate">Specifies the value for update the window after the scrolling or not.</param>
        </member>
        <member name="M:Syncfusion.WinForms.Controls.SfScrollControl.UpdateScrollBars">
            <summary>
            Synchronize the scrollbar regions to reflect the changes.
            </summary>
        </member>
        <member name="M:Syncfusion.WinForms.Controls.SfScrollControl.IncreaseSmallChange(Syncfusion.WinForms.Controls.ScrollBarBase,System.Int64)">
            <summary>
            Increase the scrollbar SmallChange to perform the accelerated scrolling.
            </summary>
            <param name="scrollBar">The <see cref="T:Syncfusion.WinForms.Controls.ScrollBarBase"/> that need to be accelerate.</param>
            <param name="timerCount">The time count.</param>
        </member>
        <member name="M:Syncfusion.WinForms.Controls.SfScrollControl.WireScrollEvents">
            <summary>
            Wires the scroll events.
            </summary>
        </member>
        <member name="M:Syncfusion.WinForms.Controls.SfScrollControl.UnwireScrollEvents">
            <summary>
            Unwire the ScrollEvent.
            </summary>
        </member>
        <member name="M:Syncfusion.WinForms.Controls.SfScrollControl.StopAutoScrollTimer">
            <summary>
            Stops the auto scrolling timer.
            </summary>
        </member>
        <member name="M:Syncfusion.WinForms.Controls.SfScrollControl.WndProc(System.Windows.Forms.Message@)">
            <summary>
            Overrides the WndProc method.
            </summary>
            <param name="msg">An Window message.</param>
            <remarks>
            To handle the window messages internally for the Touch, ContextMenu and painting operations.
            </remarks>
        </member>
        <member name="M:Syncfusion.WinForms.Controls.SfScrollControl.OnParentChanged(System.EventArgs)">
            <summary>
            Updates the parent form of the control.
            </summary>
            <param name="e">An <see cref="T:System.EventArgs"/> that contains event data.</param>
        </member>
        <member name="M:Syncfusion.WinForms.Controls.SfScrollControl.Dispose(System.Boolean)">
            <summary>
            Disposes the unused resources.
            </summary>
            <param name="disposing">Specifies whether to dispose both managed and unmanaged resources or only the unmanaged resources.</param>
        </member>
        <member name="M:Syncfusion.WinForms.Controls.SfScrollControl.OnMouseWheel(System.Windows.Forms.MouseEventArgs)">
            <summary>
            Performs the mouse wheel scrolling when the <see cref="T:System.Windows.Forms.Control.MouseWheel"/> event is occur.
            </summary>
            <param name="e">An <see cref="T:System.Windows.Forms.MouseEventArgs"/> that contains event data.</param>
        </member>
        <member name="M:Syncfusion.WinForms.Controls.SfScrollControl.OnMouseDown(System.Windows.Forms.MouseEventArgs)">
            <summary>
            Occurs when the mouse pointer is over the control and the mouse button is pressed.
            </summary>
            <param name="e">The <see cref="T:System.Windows.Forms.MouseEventArgs"/> that contains event data.</param>
        </member>
        <member name="M:Syncfusion.WinForms.Controls.SfScrollControl.OnMouseUp(System.Windows.Forms.MouseEventArgs)">
            <summary>
            Occurs when mouse up is performed on the control.
            </summary>
            <param name="e">The <see cref="T:System.Windows.Forms.MouseEventArgs"/> that contains event data.</param>
        </member>
        <member name="M:Syncfusion.WinForms.Controls.SfScrollControl.OnMouseMove(System.Windows.Forms.MouseEventArgs)">
            <summary>
            Starts the auto scrolling when the mouse pointer is moved away from the scroll bounds.
            </summary>
            <param name="e">The <see cref="T:System.Windows.Forms.MouseEventArgs"/> that contains event data.</param>
        </member>
        <member name="M:Syncfusion.WinForms.Controls.SfScrollControl.OnMouseLeave(System.EventArgs)">
            <summary>
            Sets the default cursor when the mouse pointer leaves the control.
            </summary>
            <param name="e">An <see cref="T:System.EventArgs"/> that contains event data.</param>
        </member>
        <member name="M:Syncfusion.WinForms.Controls.SfScrollControl.OnMouseHover(System.EventArgs)">
            <summary>
            Stops the auto scroll timer when the mouse pointer is moves over the control.
            </summary>
            <param name="e">An <see cref="T:System.EventArgs"/> that contains event data.</param>
        </member>
        <member name="M:Syncfusion.WinForms.Controls.SfScrollControl.OnInvalidated(System.Windows.Forms.InvalidateEventArgs)">
            <summary>
            Occurs when the control's display required redraw. 
            </summary>
            <param name="e">An <see cref="T:System.Windows.Forms.InvalidateEventArgs"/> that contains the event data.</param>
        </member>
        <member name="M:Syncfusion.WinForms.Controls.SfScrollControl.OnEnter(System.EventArgs)">
            <summary>
            Occurs when the control is entered.
            </summary>
            <param name="e">An <see cref="T:System.EventArgs"/> that contains event data.</param>
        </member>
        <member name="M:Syncfusion.WinForms.Controls.SfScrollControl.OnLeave(System.EventArgs)">
            <summary>
            Occurs when the input focus leaves the control.
            </summary>
            <param name="e">An <see cref="T:System.EventArgs"/> that contains event data.</param>
        </member>
        <member name="M:Syncfusion.WinForms.Controls.SfScrollControl.OnValidating(System.ComponentModel.CancelEventArgs)">
            <summary>
            Occurs while invalidating is called for the control.
            </summary>
            <param name="e">The <see cref="T:System.ComponentModel.CancelEventArgs"/> that contains event data.</param>
        </member>
        <member name="M:Syncfusion.WinForms.Controls.SfScrollControl.OnValidated(System.EventArgs)">
            <summary>
            Occurs when the control finished the validating.
            </summary>
            <param name="e">An <see cref="T:System.EventArgs"/> that contains event data.</param>
        </member>
        <member name="M:Syncfusion.WinForms.Controls.SfScrollControl.OnLostFocus(System.EventArgs)">
            <summary>
            Occurs when the control loses focus.
            </summary>
            <param name="e">An <see cref="T:System.EventArgs"/> that contains event data.</param>
        </member>
        <member name="M:Syncfusion.WinForms.Controls.SfScrollControl.OnGotFocus(System.EventArgs)">
            <summary>
            Occurs when the control receives focus.
            </summary>
            <param name="e">An <see cref="T:System.EventArgs"/> that contains event data.</param>
        </member>
        <member name="M:Syncfusion.WinForms.Controls.SfScrollControl.OnControlRemoved(System.Windows.Forms.ControlEventArgs)">
            <summary>
            Occurs when the control is removed from the <see cref="T:System.WindowsForms.Control.ControlCollection"/>.
            </summary>
            <param name="e">The <see cref="T:System.Windows.Forms.ControlEventArgs"/> that contains event data.</param>
        </member>
        <member name="M:Syncfusion.WinForms.Controls.SfScrollControl.OnControlAdded(System.Windows.Forms.ControlEventArgs)">
            <summary>
            Wires the <see cref="T:Control.GotFocus"/> and <see cref="T:Control.LostFocus"/> events of the added control.
            </summary>
            <param name="e">The <see cref="T:System.Windows.Forms.ControlEventArgs"/> that contains event data.</param>
        </member>
        <member name="M:Syncfusion.WinForms.Controls.SfScrollControl.OnSizeChanged(System.EventArgs)">
            <summary>
            Updates the scrollbar locations when the <see cref="T:System.Windows.Forms.Control.Size"/> property value is changed.
            </summary>
            <param name="e">An <see cref="T:System.EventArgs"/> that contains event data.</param>
        </member>
        <member name="M:Syncfusion.WinForms.Controls.SfScrollControl.OnLocationChanged(System.EventArgs)">
            <summary>
            Updates the scrollbar locations when the <see cref="T:System.Windows.Forms.Control.Location"/> property is changed.
            </summary>
            <param name="e">An <see cref="T:System.EventArgs"/> that contains event data.</param>
        </member>
        <member name="M:Syncfusion.WinForms.Controls.SfScrollControl.OnHandleCreated(System.EventArgs)">
            <summary>
            Wire the parent forms event when the <see cref="T:System.Windows.Forms.Control.HandleCreated"/>.
            </summary>
            <param name="e">An <see cref="T:System.EventArgs"/> that contains event data.</param>
        </member>
        <member name="M:Syncfusion.WinForms.Controls.SfScrollControl.OnVisibleChanged(System.EventArgs)">
            <summary>
            Update the scrollbars when the <see cref="T:System.Windows.Forms.Control.VisibleChanged"/> event is occured.
            </summary>
            <param name="e">An <see cref="T:System.EventArgs"/> that contains event data.</param>
        </member>
        <member name="M:Syncfusion.WinForms.Controls.SfScrollControl.OnDragOver(System.Windows.Forms.DragEventArgs)">
            <summary>
            Starts the auto scrolling timer when the mouse is dragging over the control.
            </summary>
            <param name="e">The <see cref="T:System.Windows.Forms.DragEventArgs"/> that contains event data.</param>
        </member>
        <member name="M:Syncfusion.WinForms.Controls.SfScrollControl.OnRightToLeftChanged(System.EventArgs)">
            <summary>
            Occurs on Changing the RTL mode of the control.
            </summary>
            <param name="e">An <see cref="T:System.EventArgs"/> that contains event data.</param>
        </member>
        <member name="M:Syncfusion.WinForms.Controls.SfScrollControl.StartAutoScrollTimer(System.Windows.Forms.Message)">
            <summary>
            Starts the AutoScroll timer.
            </summary>
            <param name="m">The message to be sent to the current control.</param>
        </member>
        <member name="M:Syncfusion.WinForms.Controls.SfScrollControl.StartAutoScrollTimer(System.Windows.Forms.Message,System.TimeSpan)">
            <summary>
            Starts the AutoScroll timer.
            </summary>
            <param name="m">The message to be sent to the current control.</param>
            <param name="autoScrollInterval">The initial interval for sending messages.</param>
        </member>
        <member name="M:Syncfusion.WinForms.Controls.SfScrollControl.CreateAccessibilityInstance">
            <summary>
            Overridden to update the Accessibility object of the SfScrollControl.
            </summary>
            <returns>Returns the accessibility object of the SfScrollControl</returns>
        </member>
        <member name="M:Syncfusion.WinForms.Controls.SfScrollControl.ScrollWindowInvalidate(System.Drawing.Rectangle)">
            <summary>
            Invalidates the Scroll window.
            </summary>
            <param name="r">The Rectangle region that need to be invalidate.</param>
        </member>
        <member name="M:Syncfusion.WinForms.Controls.SfScrollControl.OnTouchPanBegin(System.Drawing.Point)">
            <summary>
            Initially save the current scrollbar values when begin the panning operation.
            </summary>
            <param name="touchBeginPoint">Touch begin position.</param>
            <returns>return true</returns>
        </member>
        <member name="M:Syncfusion.WinForms.Controls.SfScrollControl.OnTouchPan(System.Drawing.Point,System.Boolean)">
            <summary>
            Adjust the horizontal and vertical scrollbar values based on current touch position.
            </summary>
            <param name="currentTouchPoint">The current touch position.</param>
            <param name="isSwipeScroll">Used to decide whether to perform swipe or pan operation.</param>
            <returns>Returns true.</returns>
        </member>
        <member name="M:Syncfusion.WinForms.Controls.SfScrollControl.OnTouchPanEnd(System.Drawing.Point)">
            <summary>
            After panning operation completes save the current scroll bar values.
            </summary>
            <param name="touchEndPoint">The touch end position.</param>
            <returns>Return true.</returns>
        </member>
        <member name="M:Syncfusion.WinForms.Controls.SfScrollControl.OnBeginAutoScroll(Syncfusion.WinForms.Controls.Events.BeginAutoScrollEventArgs)">
            <summary>
            Raises the <see cref="E:Syncfusion.WinForms.Controls.SfScrollControl.BeginAutoScroll"/> event.
            </summary>
            <param name="e">The <see cref="T:Syncfusion.WinForms.Controls.Events.BeginAutoScrollEventArgs"/> that contains the event data.</param>
        </member>
        <member name="M:Syncfusion.WinForms.Controls.SfScrollControl.OnEndAutoScroll(System.EventArgs)">
            <summary>
            Raises the <see cref="E:Syncfusion.WinForms.Controls.SfScrollControl.EndAutoScroll"/> event.
            </summary>
            <param name="e">An <see cref="T:System.EventArgs"/> that contains event data.</param>
        </member>
        <member name="M:Syncfusion.WinForms.Controls.SfScrollControl.OnSetCursor(System.Windows.Forms.Message@)">
            <summary>
            Sets the current mouse cursor. 
            </summary>
            <param name="m">The Window message.</param>
        </member>
        <member name="M:Syncfusion.WinForms.Controls.SfScrollControl.OnHorizontalScrollBarValueChanged">
            <summary>
            Occurs when the horizontal scrollbar value is changed.
            </summary>
        </member>
        <member name="M:Syncfusion.WinForms.Controls.SfScrollControl.OnVerticalScrollBarValueChanged">
            <summary>
            Occurs when the vertical scrollbar value is changed.
            </summary>
        </member>
        <member name="M:Syncfusion.WinForms.Controls.SfScrollControl.OnHorizontalScroll(System.Windows.Forms.ScrollEventArgs)">
            <summary>
            Raises the <see cref="E:Syncfusion.WinForms.Controls.SfScrollControl.Scroll"/> event for horizontal scroll.
            </summary>
            <param name="se">The <see cref="T:System.Windows.Forms.ScrollEventArgs"/> that contains the event data.</param>
        </member>
        <member name="M:Syncfusion.WinForms.Controls.SfScrollControl.OnVerticalScroll(System.Windows.Forms.ScrollEventArgs)">
            <summary>
            Raises the <see cref="E:Syncfusion.WinForms.Controls.SfScrollControl.Scroll"/> event for vertical scroll.
            </summary>
            <param name="se">The <see cref="T:System.Windows.Forms.ScrollEventArgs"/> that contains the event data.</param>
        </member>
        <member name="M:Syncfusion.WinForms.Controls.SfScrollControl.OnWindowScrolled(Syncfusion.WinForms.Controls.Events.ScrollWindowEventArgs)">
            <summary>
            Raises the <see cref="E:Syncfusion.WinForms.Controls.SfScrollControl.WindowScrolled"/> event.
            </summary>
            <param name="e">A <see cref="T:Syncfusion.WinForms.Controls.Events.ScrollWindowEventArgs"/> that contains the event data.</param>
        </member>
        <member name="M:Syncfusion.WinForms.Controls.SfScrollControl.OnWindowScrolling(Syncfusion.WinForms.Controls.Events.ScrollWindowEventArgs)">
            <summary>
            Raises the <see cref="E:Syncfusion.WinForms.Controls.SfScrollControl.WindowScrolling"/> event.
            </summary>
            <param name="e">The <see cref="T:Syncfusion.WinForms.Controls.Events.ScrollWindowEventArgs"/> that contains the event data.</param>
        </member>
        <member name="M:Syncfusion.WinForms.Controls.SfScrollControl.OnControlGotFocus">
            <summary>
            Raises the <see cref="E:System.Windows.Forms.Control.GotFocus"/> event. This method is called when the control
            or any child control gets focus and this control did not have focus before.
            </summary>
        </member>
        <member name="M:Syncfusion.WinForms.Controls.SfScrollControl.OnControlLostFocus">
            <summary>
            Raises the <see cref="E:System.Windows.Forms.Control.LostFocus"/> event. This method is called when the control
            or any child control loses focus and the new focused control is not a child of this control.
            </summary>
        </member>
        <member name="M:Syncfusion.WinForms.Controls.SfScrollControl.MAKELPARAM(System.Int32,System.Int32)">
            <summary>
            Creates a value for use as an lParam parameter in a message. 
            </summary>
            <returns>Returns the LPARAM value.</returns>
            <param name="low">The lower order value.</param>
            <param name="high">The higher order value.</param>
        </member>
        <member name="M:Syncfusion.WinForms.Controls.SfScrollControl.GetScrollValue(Syncfusion.WinForms.Controls.ScrollProperties,System.Int32)">
            <summary>
            Gets the resolved scrollbar value based on the min, max values of the scrollbar.
            </summary>
            <param name="scrollProperties">The ScrollProperties of the scrollbar.</param>
            <param name="value">The value that needs to be resolved.</param>
            <returns>Returns the resolved scrollbar value.</returns>
        </member>
        <member name="M:Syncfusion.WinForms.Controls.SfScrollControl.WiredParentFormEnter(System.Object,System.EventArgs)">
            <summary>
            Occurs when the user is enters to the parent form.
            </summary>
            <param name="sender">An object of the sender.</param>
            <param name="e">An <see cref="T:System.EventArgs"/> that contains event data.</param>
        </member>
        <member name="M:Syncfusion.WinForms.Controls.SfScrollControl.OnVerticalScroll(System.Object,System.Windows.Forms.ScrollEventArgs)">
            <summary>
            Raises the <see cref="P:Syncfusion.WinForms.Controls.SfScrollControl.VerticalScroll"/> event.
            </summary>
            <param name="sender">The object of the sender.</param>
            <param name="se">The <see cref="T:System.Windows.Forms.ScrollEventArgs"/> that contains the event data.</param>
        </member>
        <member name="M:Syncfusion.WinForms.Controls.SfScrollControl.OnHorizontalScrollBarValueChanged(System.Object,System.EventArgs)">
            <summary>
            Handles the <see cref="E:Syncfusion.WinForms.Controls.ScrollBarBase.ValueChanged"/> of the horizontal scrollbar.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">An <see cref="T:System.EventArgs"/> that contains the event data.</param>
        </member>
        <member name="M:Syncfusion.WinForms.Controls.SfScrollControl.OnVerticalScrollBarValueChanged(System.Object,System.EventArgs)">
            <summary>
            Handles the <see cref="E:Syncfusion.WinForms.Controls.ScrollBarBase.ValueChanged"/> of the vertical scrollbar.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">An <see cref="T:System.EventArgs"/> that contains the event data.</param>
        </member>
        <member name="M:Syncfusion.WinForms.Controls.SfScrollControl.OnHorizontalScroll(System.Object,System.Windows.Forms.ScrollEventArgs)">
            <summary>
            Raises the <see cref="P:Syncfusion.WinForms.Controls.SfScrollControl.HorizontalScroll"/> event.
            </summary>
            <param name="sender">The object of the sender..</param>
            <param name="se">The <see cref="T:System.Windows.Forms.ScrollEventArgs"/> that contains the event data.</param>
        </member>
        <member name="M:Syncfusion.WinForms.Controls.SfScrollControl.DecodeGesture(System.Windows.Forms.Message@)">
            <summary>
            Decode the touch messages to do corresponding operations
            </summary>
            <param name="msg">windows touch messages</param>
            <returns>Return true when the message properly handled otherwise it will be false</returns>
        </member>
        <member name="M:Syncfusion.WinForms.Controls.SfScrollControl.SetVisibleScrollbars(System.Boolean,System.Boolean)">
            <summary>
            Display or hides the horizontal and vertical auto scrollbars.
            </summary>
            <param name="horiz">True if the horizontal scrollbar should be displayed.</param>
            <param name="vert">True if the vertical scrollbar should be displayed.</param>
        </member>
        <member name="M:Syncfusion.WinForms.Controls.SfScrollControl.RepeatScrollEventTimerElapsed(System.Object,System.EventArgs)">
            <summary>
            Elapse the time for scroll event.
            </summary>
            <param name="source">The object of the sender.</param>
            <param name="e">An <see cref="T:System.EventArgs"/> that contains event data.</param>
        </member>
        <member name="M:Syncfusion.WinForms.Controls.SfScrollControl.ChildGotFocus(System.Object,System.EventArgs)">
            <summary>Occurs when the child control got the focus.</summary>
            <param name="sender">The object of the sender.</param>
            <param name="e">An <see cref="T:System.EventArgs"/> that contains event data.</param>  
        </member>
        <member name="M:Syncfusion.WinForms.Controls.SfScrollControl.ChildLostFocus(System.Object,System.EventArgs)">
            <summary>Occurs when the child lost the focus.</summary>
            <param name="sender">The object of the sender.</param>
            <param name="e">An <see cref="T:System.EventArgs"/> that contains event data.</param>  
        </member>
        <member name="M:Syncfusion.WinForms.Controls.SfScrollControl.RaiseControlGotFocus">
            <summary>
            Sets the focus for the control.
            </summary>
        </member>
        <member name="M:Syncfusion.WinForms.Controls.SfScrollControl.RaiseControlLostFocus">
            <summary>
            Reset the focus for the control.
            </summary>
        </member>
        <member name="M:Syncfusion.WinForms.Controls.SfScrollControl.AdjustSizeGrip">
            <summary>
            Adjust the location of the SizeGrip.
            </summary>
        </member>
        <member name="M:Syncfusion.WinForms.Controls.SfScrollControl.ShouldSerializeStyle">
            <summary>
            Determines whether the Style should be serialized or not.
            </summary>
            <returns>Returns true if the style need to be serialized otherwise return false.</returns>
        </member>
        <member name="M:Syncfusion.WinForms.Controls.SfScrollControl.OnReaderModeScroll(System.Object,Syncfusion.WinForms.Controls.Events.ReaderModeScrollControllerEventArgs)">
            <summary>
            Performs the reader mode mouse scrolling.
            </summary>
            <param name="sender">The object of the sender.</param>
            <param name="e">An <see cref="T:Syncfusion.WinForms.Controls.Events.ReaderModeScrollControllerEventArgs"/> that contains event data.</param>
        </member>
        <member name="M:Syncfusion.WinForms.Controls.SfScrollControl.OnThemeChanged(Syncfusion.WinForms.Core.Events.ThemeChangedEventArgs)">
            <summary>
            Raises the <see cref="E:Syncfusion.WinForms.Controls.SfScrollControl.ThemeChanged"/> event.
            </summary>
            <param name="e">The <see cref="T:Syncfusion.WinForms.Core.Events.ThemeChangedEventArgs"/> that contains event data.</param>
        </member>
        <member name="E:Syncfusion.WinForms.Controls.SfScrollControl.Scroll">
            <summary>
            Occurs when scrolling is performed.
            </summary>        
        </member>
        <member name="E:Syncfusion.WinForms.Controls.SfScrollControl.BeginAutoScroll">
            <summary>
            Occurs when accelerated scrollbar scrolling or mouse drag-scrolling starts.
            </summary>
        </member>
        <member name="E:Syncfusion.WinForms.Controls.SfScrollControl.EndAutoScroll">
            <summary>
            Occurs when the auto scrolling is ends.
            </summary>
        </member>
        <member name="E:Syncfusion.WinForms.Controls.SfScrollControl.WindowScrolled">
            <summary>
            Occurs after the window has been scrolled.
            </summary>
        </member>
        <member name="E:Syncfusion.WinForms.Controls.SfScrollControl.WindowScrolling">
            <summary>
            Occurs while the window is being scrolled.
            </summary>
        </member>
        <member name="E:Syncfusion.WinForms.Controls.SfScrollControl.ThemeChanged">
            <summary>
            Occurs when the ThemeName is changed.
            </summary>
        </member>
        <member name="P:Syncfusion.WinForms.Controls.SfScrollControl.AutoScrollMode">
            <summary>
            Gets or sets the direction for automatic scrolling when the user drags 
            the mouse cursor out of the scrolling area.
            </summary>
        </member>
        <member name="P:Syncfusion.WinForms.Controls.SfScrollControl.VerticalScrollIncrement">
            <summary>
            Gets or sets the multiplier for vertical mouse wheel scrolling.
            </summary>
        </member>
        <member name="P:Syncfusion.WinForms.Controls.SfScrollControl.HorizontalScrollIncrement">
            <summary>
            Gets or sets the multiplier for horizontal mouse wheel scrolling.
            </summary>
        </member>
        <member name="P:Syncfusion.WinForms.Controls.SfScrollControl.VerticalScroll">
            <summary>
            Gets the vertical scrollbar settings of the control.
            </summary>
        </member>
        <member name="P:Syncfusion.WinForms.Controls.SfScrollControl.HorizontalScroll">
            <summary>
            Gets the horizontal scrollbar settings of the control.
            </summary>
        </member>
        <member name="P:Syncfusion.WinForms.Controls.SfScrollControl.AutoScrollBounds">
            <summary>
            Gets or sets a bounds for the auto scrolling. 
            </summary>
        </member>
        <member name="P:Syncfusion.WinForms.Controls.SfScrollControl.AutoScrollMargin">
            <summary>
            Gets or sets a default margins for the scrolling area when the user moves the mouse to the
            margin between InsideScrollBounds and AutoScrollBounds.
            </summary>
        </member>
        <member name="P:Syncfusion.WinForms.Controls.SfScrollControl.Style">
            <summary>
            Gets or sets a style of the ScrollControl components.
            </summary>        
        </member>
        <member name="P:Syncfusion.WinForms.Controls.SfScrollControl.HorizontalScrollBarVisible">
            <summary>
            Gets or sets a value indicating whether the horizontal scroll bar is visible or not.
            </summary>
        </member>
        <member name="P:Syncfusion.WinForms.Controls.SfScrollControl.VerticalScrollBarVisible">
            <summary>
            Gets or sets a value indicating whether the vertical scroll bar is visible or not.
            </summary>
        </member>
        <member name="P:Syncfusion.WinForms.Controls.SfScrollControl.AllowReaderModeScrolling">
            <summary>
            Gets or sets a value indicating whether the reader mode mouse scrolling is enabled or not.
            </summary>
            <remarks>
            Reader mode shows a special scroll origin icon and scrolls the window in a direction and speed relative to the scroll origin.
            </remarks>
        </member>
        <member name="P:Syncfusion.WinForms.Controls.SfScrollControl.IsUpdating">
            <summary>
            Gets a value indicating whether the BeginUpdate() has been called and the painting for a control is suspended.
            </summary>
        </member>
        <member name="P:Syncfusion.WinForms.Controls.SfScrollControl.ClientRectangle">
            <summary>
            Gets the rectangle that represents the client area of the control. 
            </summary>
        </member>
        <member name="P:Syncfusion.WinForms.Controls.SfScrollControl.ClientSize">
            <summary>
            Gets or sets the ClientSize of the control based on the visibility of the scrollbars.
            </summary>
        </member>
        <member name="P:Syncfusion.WinForms.Controls.SfScrollControl.AutoScrollInterval">
            <summary>
            Gets or sets a <see cref="T:System.TimeSpan"/> value for the auto scrolling. 
            </summary>     
        </member>
        <member name="P:Syncfusion.WinForms.Controls.SfScrollControl.AccessibilityEnabled">
            <summary>
            Gets or sets a value indicating whether the accessibility is enabled for the control or not.
            </summary>
        </member>
        <member name="P:Syncfusion.WinForms.Controls.SfScrollControl.ThemeName">
            <summary>
            Gets or sets a name of the theme of the <see cref="T:Syncfusion.WinForms.Controls.SfScrollControl"/>.
            </summary>
        </member>
        <member name="P:Syncfusion.WinForms.Controls.SfScrollControl.CanApplyTheme">
            <summary>
            Gets or sets a value indicating whether the <see cref="T:Syncfusion.WinForms.Controls.SfSkinManager"/> theme should be applied to the control.
            Default value is true.
            </summary>
        </member>
        <member name="P:Syncfusion.WinForms.Controls.SfScrollControl.CanOverrideStyle">
            <summary>
            Gets or sets a value indicating whether control elements styles can be overridden by theme style settings.
            </summary>
        </member>
        <member name="P:Syncfusion.WinForms.Controls.SfScrollControl.Syncfusion#WinForms#Core#Styles#IThemeProvider#ControlName">
            <summary>
            Gets the name of the control.
            </summary>        
        </member>
        <member name="P:Syncfusion.WinForms.Controls.SfScrollControl.Syncfusion#WinForms#Core#Styles#IThemeProvider#ActiveThemeName">
            <summary>
            Gets or sets the name of the <see cref="T:Syncfusion.WinForms.Controls.SfSkinManager"/> theme.
            </summary>
        </member>
        <member name="P:Syncfusion.WinForms.Controls.SfScrollControl.OverrideCursor">
            <summary>
            Gets or sets a cursor that needs to be applied for the scroll control.
            </summary>
        </member>
        <member name="P:Syncfusion.WinForms.Controls.SfScrollControl.AutoScrollTimerEnable">
            <summary>
            Gets a value indicating whether the control is currently scrolling and the user drags
            the mouse outside the inner scrolling area.
            </summary>                
        </member>
        <member name="P:Syncfusion.WinForms.Controls.SfScrollControl.CreateParams">
            <summary>
            Changes <see cref="P:System.Windows.Forms.CreateParams.Style"/> RTL extended styles and also consider the control's
            <see cref="!:SfScrollControl.BorderStyle"/> setting.
            </summary>       
        </member>
        <member name="P:Syncfusion.WinForms.Controls.SfScrollControl.AllowAutoScroll">
            <summary>
            Gets or sets a value indicating whether the AutoScrolling can be enabled.
            </summary>
        </member>
        <member name="P:Syncfusion.WinForms.Controls.SfScrollControl.ActiveThemeName">
            <summary>
            Gets or sets the name of the <see cref="T:Syncfusion.WinForms.Controls.SfSkinManager"/> theme.
            </summary>
        </member>
        <member name="P:Syncfusion.WinForms.Controls.SfScrollControl.InsideScrollBounds">
            <summary>
            Gets the inside scrolling area. The control will scroll if the user drags
            the mouse outside this area.
            </summary>
        </member>
        <member name="T:Syncfusion.WinForms.Controls.SizeGrip">
            <summary>
            Represents the class that provides the method for drawing the size grip.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Controls.SizeGrip.style">
            <summary>
            The default style info of the size grip.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Controls.SizeGrip.sfScrollControl">
            <summary>
            The attached SfScrollControl;
            </summary>
        </member>
        <member name="M:Syncfusion.WinForms.Controls.SizeGrip.#ctor(System.Windows.Forms.Control)">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.WinForms.Controls.SizeGrip"/> class.
            </summary>
            <param name="parent">The control that need to be display the size grip.</param>
        </member>
        <member name="M:Syncfusion.WinForms.Controls.SizeGrip.#ctor(System.Windows.Forms.Control,Syncfusion.WinForms.Controls.Styles.ScrollBarSizeGripStyleInfo)">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.WinForms.Controls.SizeGrip"/> class.
            </summary>
            <param name="parent">The control that need to be display the size grip.</param>
            <param name="style">The <see cref="T:Syncfusion.WinForms.Controls.Styles.ScrollBarSizeGripStyleInfo"/> of the control.</param>
        </member>
        <member name="M:Syncfusion.WinForms.Controls.SizeGrip.#ctor(Syncfusion.WinForms.Controls.SfScrollControl,Syncfusion.WinForms.Controls.Styles.ScrollBarSizeGripStyleInfo)">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.WinForms.Controls.SizeGrip"/> class.
            </summary>
            <param name="parent">The control that need to be display the size grip.</param>
            <param name="style">The <see cref="T:Syncfusion.WinForms.Controls.Styles.ScrollBarSizeGripStyleInfo"/> of the control.</param>
        </member>
        <member name="M:Syncfusion.WinForms.Controls.SizeGrip.GetStyle">
            <summary>
            Gets the style of the <see cref="T:Syncfusion.WinForms.Controls.Styles.ScrollBarSizeGripStyleInfo"/>.
            </summary>
            <returns>Returns the ScrollControl' size grip style.</returns>
        </member>
        <member name="M:Syncfusion.WinForms.Controls.SizeGrip.OnPaint(System.Windows.Forms.PaintEventArgs)">
            <summary>
            Overridden to draw the size grip of the control.
            </summary>
            <param name="e">An <see cref="T:System.Windows.Forms.PaintEventArgs"/> that contains event data.</param>
        </member>
        <member name="M:Syncfusion.WinForms.Controls.SizeGrip.DrawSizeGrip(System.Drawing.Graphics,System.Drawing.Rectangle,Syncfusion.WinForms.Controls.Styles.ScrollBarSizeGripStyleInfo)">
            <summary>
            Draws the size grip.
            </summary>
            <param name="g">The <see cref="T:System.Drawing.Graphics"/> of the control.</param>
            <param name="rect">The rectangle region that need to be draw the size grip.</param>
            <param name="sizeGripStyle">The style information of the SizeGrip.</param>
        </member>
        <member name="P:Syncfusion.WinForms.Controls.SizeGrip.Style">
            <summary>
            Gets or sets the style for drawing the size grip.
            </summary>
        </member>
        <member name="T:Syncfusion.WinForms.Controls.Styles.ScrollBarStyleInfo">
            <summary>
            Implements the functionalities that provides a StyleInfoBase object for ScrollBarStyleInfo properties in a ScrollBar. 
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Controls.Styles.ScrollBarStyleInfo.defaultScrollBarStyleInfo">
            <summary>
            Holds the default style info of the scrollbar.
            </summary>
        </member>
        <member name="M:Syncfusion.WinForms.Controls.Styles.ScrollBarStyleInfo.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.WinForms.Controls.Styles.ScrollBarStyleInfo"/> class.
            </summary>
        </member>
        <member name="M:Syncfusion.WinForms.Controls.Styles.ScrollBarStyleInfo.#ctor(Syncfusion.WinForms.Core.Styles.StyleInfoSubObjectIdentity)">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.WinForms.Controls.Styles.ScrollBarStyleInfo"/> class.
            </summary>
            <param name="identity">
            A <see cref="T:Syncfusion.WinForms.Core.Styles.StyleInfoSubObjectIdentity"/> that holds the identity for this
            <see cref="T:Syncfusion.WinForms.Controls.Styles.ScrollBarStyleInfo"/>.
            </param> 
        </member>
        <member name="M:Syncfusion.WinForms.Controls.Styles.ScrollBarStyleInfo.#ctor(Syncfusion.WinForms.Core.Styles.StyleInfoSubObjectIdentity,Syncfusion.WinForms.Controls.Styles.ScrollBarStyleInfoStore)">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.WinForms.Controls.Styles.ScrollBarStyleInfo"/> class.
            </summary>
            <param name="identity">A <see cref="T:Syncfusion.WinForms.Core.Styles.StyleInfoSubObjectIdentity"/> that holds the identity for this <see cref="T:Syncfusion.WinForms.Core.Styles.StyleInfoBase"/>.</param>
            <param name="store">A <see cref="T:Syncfusion.WinForms.Core.Styles.StyleInfoStore"/> that holds data for this object.
            All changes in this style object will be saved in the <see cref="T:Syncfusion.WinForms.Core.Styles.StyleInfoStore"/> object.
            </param>
        </member>
        <member name="M:Syncfusion.WinForms.Controls.Styles.ScrollBarStyleInfo.MakeCopy(Syncfusion.WinForms.Core.Styles.StyleInfoBase,Syncfusion.WinForms.Core.Styles.StyleInfoProperty)">
            <summary>
            Makes an exact copy of the current object.
            </summary>
            <param name="newOwner">The new owner style object for the copied object.</param>
            <param name="sip">The identifier for this object.</param>
            <returns>A copy of the current object registered with the new owner style object.</returns>
        </member>
        <member name="M:Syncfusion.WinForms.Controls.Styles.ScrollBarStyleInfo.GetDefaultStyle">
            <summary>
            Gets the default value for the ScrollBarStyleInfo. 
            </summary>
            <returns>Returns the default value for the ScrollBarStyleInfo object.</returns>
        </member>
        <member name="M:Syncfusion.WinForms.Controls.Styles.ScrollBarStyleInfo.ShouldSerializeArrowButtonPressedForeColor">
            <summary>
                Determines whether StackedHeaderStyle has been modified and its contents should be serialized at design-time.
            </summary>
            <returns>True if contents were changed; False otherwise.</returns>
        </member>
        <member name="P:Syncfusion.WinForms.Controls.Styles.ScrollBarStyleInfo.Default">
            <summary>
            Gets the default style for the ScrollBarStyleInfo object.
            </summary>
        </member>
        <member name="P:Syncfusion.WinForms.Controls.Styles.ScrollBarStyleInfo.ArrowButtonBackColor">
            <summary>
            Gets or sets the background color for the arrow button.
            </summary>
            <remarks>
            This is applicable for both the Min and Max buttons.
            </remarks>
        </member>
        <member name="P:Syncfusion.WinForms.Controls.Styles.ScrollBarStyleInfo.HasArrowButtonBackColor">
            <summary>
            Gets a value indicating whether the <see cref="P:Syncfusion.WinForms.Controls.Styles.ScrollBarStyleInfo.ArrowButtonBackColor"/> property has been modified for the current object.
            </summary>
        </member>
        <member name="P:Syncfusion.WinForms.Controls.Styles.ScrollBarStyleInfo.ArrowButtonHoverBackColor">
            <summary>
            Gets or sets the background color for the arrow button in hovering state.
            </summary>
        </member>
        <member name="P:Syncfusion.WinForms.Controls.Styles.ScrollBarStyleInfo.HasArrowButtonHoverBackColor">
            <summary>
            Gets a value indicating whether the <see cref="P:Syncfusion.WinForms.Controls.Styles.ScrollBarStyleInfo.ArrowButtonHoverBackColor"/> property has been modified for the current object.
            </summary>
        </member>
        <member name="P:Syncfusion.WinForms.Controls.Styles.ScrollBarStyleInfo.ArrowButtonPressedBackColor">
            <summary>
            Gets or sets the background color for the arrow button in pressed state.
            </summary>
        </member>
        <member name="P:Syncfusion.WinForms.Controls.Styles.ScrollBarStyleInfo.HasArrowButtonPressedBackColor">
            <summary>
            Gets a value indicating whether the <see cref="P:Syncfusion.WinForms.Controls.Styles.ScrollBarStyleInfo.ArrowButtonPressedBackColor"/> property has been modified for the current object.
            </summary>
        </member>
        <member name="P:Syncfusion.WinForms.Controls.Styles.ScrollBarStyleInfo.ArrowButtonForeColor">
            <summary>
            Gets or sets the foreground color for the arrow button.
            </summary>
            <remarks>
            This will set the background color for the arrow which is shown in the arrow button.
            This is applicable for both the Min and Max buttons.
            </remarks>
        </member>
        <member name="P:Syncfusion.WinForms.Controls.Styles.ScrollBarStyleInfo.HasArrowButtonForeColor">
            <summary>
            Gets a value indicating whether the <see cref="P:Syncfusion.WinForms.Controls.Styles.ScrollBarStyleInfo.ArrowButtonForeColor"/> property has been modified for the current object.
            </summary>
        </member>
        <member name="P:Syncfusion.WinForms.Controls.Styles.ScrollBarStyleInfo.ArrowButtonHoverForeColor">
            <summary>
            Gets or sets the foreground color for the arrow button in hovering state.
            </summary>
        </member>
        <member name="P:Syncfusion.WinForms.Controls.Styles.ScrollBarStyleInfo.HasArrowButtonHoverForeColor">
            <summary>
            Gets a value indicating whether the <see cref="P:Syncfusion.WinForms.Controls.Styles.ScrollBarStyleInfo.ArrowButtonHoverForeColor"/> property has been modified for the current object.
            </summary>
        </member>
        <member name="P:Syncfusion.WinForms.Controls.Styles.ScrollBarStyleInfo.ArrowButtonPressedForeColor">
            <summary>
            Gets or sets the foreground color for the arrow button in pressed state.
            </summary>
        </member>
        <member name="P:Syncfusion.WinForms.Controls.Styles.ScrollBarStyleInfo.HasArrowButtonPressedForeColor">
            <summary>
            Gets a value indicating whether the <see cref="P:Syncfusion.WinForms.Controls.Styles.ScrollBarStyleInfo.ArrowButtonPressedForeColor"/> property has been modified for the current object.
            </summary>
        </member>
        <member name="P:Syncfusion.WinForms.Controls.Styles.ScrollBarStyleInfo.ScrollBarBackColor">
            <summary>
            Gets or sets the background color for the scrollbar.
            </summary>
        </member>
        <member name="P:Syncfusion.WinForms.Controls.Styles.ScrollBarStyleInfo.HasScrollBarBackColor">
            <summary>
            Gets a value indicating whether the <see cref="P:Syncfusion.WinForms.Controls.Styles.ScrollBarStyleInfo.ScrollBarBackColor"/> property has been modified for the current object.
            </summary>
        </member>
        <member name="P:Syncfusion.WinForms.Controls.Styles.ScrollBarStyleInfo.ThumbColor">
            <summary>
            Gets or sets the background color for the thumb.
            </summary>
        </member>
        <member name="P:Syncfusion.WinForms.Controls.Styles.ScrollBarStyleInfo.HasThumbColor">
            <summary>
            Gets a value indicating whether the <see cref="P:Syncfusion.WinForms.Controls.Styles.ScrollBarStyleInfo.ThumbColor"/> property has been modified for the current object.
            </summary>
        </member>
        <member name="P:Syncfusion.WinForms.Controls.Styles.ScrollBarStyleInfo.ThumbHoverColor">
            <summary>
            Gets or sets the background color for the thumb in hovering state.
            </summary>
        </member>
        <member name="P:Syncfusion.WinForms.Controls.Styles.ScrollBarStyleInfo.HasThumbHoverColor">
            <summary>
            Gets a value indicating whether the <see cref="P:Syncfusion.WinForms.Controls.Styles.ScrollBarStyleInfo.ThumbHoverColor"/> property has been modified for the current object.
            </summary>
        </member>
        <member name="P:Syncfusion.WinForms.Controls.Styles.ScrollBarStyleInfo.ThumbPressedColor">
            <summary>
            Gets or sets the background color for the thumb in pressed state.
            </summary>
        </member>
        <member name="P:Syncfusion.WinForms.Controls.Styles.ScrollBarStyleInfo.HasThumbPressedColor">
            <summary>
            Gets a value indicating whether the <see cref="P:Syncfusion.WinForms.Controls.Styles.ScrollBarStyleInfo.ThumbPressedColor"/> property has been modified for the current object.
            </summary>
        </member>
        <member name="P:Syncfusion.WinForms.Controls.Styles.ScrollBarStyleInfo.ThumbWidth">
            <summary>
            Gets or sets the width of the thumb.
            </summary>
        </member>
        <member name="P:Syncfusion.WinForms.Controls.Styles.ScrollBarStyleInfo.HasThumbWidth">
            <summary>
            Gets a value indicating whether the <see cref="P:Syncfusion.WinForms.Controls.Styles.ScrollBarStyleInfo.ThumbWidth"/> property has been modified for the current object.
            </summary>
        </member>
        <member name="P:Syncfusion.WinForms.Controls.Styles.ScrollBarStyleInfo.ArrowButtonBorderColor">
            <summary>
            Gets or sets the border background color for the arrow button.
            </summary>
        </member>
        <member name="P:Syncfusion.WinForms.Controls.Styles.ScrollBarStyleInfo.HasArrowButtonBorderColor">
            <summary>
            Gets a value indicating whether the <see cref="P:Syncfusion.WinForms.Controls.Styles.ScrollBarStyleInfo.ArrowButtonBorderColor"/> property has been modified for the current object.
            </summary>
        </member>
        <member name="P:Syncfusion.WinForms.Controls.Styles.ScrollBarStyleInfo.ThumbBorderColor">
            <summary>
            Gets or sets a value for ThumbBorderColor.
            </summary>
        </member>
        <member name="P:Syncfusion.WinForms.Controls.Styles.ScrollBarStyleInfo.HasThumbBorderColor">
            <summary>
            Gets a value indicating whether the <see cref="P:Syncfusion.WinForms.Controls.Styles.ScrollBarStyleInfo.ThumbBorderColor"/> property has been modified for the current object.
            </summary>
        </member>
        <member name="P:Syncfusion.WinForms.Controls.Styles.ScrollBarStyleInfo.ThumbDisabledColor">
            <summary>
            Gets or sets a value for ThumbDisabledColor.
            </summary>  
        </member>
        <member name="P:Syncfusion.WinForms.Controls.Styles.ScrollBarStyleInfo.HasThumbDisabledColor">
            <summary>
            Gets a value indicating whether the <see cref="P:Syncfusion.WinForms.Controls.Styles.ScrollBarStyleInfo.ThumbDisabledColor"/> property has been modified for the current object.
            </summary>
        </member>
        <member name="P:Syncfusion.WinForms.Controls.Styles.ScrollBarStyleInfo.ArrowButtonDisabledForeColor">
            <summary>
            Gets or sets the value for ArrowButtonDisabledForeColor.
            </summary>
        </member>
        <member name="P:Syncfusion.WinForms.Controls.Styles.ScrollBarStyleInfo.HasArrowButtonDisabledForeColor">
            <summary>
            Gets a value indicating whether the <see cref="P:Syncfusion.WinForms.Controls.Styles.ScrollBarStyleInfo.ArrowButtonDisabledForeColor"/> property has been modified for the current object.
            </summary>
        </member>
        <member name="P:Syncfusion.WinForms.Controls.Styles.ScrollBarStyleInfo.ArrowButtonDisabledBackColor">
            <summary>
            Gets or sets the value for ArrowButtonDisabledBackColor.
            </summary>
        </member>
        <member name="P:Syncfusion.WinForms.Controls.Styles.ScrollBarStyleInfo.HasArrowButtonDisabledBackColor">
            <summary>
            Gets a value indicating whether the <see cref="P:Syncfusion.WinForms.Controls.Styles.ScrollBarStyleInfo.ArrowButtonDisabledBackColor"/> property has been modified for the current object.
            </summary>
        </member>
        <member name="T:Syncfusion.WinForms.Controls.Styles.ScrollBarStyleInfoStore">
            <summary>
            Contains the collection of <see cref="T:Syncfusion.WinForms.Controls.Styles.ScrollBarStyleInfo"/> properties.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Controls.Styles.ScrollBarStyleInfoStore.ArrowButtonBackColorProperty">
            <summary>
            Gets the value for the ArrowButton BackColor property.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Controls.Styles.ScrollBarStyleInfoStore.ArrowButtonHoverBackColorProperty">
            <summary>
            Gets the value for the ArrowButton hover BackColor property.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Controls.Styles.ScrollBarStyleInfoStore.ArrowButtonPressedBackColorProperty">
            <summary>
            Gets the value for the ArrowButton pressed BackColor properly.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Controls.Styles.ScrollBarStyleInfoStore.ArrowButtonForeColorProperty">
            <summary>
            Gets the value for the ArrowButton ForeColor property.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Controls.Styles.ScrollBarStyleInfoStore.ArrowButtonHoverForeColorProperty">
            <summary>
            Gets the value for the ArrowButton hover ForeColor property.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Controls.Styles.ScrollBarStyleInfoStore.ArrowButtonPressedForeColorProperty">
            <summary>
            Gets the value for the ArrowButton pressed ForeColor property.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Controls.Styles.ScrollBarStyleInfoStore.ScrollBarBackColorProperty">
            <summary>
            Gets the value for the ScrollBarBackColor property.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Controls.Styles.ScrollBarStyleInfoStore.ThumbColorProperty">
            <summary>
            Gets the value for the ThumbColor property.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Controls.Styles.ScrollBarStyleInfoStore.ThumbHoverColorProperty">
            <summary>
            Gets the value for the ThumbHoverColor property.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Controls.Styles.ScrollBarStyleInfoStore.ThumbPressedColorProperty">
            <summary>
            Gets the value for the ThumbPressedColor property.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Controls.Styles.ScrollBarStyleInfoStore.ThumbWidthProperty">
            <summary>
            Gets the value for the ThumbWidth property.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Controls.Styles.ScrollBarStyleInfoStore.ArrowButtonBorderColorProperty">
            <summary>
            Gets the value for the ArrowButtonBorderColor property.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Controls.Styles.ScrollBarStyleInfoStore.ThumbBorderColorProperty">
            <summary>
            Gets the value for the ThumbBorderColor property.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Controls.Styles.ScrollBarStyleInfoStore.ThumbDisabledColorProperty">
            <summary>
            Gets the value for ThumbDisabledColor property.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Controls.Styles.ScrollBarStyleInfoStore.ArrowButtonDisabledForeColorProperty">
            <summary>
            Gets the value for ArrowButtonDisabledForeColor property.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Controls.Styles.ScrollBarStyleInfoStore.ArrowButtonDisabledBackColorProperty">
            <summary>
            Gets the value for ArrowButtonDisabledBackColor property.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Controls.Styles.ScrollBarStyleInfoStore.sd">
            <summary>
            Holds the static data for the Scrollbar style info store.
            </summary>
        </member>
        <member name="M:Syncfusion.WinForms.Controls.Styles.ScrollBarStyleInfoStore.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.WinForms.Controls.Styles.ScrollBarStyleInfoStore"/> class.
            </summary>
        </member>
        <member name="M:Syncfusion.WinForms.Controls.Styles.ScrollBarStyleInfoStore.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.WinForms.Controls.Styles.ScrollBarStyleInfoStore"/> class from a serialization stream.
            </summary>
            <param name="info">An object that holds all the data needed to serialize or deserialize this instance.</param>
            <param name="context">Describes the source and destination of the serialized stream specified by info. </param>
        </member>
        <member name="M:Syncfusion.WinForms.Controls.Styles.ScrollBarStyleInfoStore.Clone">
            <override/>
            <summary>
            Creates an exact copy of the current object.
            </summary>
            <returns>Copied object.</returns>
        </member>
        <member name="M:Syncfusion.WinForms.Controls.Styles.ScrollBarStyleInfoStore.GetStaticData">
            <summary>
            Initializes the <see cref="T:Syncfusion.WinForms.Core.Styles.StaticData"/>, if <see cref="F:Syncfusion.WinForms.Controls.Styles.ScrollBarStyleInfoStore.sd"/> is null.
            </summary>
            <returns><see cref="T:Syncfusion.WinForms.Core.Styles.StaticData"/></returns>
        </member>
        <member name="P:Syncfusion.WinForms.Controls.Styles.ScrollBarStyleInfoStore.StaticDataStore">
            <summary>
            Provides the static data of the ScrollBarStyleInfo.
            </summary>
        </member>
        <member name="T:Syncfusion.WinForms.Controls.Styles.ScrollerVisualStyle">
            <summary>
            Contains the list of properties that are used to customize the appearance of the scroll control.
            </summary>
            <remarks>
            This contains the elements that are available in the scroll control. i.e. Horizontal scrollbar, Vertical scrol bar and SizeGripper.
            </remarks>
        </member>
        <member name="F:Syncfusion.WinForms.Controls.Styles.ScrollerVisualStyle.defaultStyle">
            <summary>
            It contains the value of the <see cref="!:Syncfusion.WinForms.Controls.ScrollerVisualStyle"/> property.
            </summary>
        </member>
        <member name="M:Syncfusion.WinForms.Controls.Styles.ScrollerVisualStyle.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.WinForms.Controls.Styles.ScrollerVisualStyle"/> class.
            </summary>
        </member>
        <member name="M:Syncfusion.WinForms.Controls.Styles.ScrollerVisualStyle.#ctor(Syncfusion.WinForms.Controls.Styles.ScrollerVisualStyleInfoStore)">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.WinForms.Controls.Styles.ScrollerVisualStyle"/> class.
            </summary>
            <param name="store">A <see cref="T:Syncfusion.WinForms.Controls.Styles.ScrollerVisualStyleInfoStore"/> that holds data for this object.
            All changes in this style object will be saved in the <see cref="T:Syncfusion.WinForms.Controls.Styles.ScrollerVisualStyleInfoStore"/> object.
            </param>
        </member>
        <member name="M:Syncfusion.WinForms.Controls.Styles.ScrollerVisualStyle.#ctor(Syncfusion.WinForms.Core.Styles.StyleInfoSubObjectIdentity,Syncfusion.WinForms.Controls.Styles.ScrollerVisualStyleInfoStore)">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.WinForms.Controls.Styles.ScrollerVisualStyle"/> class.
            </summary>
            <param name="identity">A <see cref="T:Syncfusion.WinForms.Core.Styles.StyleInfoSubObjectIdentity"/> that holds the identity for this <see cref="T:Syncfusion.WinForms.Core.Styles.VisualStyleInfoStore"/>.</param>
            <param name="store">A <see cref="T:Syncfusion.WinForms.Controls.Styles.ScrollerVisualStyleInfoStore"/> that holds data for this object.
            All changes in this style object will be saved in the <see cref="T:Syncfusion.WinForms.Controls.Styles.ScrollerVisualStyleInfoStore"/> object.
            </param>
        </member>
        <member name="M:Syncfusion.WinForms.Controls.Styles.ScrollerVisualStyle.#ctor(System.Windows.Forms.Control)">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.WinForms.Controls.Styles.ScrollerVisualStyle"/> class.
            </summary>
            <param name="control">
            A <see cref="T:System.Windows.Forms.Control"/> to create the identity for ScrollBars.
            </param>
        </member>
        <member name="M:Syncfusion.WinForms.Controls.Styles.ScrollerVisualStyle.ShouldSerializeHorizontalScrollBar">
            <summary>
            Determines whether HorizontalScrollBar has been modified and its contents should be serialized at design-time.
            </summary>
            <returns>True if contents were changed; False otherwise.</returns>
        </member>
        <member name="M:Syncfusion.WinForms.Controls.Styles.ScrollerVisualStyle.ShouldSerializeVerticalScrollBar">
            <summary>
            Determines whether VerticalScrollBar has been modified and its contents should be serialized at design-time.
            </summary>
            <returns>True if contents were changed; False otherwise.</returns>
        </member>
        <member name="M:Syncfusion.WinForms.Controls.Styles.ScrollerVisualStyle.CreateSubObjectIdentity(Syncfusion.WinForms.Core.Styles.StyleInfoProperty)">
            <summary>
            Override this method to create a product-specific identity object for a sub object.
            </summary>
            <returns>An identity object for a sub object of this style.</returns>
            <example>
            The following code is an example how scroll bar creates ScrollerVisualStyleInfoSubObjectIdentity:
            <code lange="C#">
            public override StyleInfoSubObjectIdentity CreateSubObjectIdentity(StyleInfoProperty sip)
            {
            	return new ScrollerVisualStyleInfoSubObjectIdentity(this, sip);
            }
            </code>
            </example>
            <param name="sip">The <see cref="T:Syncfusion.WinForms.Core.Styles.StyleInfoProperty"/>.</param>
        </member>
        <member name="M:Syncfusion.WinForms.Controls.Styles.ScrollerVisualStyle.GetDefaultStyle">
            <summary>
            Provide the default style of the <see cref="T:Syncfusion.WinForms.Controls.Styles.ScrollerVisualStyle"/>.
            </summary>
            <returns>Default style object.</returns>
        </member>
        <member name="M:Syncfusion.WinForms.Controls.Styles.ScrollerVisualStyle.Dispose(System.Boolean)">
            <summary>
            Disposes the unused resources.
            </summary>
            <param name="disposing">Specifies whether to dispose both managed and unmanaged resources or only the unmanaged resources.</param>
        </member>
        <member name="M:Syncfusion.WinForms.Controls.Styles.ScrollerVisualStyle.ShouldSerializeSizeGrip">
            <summary>
            Determines whether SizeGrip has been modified and its contents should be serialized at design-time.
            </summary>
            <returns>True if contents were changed; False otherwise.</returns>
        </member>
        <member name="P:Syncfusion.WinForms.Controls.Styles.ScrollerVisualStyle.DefaultStyle">
            <summary>
            Gets the default style of the <see cref="T:Syncfusion.WinForms.Controls.Styles.ScrollerVisualStyle"/>.
            </summary>
        </member>
        <member name="P:Syncfusion.WinForms.Controls.Styles.ScrollerVisualStyle.HorizontalScrollBar">
            <summary>
            Gets or sets the <see cref="T:Syncfusion.WinForms.Controls.Styles.ScrollBarStyleInfo"/> for the horizontal scrollbar of the scroll control.
            </summary>
        </member>
        <member name="P:Syncfusion.WinForms.Controls.Styles.ScrollerVisualStyle.VerticalScrollBar">
            <summary>
            Gets or sets the <see cref="T:Syncfusion.WinForms.Controls.Styles.ScrollBarStyleInfo"/> for the vertical scrollbar of the scroll control.
            </summary>
        </member>
        <member name="P:Syncfusion.WinForms.Controls.Styles.ScrollerVisualStyle.SizeGrip">
            <summary>
            Gets or sets the <see cref="T:Syncfusion.WinForms.Controls.Styles.ScrollBarSizeGripStyleInfo"/> for the size grip of the scroll control.
            </summary>
        </member>
        <member name="T:Syncfusion.WinForms.Controls.Styles.ScrollerVisualStyleInfoSubObjectIdentity">
            <summary>
            Defines a class that provides style identity information for nested objects of the VisualStyleInfo class of the control.
            </summary>
        </member>
        <member name="M:Syncfusion.WinForms.Controls.Styles.ScrollerVisualStyleInfoSubObjectIdentity.#ctor(Syncfusion.WinForms.Core.Styles.StyleInfoBase,Syncfusion.WinForms.Core.Styles.StyleInfoProperty)">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.WinForms.Controls.Styles.ScrollerVisualStyleInfoSubObjectIdentity"/> class and associates it with a specified.
            </summary>
            <param name="owner">The <see cref="!:Syncfusion.Styles.StyleInfoBase"/> that owns this sub-object.</param>
            <param name="sip">The <see cref="!:Syncfusion.Styles.StyleInfoProperty"/> descriptor for this expandable sub-object.</param>
        </member>
        <member name="T:Syncfusion.WinForms.Controls.Styles.ScrollerVisualStyleInfoStore">
            <summary>
            Provides storage for the <see cref="T:Syncfusion.WinForms.Controls.Styles.ScrollerVisualStyleInfoStore"/> object.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Controls.Styles.ScrollerVisualStyleInfoStore.HorizontalScrollBarProperty">
            <summary>
            Provides information about the <see cref="P:Syncfusion.WinForms.Controls.Styles.ScrollerVisualStyle.HorizontalScrollBar"/> property.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Controls.Styles.ScrollerVisualStyleInfoStore.VerticalScrollBarProperty">
            <summary>
            Provides information about the <see cref="P:Syncfusion.WinForms.Controls.Styles.ScrollerVisualStyle.VerticalScrollBar"/> property.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Controls.Styles.ScrollerVisualStyleInfoStore.SizeGripProperty">
            <summary>
            Provides information about the <see cref="P:Syncfusion.WinForms.Controls.Styles.ScrollerVisualStyle.SizeGrip"/> property.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Controls.Styles.ScrollerVisualStyleInfoStore.staticData">
            <summary>
            It contains the value of the <see cref="P:Syncfusion.WinForms.Controls.Styles.FormStyleInfoStore.StaticDataStore"/> property value.
            </summary>
        </member>
        <member name="M:Syncfusion.WinForms.Controls.Styles.ScrollerVisualStyleInfoStore.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.WinForms.Controls.Styles.ScrollerVisualStyleInfoStore"/> class.
            </summary>
        </member>
        <member name="M:Syncfusion.WinForms.Controls.Styles.ScrollerVisualStyleInfoStore.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.WinForms.Controls.Styles.ScrollerVisualStyleInfoStore"/> class from a serialization stream.
            </summary>
            <param name="info">An object that holds all the data needed to serialize or deserialize this instance.</param>
            <param name="context">Describes the source and destination of the serialized stream specified by info. </param>
        </member>
        <member name="M:Syncfusion.WinForms.Controls.Styles.ScrollerVisualStyleInfoStore.GetStaticData">
            <summary>
            Initializes the <see cref="T:Syncfusion.WinForms.Core.Styles.StaticData"/>, if <see cref="F:Syncfusion.WinForms.Controls.Styles.ScrollerVisualStyleInfoStore.staticData"/> is null.
            </summary>
            <returns><see cref="T:Syncfusion.WinForms.Core.Styles.StaticData"/></returns>
        </member>
        <member name="P:Syncfusion.WinForms.Controls.Styles.ScrollerVisualStyleInfoStore.StaticDataStore">
            <summary>
            Gets the static data value of the <see cref="T:Syncfusion.WinForms.Controls.Styles.ScrollerVisualStyle"/> class.
            </summary>
        </member>
        <member name="T:Syncfusion.WinForms.Controls.Styles.ScrollBarSizeGripStyleInfoStore">
            <summary>
            Contains the static data of the SizeGripStyleInfo class.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Controls.Styles.ScrollBarSizeGripStyleInfoStore.ForeColorProperty">
            <summary>
            Gets the value of ForeColor property.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Controls.Styles.ScrollBarSizeGripStyleInfoStore.BackColorProperty">
            <summary>
            Gets the value of BackColor property.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Controls.Styles.ScrollBarSizeGripStyleInfoStore.ShowResizeGripperProperty">
            <summary>
            Gets the value of the ShowResizeGripper property.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Controls.Styles.ScrollBarSizeGripStyleInfoStore.sd">
            <summary>
            Holds the static data of the size grip style info.
            </summary>
        </member>
        <member name="M:Syncfusion.WinForms.Controls.Styles.ScrollBarSizeGripStyleInfoStore.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.WinForms.Controls.Styles.ScrollBarSizeGripStyleInfoStore"/> class.
            </summary>
        </member>
        <member name="M:Syncfusion.WinForms.Controls.Styles.ScrollBarSizeGripStyleInfoStore.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.WinForms.Controls.Styles.ScrollBarSizeGripStyleInfoStore"/> class from a serialization stream.
            </summary>
            <param name="info">An object that holds all the data needed to serialize or deserialize this instance.</param>
            <param name="context">Describes the source and destination of the serialized stream specified by info. </param>
        </member>
        <member name="M:Syncfusion.WinForms.Controls.Styles.ScrollBarSizeGripStyleInfoStore.Clone">
            <override/>
            <summary>
            Creates an exact copy of the current object.
            </summary>
            <returns>Copied object.</returns>
        </member>
        <member name="M:Syncfusion.WinForms.Controls.Styles.ScrollBarSizeGripStyleInfoStore.GetStaticData">
            <summary>
            Initializes the <see cref="T:Syncfusion.WinForms.Core.Styles.StaticData"/>, if <see cref="F:Syncfusion.WinForms.Controls.Styles.ScrollBarSizeGripStyleInfoStore.sd"/> is null.
            </summary>
            <returns><see cref="T:Syncfusion.WinForms.Core.Styles.StaticData"/></returns>
        </member>
        <member name="P:Syncfusion.WinForms.Controls.Styles.ScrollBarSizeGripStyleInfoStore.StaticDataStore">
            <summary>
            Gets the static data for the SizeGripStyleInfo. 
            </summary>
        </member>
        <member name="T:Syncfusion.WinForms.Controls.Styles.ScrollBarStyleInfoIdentity">
            <summary>
            Implements the class that provide an identity information of <see cref="T:Syncfusion.WinForms.Controls.Styles.ScrollBarStyleInfo"/> using 
            <see cref="T:Syncfusion.WinForms.Core.Styles.StyleInfoSubObjectIdentity"/>.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Controls.Styles.ScrollBarStyleInfoIdentity.sfScrollControl">
            <summary>
            Maintains the SfScrollContol for create the identity. 
            </summary>
        </member>
        <member name="M:Syncfusion.WinForms.Controls.Styles.ScrollBarStyleInfoIdentity.#ctor(System.Windows.Forms.Control)">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.WinForms.Controls.Styles.ScrollBarStyleInfoIdentity"/> class.
            </summary>
            <param name="scrollControl">
            Control to create an identity for ScrollBars(HorizontalScrollBar/VerticalScrollBar).
            </param>
        </member>
        <member name="M:Syncfusion.WinForms.Controls.Styles.ScrollBarStyleInfoIdentity.GetBaseStyles(Syncfusion.WinForms.Core.Styles.IStyleInfo)">
            <summary>
            Loops through all base styles until it finds a style that has a specific property initialized.
            </summary>
            <param name="thisStyleInfo">A instance of <see cref="T:Syncfusion.WinForms.Core.Styles.IStyleInfo"/></param>
            <returns>
            Returns the <see cref="T:Syncfusion.WinForms.Core.Styles.IStyleInfo"/>.
            </returns>
        </member>
        <member name="M:Syncfusion.WinForms.Controls.Styles.ScrollBarStyleInfoIdentity.OnStyleChanged(Syncfusion.WinForms.Core.Styles.StyleInfoBase,Syncfusion.WinForms.Core.Styles.StyleInfoProperty)">
            <summary>
            Occurs when a property in the <see cref="T:Syncfusion.WinForms.Core.Styles.StyleInfoBase"/> has changed.
            </summary>
            <param name="style">The <see cref="T:Syncfusion.WinForms.Core.Styles.StyleInfoBase"/> instance that has changed.</param>
            <param name="sip">A <see cref="T:Syncfusion.WinForms.Core.Styles.StyleInfoProperty"/> that identifies the property to operate on.</param>
        </member>
        <member name="T:Syncfusion.WinForms.Controls.Styles.ScrollBarSizeGripStyleInfo">
            <summary>
            Implements the functionalities that holds all information stored for a SizeGrip of the scroll control.
            </summary>
            <remarks>
            ScrollBarSizeGripStyleInfo provides user-friendly access to all properties stored
            in ScrollBarSizeGripStyleInfoStore.
            </remarks>
        </member>
        <member name="F:Syncfusion.WinForms.Controls.Styles.ScrollBarSizeGripStyleInfo.defaultSizeGripStyleInfo">
            <summary>
            Holds the default style info of the Scrollbar size grip.
            </summary>
        </member>
        <member name="M:Syncfusion.WinForms.Controls.Styles.ScrollBarSizeGripStyleInfo.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.WinForms.Controls.Styles.ScrollBarSizeGripStyleInfo"/> class.
            </summary>
        </member>
        <member name="M:Syncfusion.WinForms.Controls.Styles.ScrollBarSizeGripStyleInfo.#ctor(Syncfusion.WinForms.Core.Styles.StyleInfoSubObjectIdentity)">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.WinForms.Controls.Styles.ScrollBarSizeGripStyleInfo"/> class.
            </summary>
            <param name="identity">A <see cref="T:Syncfusion.WinForms.Core.Styles.StyleInfoSubObjectIdentity"/> that holds the identity for this <see cref="T:Syncfusion.WinForms.Core.Styles.StyleInfoBase"/>.</param>
        </member>
        <member name="M:Syncfusion.WinForms.Controls.Styles.ScrollBarSizeGripStyleInfo.#ctor(Syncfusion.WinForms.Core.Styles.StyleInfoSubObjectIdentity,Syncfusion.WinForms.Controls.Styles.ScrollBarSizeGripStyleInfoStore)">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.WinForms.Controls.Styles.ScrollBarSizeGripStyleInfo"/> class.
            </summary>
            <param name="identity">A <see cref="T:Syncfusion.WinForms.Core.Styles.StyleInfoSubObjectIdentity"/> that holds the identity for this <see cref="T:Syncfusion.WinForms.Core.Styles.StyleInfoBase"/>.</param>
            <param name="store">A <see cref="T:Syncfusion.WinForms.Controls.Styles.ScrollBarSizeGripStyleInfoStore"/> that holds data for this object.
            All changes in this style object will be saved in the <see cref="T:Syncfusion.WinForms.Controls.Styles.ScrollBarSizeGripStyleInfoStore"/> object.
            </param>
        </member>
        <member name="M:Syncfusion.WinForms.Controls.Styles.ScrollBarSizeGripStyleInfo.MakeCopy(Syncfusion.WinForms.Core.Styles.StyleInfoBase,Syncfusion.WinForms.Core.Styles.StyleInfoProperty)">
            <summary>
            Makes an exact copy of the current object.
            </summary>
            <param name="newOwner">The new owner style object for the copied object.</param>
            <param name="sip">The identifier for this object.</param>
            <returns>A copy of the current object registered with the new owner style object.</returns>
        </member>
        <member name="M:Syncfusion.WinForms.Controls.Styles.ScrollBarSizeGripStyleInfo.GetDefaultStyle">
            <summary>
            Gets the default style of the SizeGrip.
            </summary>
            <returns>Returns the default style.</returns>
        </member>
        <member name="P:Syncfusion.WinForms.Controls.Styles.ScrollBarSizeGripStyleInfo.Default">
            <summary>
            Gets the default value for the SizeGripStyleInfo.
            </summary>
        </member>
        <member name="P:Syncfusion.WinForms.Controls.Styles.ScrollBarSizeGripStyleInfo.ForeColor">
            <summary>
            Gets or sets the fore color for the SizeGrip.
            </summary>
        </member>
        <member name="P:Syncfusion.WinForms.Controls.Styles.ScrollBarSizeGripStyleInfo.HasForeColor">
            <summary>
            Gets a value indicating whether ForeColor property is modified or not.
            </summary>
        </member>
        <member name="P:Syncfusion.WinForms.Controls.Styles.ScrollBarSizeGripStyleInfo.BackColor">
            <summary>
            Gets or sets the BackColor for the SizeGrip.
            </summary>
        </member>
        <member name="P:Syncfusion.WinForms.Controls.Styles.ScrollBarSizeGripStyleInfo.HasBackColor">
            <summary>
            Gets a value indicating whether the BackColor property has been modified or not.
            </summary>
        </member>
        <member name="P:Syncfusion.WinForms.Controls.Styles.ScrollBarSizeGripStyleInfo.ShowResizeGripper">
            <summary>
            Gets or sets a value indicating whether the displaying of resize gripper. 
            </summary>
        </member>
        <member name="P:Syncfusion.WinForms.Controls.Styles.ScrollBarSizeGripStyleInfo.HasShowResizeGripper">
            <summary>
            Gets a value indicating whether the ShowResizeGripper property has been modified or not.
            </summary>
        </member>
        <member name="T:Syncfusion.WinForms.Controls.VerticalScrollBar">
            <summary>
            Represents a class that is used to draw the vertical scrollbar of the scroll control.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Controls.VerticalScrollBar.DefaultThumbHeight">
            <summary>
            The default height of the thumb.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Controls.VerticalScrollBar.deltaY">
            <summary>
            Holds the mouse down position on the thumb.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Controls.VerticalScrollBar.defaultSize">
            <summary>
            The default size of the scrollbar.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Controls.VerticalScrollBar.sfScrollControl">
            <summary>
            The attached SfScrollControl;
            </summary>
        </member>
        <member name="M:Syncfusion.WinForms.Controls.VerticalScrollBar.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.WinForms.Controls.VerticalScrollBar"/> class.
            </summary>
        </member>
        <member name="M:Syncfusion.WinForms.Controls.VerticalScrollBar.#ctor(Syncfusion.WinForms.Controls.Styles.ScrollBarStyleInfo)">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.WinForms.Controls.VerticalScrollBar"/> class.
            </summary>
            <param name="style">The <see cref="T:Syncfusion.WinForms.Controls.Styles.ScrollBarStyleInfo"/> for the vertical scrollbar.</param>
        </member>
        <member name="M:Syncfusion.WinForms.Controls.VerticalScrollBar.#ctor(Syncfusion.WinForms.Controls.Styles.ScrollBarStyleInfo,Syncfusion.WinForms.Controls.SfScrollControl)">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.WinForms.Controls.VerticalScrollBar"/> class.
            </summary>
            <param name="style">The <see cref="T:Syncfusion.WinForms.Controls.Styles.ScrollBarStyleInfo"/> for the vertical scrollbar.</param>
            <param name="control">Instance of SfScrollControl </param>&gt;
        </member>
        <member name="M:Syncfusion.WinForms.Controls.VerticalScrollBar.GetStyle">
            <summary>
            Gets the style of the <see cref="T:Syncfusion.WinForms.Controls.Styles.ScrollBarStyleInfo"/>
            </summary>
            <returns>Returns the ScrollControl' vertical scrollbar style.</returns>
        </member>
        <member name="M:Syncfusion.WinForms.Controls.VerticalScrollBar.PointToValue(System.Int32,System.Int32)">
            <summary>
            Gets the value of the vertical scrollbar at the given cursor position.
            </summary>
            <param name="x">The x co-ordinate of the cursor.</param>
            <param name="y">The y co-ordinate of the cursor.</param>
            <returns>Returns the value of the given co-ordinates.</returns>
        </member>
        <member name="M:Syncfusion.WinForms.Controls.VerticalScrollBar.InvalidateArrowRegion">
            <summary>
            Invalidates the Arrow location.
            </summary>
        </member>
        <member name="M:Syncfusion.WinForms.Controls.VerticalScrollBar.InvalidateThumbRegion">
            <summary>
            Invalidates the scrollbar thumb location.
            </summary>
        </member>
        <member name="M:Syncfusion.WinForms.Controls.VerticalScrollBar.CalculateThumbDelta(System.Int32,System.Int32)">
            <summary>Calculates the delta value in vertical co-ordinates.</summary>
            <param name="x">The X position of the cursor.</param>
            <param name="y">The y position of the cursor.</param>
        </member>
        <member name="M:Syncfusion.WinForms.Controls.VerticalScrollBar.OnThumbPositionChanged(System.Int32,System.Int32)">
            <summary>
            Calculates the thumb position on moving the cursor over the scrollbar.
            </summary>
            <param name="x">The X co-ordinate of the cursor.</param>
            <param name="y">The Y co-ordinate of the cursor.</param>
        </member>
        <member name="M:Syncfusion.WinForms.Controls.VerticalScrollBar.OnScrollHereClick(System.Object,System.EventArgs)">
            <summary>
            Occurs while clicking the ScrollHere option from the context menu.
            </summary>
            <param name="sender">The sender of the object.</param>
            <param name="e">An <see cref="T:System.EventArgs"/> that contains event data.</param>
        </member>
        <member name="M:Syncfusion.WinForms.Controls.VerticalScrollBar.OnPageDownRightClick(System.Object,System.EventArgs)">
            <summary>
            Occurs while clicking the ScrollDown option from the context menu.
            </summary>
            <param name="sender">The sender of the event.</param>
            <param name="e">An <see cref="T:System.EventArgs"/> that contains event data.</param>
        </member>
        <member name="M:Syncfusion.WinForms.Controls.VerticalScrollBar.OnPageUpLeftClick(System.Object,System.EventArgs)">
            <summary>
            Occurs while clicking the PageUp option from the context menu.
            </summary>
            <param name="sender">The sender of the event.</param>
            <param name="e">An <see cref="T:System.EventArgs"/> that contains event data.</param>
        </member>
        <member name="M:Syncfusion.WinForms.Controls.VerticalScrollBar.CalculateThumbTopAndBottomRegion">
            <summary>
            Calculating bounds for left and right Thumb regions of the scrollbar.
            </summary>
        </member>
        <member name="P:Syncfusion.WinForms.Controls.VerticalScrollBar.DefaultSize">
            <summary>
            Gets the default size of the vertical scrollbar.
            </summary>
        </member>
        <member name="T:Syncfusion.WinForms.Controls.SfScrollFrame">
            <summary>
            Represents the component that manages the scrollbars of the control and assigns the theme-able scrollbars to that control.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Controls.SfScrollFrame.LARGE_ICON_VIEW_SMALL_CHANGE">
            <summary>
            LargeIcon View small increment value.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Controls.SfScrollFrame.SMALL_ICON_VIEW_SMALL_CHANGE">
            <summary>
            SmallIcon View small increment value.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Controls.SfScrollFrame.TILE_VIEW_SMALL_CHANGE">
            <summary>
            Tile View small increment value.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Controls.SfScrollFrame.DETAILS_VIEW_SMALL_CHANGE">
            <summary>
            Details View small increment value.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Controls.SfScrollFrame.LIST_VIEW_SMALL_CHANGE">
            <summary>
            List View small increment value. 
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Controls.SfScrollFrame.sizeGrip">
            <summary>
            Represents the instance of the SizeGrip
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Controls.SfScrollFrame.attachedControl">
            <summary>
            The control that is attached to the SfScrollerFrame.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Controls.SfScrollFrame.nativeWindowWrapper">
            <summary>
            Provides the PreFilterMessage for handling the WndProc messages of the attached control.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Controls.SfScrollFrame.style">
            <summary>
            The style of the scroller frame.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Controls.SfScrollFrame.hScrollBarInfo">
            <summary>
            Represents the struct that holds the details of the horizontal scrollbar.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Controls.SfScrollFrame.vScrollBarInfo">
            <summary>
            Represents the struct that holds the details of the vertical scrollbar.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Controls.SfScrollFrame.hScrollInfo">
            <summary>
            Represents the struct that holds the details of the horizontal scroll info.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Controls.SfScrollFrame.vScrollInfo">
            <summary>
            Represents the struct that holds the details of the vertical scroll info.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Controls.SfScrollFrame.themeName">
            <summary>
            Represents the theme name of the control.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Controls.SfScrollFrame.activeThemeName">
            <summary>
            Represents the active theme name of the control.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Controls.SfScrollFrame.allowSkinManager">
            <summary>
            Specifies the theme need to be applied to the control or not.
            </summary>
        </member>
        <member name="M:Syncfusion.WinForms.Controls.SfScrollFrame.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.WinForms.Controls.SfScrollFrame"/> class.
            </summary>
        </member>
        <member name="M:Syncfusion.WinForms.Controls.SfScrollFrame.GetActiveThemeName">
            <summary>
            Gets the name of the active theme that is currently applied to the control.
            </summary>
            <returns>Returns the active theme name.</returns>
        </member>
        <member name="M:Syncfusion.WinForms.Controls.SfScrollFrame.Refresh">
            <summary> 
            Forces the scroller frame to update the attached scrollbars and immediately redraw its scrollbars.
            </summary>
        </member>
        <member name="M:Syncfusion.WinForms.Controls.SfScrollFrame.System#Windows#Forms#IMessageFilter#PreFilterMessage(System.Windows.Forms.Message@)">
            <summary>
            Updates the SfScrollerFrame based on the WndProc message of the parent control.
            </summary>
            <param name="m">The <see cref="T:System.Windows.Forms.Message"/> that passed to the parent control.</param>
            <returns>
            Return true when the message is need to be forward to the parent, otherwise return false.
            </returns>
        </member>
        <member name="M:Syncfusion.WinForms.Controls.SfScrollFrame.UpdateScrollbarPosition">
            <summary>
            Updates the scrollbar location based on the system scrollbars of the attached control.
            </summary>
        </member>
        <member name="M:Syncfusion.WinForms.Controls.SfScrollFrame.UpdateSmallIncrementListView">
            <summary>
            Updates the small increment value for the List view.
            </summary>
        </member>
        <member name="M:Syncfusion.WinForms.Controls.SfScrollFrame.PreFilterMessage(System.Windows.Forms.Message@)">
            <summary>
            Updates the SfScrollerFrame based on the WndProc message of the parent control.
            </summary>
            <param name="m">The <see cref="T:System.Windows.Forms.Message"/> that passed to the parent control.</param>
            <returns>
            Return true when the message is need to be forward to the parent, otherwise return false.
            </returns>
        </member>
        <member name="M:Syncfusion.WinForms.Controls.SfScrollFrame.Dispose(System.Boolean)">
            <summary>
            Disposes the unused resources.
            </summary>
            <param name="disposing">Specifies whether to dispose both managed and unmanaged resources or only the unmanaged resources.</param>
        </member>
        <member name="M:Syncfusion.WinForms.Controls.SfScrollFrame.UpdateScrollBarValues(Syncfusion.WinForms.Controls.ScrollBarBase,Syncfusion.WinForms.Core.NativeScroll.SCROLLINFO)">
            <summary>
            Updates the scrollbar values based on the scroll info.
            </summary>
            <param name="bar">The scrollbar that need to be updated.</param>
            <param name="scrollInfo">The scroll info of the attached control.</param>
        </member>
        <member name="M:Syncfusion.WinForms.Controls.SfScrollFrame.AttachFrame(System.Windows.Forms.Control)">
            <summary>
            Attaches the given control to the SfScrollerFrame.
            </summary>
            <param name="control">The <see cref="T:System.Windows.Forms.Control"/> that need to be attached.</param>
        </member>
        <member name="M:Syncfusion.WinForms.Controls.SfScrollFrame.OnHorizontalScrollBarValueChanged(System.Object,System.EventArgs)">
            <summary>
            Occurs when the value is changed for the horizontal scrollbar
            </summary>
            <param name="sender">The object of the sender.</param>
            <param name="e">An <see cref="T:System.EventArgs"/> that contains event data.</param>
        </member>
        <member name="M:Syncfusion.WinForms.Controls.SfScrollFrame.OnVerticalScrollBarValueChanged(System.Object,System.EventArgs)">
            <summary>
            Occurs when the value is changed for the vertical scrollbar
            </summary>
            <param name="sender">The object of the sender.</param>
            <param name="e">An <see cref="T:System.EventArgs"/> that contains event data.</param>
        </member>
        <member name="M:Syncfusion.WinForms.Controls.SfScrollFrame.OwnerVisibleChanged(System.Object,System.EventArgs)">
            <summary>
            Updates the visibility of the scrollbars when the attached control's visibility is changed.
            </summary>
            <param name="sender">The object of the sender.</param>
            <param name="e">An <see cref="T:System.EventArgs"/> that contains event data.</param>
        </member>
        <member name="M:Syncfusion.WinForms.Controls.SfScrollFrame.OwnerParentChanged(System.Object,System.EventArgs)">
            <summary>
            Occurs when the parent of the attached control is changed.
            </summary>
            <param name="sender">The object of the sender.</param>
            <param name="e">An <see cref="T:System.EventArgs"/> that contains event data.</param>
        </member>
        <member name="M:Syncfusion.WinForms.Controls.SfScrollFrame.OwnerRightToLeftChanged(System.Object,System.EventArgs)">
            <summary>
            Updates the <see cref="T:System.Windows.Forms.RightToLeft"/> when changing the RTL mode of the parent control.
            </summary>
            <param name="sender">The object of the sender.</param>
            <param name="e">An <see cref="T:System.EventArgs"/> that contains event data.</param>
        </member>
        <member name="M:Syncfusion.WinForms.Controls.SfScrollFrame.OwnerHandleDestroyed(System.Object,System.EventArgs)">
            <summary>
            Removes the scrollbars when the attached controls handle is destroyed.
            </summary>
            <param name="sender">The object of the sender.</param>
            <param name="e">An <see cref="T:System.EventArgs"/> that contains event data.</param>
        </member>
        <member name="M:Syncfusion.WinForms.Controls.SfScrollFrame.OwnerHandleCreated(System.Object,System.EventArgs)">
            <summary>
            Performs the AttachFrmae when the handle is created for the attached control.
            </summary>
            <param name="sender">The object of the sender.</param>
            <param name="e">An <see cref="T:System.EventArgs"/> that contains event data.</param>
        </member>
        <member name="M:Syncfusion.WinForms.Controls.SfScrollFrame.AttachScrollBars">
            <summary>
            Attaches the scrollbars to the parent control.
            </summary>
        </member>
        <member name="M:Syncfusion.WinForms.Controls.SfScrollFrame.OnThemeChanged(Syncfusion.WinForms.Core.Events.ThemeChangedEventArgs)">
            <summary>
            Raises the <see cref="E:Syncfusion.WinForms.Controls.SfScrollFrame.ThemeChanged"/> event.
            </summary>
            <param name="e">The <see cref="T:Syncfusion.WinForms.Core.Events.ThemeChangedEventArgs"/> that contains event data.</param>
        </member>
        <member name="M:Syncfusion.WinForms.Controls.SfScrollFrame.UpdateParent">
            <summary>
            Updates the scrollbars parent control.
            </summary>
        </member>
        <member name="M:Syncfusion.WinForms.Controls.SfScrollFrame.SynchronizeScrollBars">
            <summary>
            Synchronizes the horizontal and vertical scrollbars.
            </summary>
        </member>
        <member name="M:Syncfusion.WinForms.Controls.SfScrollFrame.DetachFrame">
            <summary>
            Removes the <see cref="T:Syncfusion.WinForms.Controls.SfScrollFrame"/> from the attached control.
            </summary>
        </member>
        <member name="M:Syncfusion.WinForms.Controls.SfScrollFrame.DetachScrollBars">
            <summary>
            Removes the scrollbars when the attached controls parent handle is destroyed.
            </summary>
        </member>
        <member name="M:Syncfusion.WinForms.Controls.SfScrollFrame.UpdateScrollBarVisibility(System.Boolean)">
            <summary>
            Updates the visibility of the scrollbars.
            </summary>
            <param name="value">Represents the visibility of the scrollbars. When its set to true, 
            It will update the parent scrollbars visibility. Otherwise it will hides the scrollbars.</param>
        </member>
        <member name="M:Syncfusion.WinForms.Controls.SfScrollFrame.OnScroll(System.Object,System.Windows.Forms.ScrollEventArgs)">
            <summary>
            Performs the scrolling of the attached control through the SfScrollbars.
            </summary>
            <param name="sender">The object of the sender.</param>
            <param name="e">The <see cref="T:System.Windows.Forms.ScrollEventArgs"/> that contains event data.</param>
        </member>
        <member name="M:Syncfusion.WinForms.Controls.SfScrollFrame.ListViewScroll(System.Windows.Forms.ScrollEventArgs,Syncfusion.WinForms.Core.NativeScroll.SCROLLINFO,System.Int32)">
            <summary>
            Performs the scrolling of the attached list view control.
            </summary>
            <param name="e">The <see cref="T:System.Windows.Forms.ScrollEventArgs"/> that contains event data.</param>
            <param name="scrollInfo">The native scroll info of the attached control.</param>
            <param name="scrollBar">The integer value that specifies the scrollbar type.</param>
        </member>
        <member name="M:Syncfusion.WinForms.Controls.SfScrollFrame.GetListViewScrollValue(System.Windows.Forms.ScrollEventArgs,System.Windows.Forms.ListView,Syncfusion.WinForms.Core.NativeScroll.SCROLLINFO,System.Int32@)">
            <summary>
            Gets the scroll value of the list view.
            </summary>
            <param name="e">The <see cref="T:System.Windows.Forms.ScrollEventArgs"/> that contains event data.</param>
            <param name="listView">The <see cref="T:System.Windows.Forms.ListView"/> of that need to be scrolled.</param>
            <param name="scrollInfo">The native scroll info of the control.</param>
            <param name="detailsViewFactor">The value that is used to calculate the scroll position in DetailsView of list view.</param>
            <returns>Return the scroll value of the list view.</returns>
        </member>
        <member name="E:Syncfusion.WinForms.Controls.SfScrollFrame.ThemeChanged">
            <summary>
            Occurs when the ThemeName is changed.
            </summary>
        </member>
        <member name="P:Syncfusion.WinForms.Controls.SfScrollFrame.VerticalScrollBar">
            <summary>
            Gets the vertical scrollbar of the attached scroller frame.
            </summary>
        </member>
        <member name="P:Syncfusion.WinForms.Controls.SfScrollFrame.HorizontalScrollBar">
            <summary>
            Gets the horizontal scrollbar of the attached scroller frame.
            </summary>
        </member>
        <member name="P:Syncfusion.WinForms.Controls.SfScrollFrame.Control">
            <summary>
            Gets or sets the control to attach the scroll frame.
            </summary>
            <remarks>
            The <see cref="T:Syncfusion.WinForms.Controls.SfScrollFrame"/> can be attached to a control which is derived from the
             <see cref="T:System.Windows.Forms.ScrollableControl"/> or if the WS_HSCROLL and WS_VSCROLL window styles are enabled for that control.
            </remarks>
        </member>
        <member name="P:Syncfusion.WinForms.Controls.SfScrollFrame.Style">
            <summary>
            Gets or sets the <see cref="!:Syncfusion.WinForms.Controls.ScrollerVisualStyle"/> with settings that control the appearance of the <see cref="T:Syncfusion.WinForms.Controls.SfScrollFrame"/>.
            </summary>
        </member>
        <member name="P:Syncfusion.WinForms.Controls.SfScrollFrame.ThemeName">
            <summary>
            Gets or sets a name of the theme of the <see cref="T:Syncfusion.WinForms.Controls.SfScrollFrame"/> control.
            </summary>
        </member>
        <member name="P:Syncfusion.WinForms.Controls.SfScrollFrame.CanApplyTheme">
            <summary>
            Gets or sets a value indicating whether the <see cref="T:Syncfusion.WinForms.Controls.SfSkinManager"/> theme should be applied to the control.
            Default value is true.
            </summary>
        </member>
        <member name="P:Syncfusion.WinForms.Controls.SfScrollFrame.CanOverrideStyle">
            <summary>
            Gets or sets a value indicating whether control elements styles can be overridden by theme style settings.
            </summary>
        </member>
        <member name="P:Syncfusion.WinForms.Controls.SfScrollFrame.Syncfusion#WinForms#Core#Styles#IThemeProvider#ControlName">
            <summary>
            Gets the name of the control.
            </summary>
        </member>
        <member name="P:Syncfusion.WinForms.Controls.SfScrollFrame.Syncfusion#WinForms#Core#Styles#IThemeProvider#ActiveThemeName">
            <summary>
            Gets or sets the name of the <see cref="T:Syncfusion.WinForms.Controls.SfSkinManager"/> theme.
            </summary>
        </member>
        <member name="P:Syncfusion.WinForms.Controls.SfScrollFrame.IsHorizontalScrollVisible">
            <summary>
            Gets a value indicating whether the horizontal scrollbar is visible for the attached control.
            </summary>
        </member>
        <member name="P:Syncfusion.WinForms.Controls.SfScrollFrame.SizeGrip">
            <summary>
            Gets the SizeGrip of the ScrollFrame
            </summary>
        </member>
        <member name="P:Syncfusion.WinForms.Controls.SfScrollFrame.IsVerticalScrollVisible">
            <summary>
            Gets a value indicating whether the vertical scrollbar is visible for the attached control.
            </summary>
        </member>
        <member name="P:Syncfusion.WinForms.Controls.SfScrollFrame.ActiveThemeName">
            <summary>
            Gets or sets the name of the <see cref="T:Syncfusion.WinForms.Controls.SfSkinManager"/> theme.
            </summary>
        </member>
        <member name="T:Syncfusion.WinForms.Controls.ScrollFrameStyleInfoIdentity">
            <summary>
            Implements the class that provide an identity information of <see cref="!:Syncfusion.WinForms.Controls.Styles.ScrollFrameInfoIdentity"/> using 
            <see cref="T:Syncfusion.WinForms.Core.Styles.StyleInfoSubObjectIdentity"/>.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Controls.ScrollFrameStyleInfoIdentity.sfScrollFrame">
            <summary>
            Maintains the SfScrollFrame for create the identity. 
            </summary>
        </member>
        <member name="M:Syncfusion.WinForms.Controls.ScrollFrameStyleInfoIdentity.#ctor(Syncfusion.WinForms.Controls.SfScrollFrame)">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.WinForms.Controls.ScrollFrameStyleInfoIdentity"/> class.
            </summary>
            <param name="scrollFrame">
            Control to create an identity for ScrollFrame.
            </param>
        </member>
        <member name="M:Syncfusion.WinForms.Controls.ScrollFrameStyleInfoIdentity.GetBaseStyles(Syncfusion.WinForms.Core.Styles.IStyleInfo)">
            <summary>
            Loops through all base styles until it finds a style that has a specific property initialized.
            </summary>
            <param name="thisStyleInfo">A instance of <see cref="T:Syncfusion.WinForms.Core.Styles.IStyleInfo"/></param>
            <returns>
            Returns the <see cref="T:Syncfusion.WinForms.Core.Styles.IStyleInfo"/>.
            </returns>
        </member>
        <member name="M:Syncfusion.WinForms.Controls.ScrollFrameStyleInfoIdentity.OnStyleChanged(Syncfusion.WinForms.Core.Styles.StyleInfoBase,Syncfusion.WinForms.Core.Styles.StyleInfoProperty)">
            <summary>
            Occurs when a property in the <see cref="T:Syncfusion.WinForms.Core.Styles.StyleInfoBase"/> has changed.
            </summary>
            <param name="style">The <see cref="T:Syncfusion.WinForms.Core.Styles.StyleInfoBase"/> instance that has changed.</param>
            <param name="sip">A <see cref="T:Syncfusion.WinForms.Core.Styles.StyleInfoProperty"/> that identifies the property to operate on.</param>
        </member>
        <member name="T:Syncfusion.WinForms.Controls.NativeWindowWrapper">
            <summary>
            Provides the a NativeWindow that used to pre-filter the WndProc messages of the given handle.
            </summary>
            <remarks>
            Its used to updated the scroll positions and the scrolling of the attached control to the SfScrollerFrame.
            </remarks>
        </member>
        <member name="F:Syncfusion.WinForms.Controls.NativeWindowWrapper.messageFilter">
            <summary>
            Message filter for the native windows.
            </summary>
        </member>
        <member name="M:Syncfusion.WinForms.Controls.NativeWindowWrapper.#ctor(System.IntPtr)">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.WinForms.Controls.NativeWindowWrapper"/> class.
            </summary>
            <param name="hWnd">Window Handle.</param>
        </member>
        <member name="M:Syncfusion.WinForms.Controls.NativeWindowWrapper.WndProc(System.Windows.Forms.Message@)">
            <summary>
            Override the WndProc method.
            </summary>
            <param name="m">The window message that need to be processed.</param>
        </member>
        <member name="P:Syncfusion.WinForms.Controls.NativeWindowWrapper.MessageFilter">
            <summary>
            Gets or sets the reference of the message filter instance.
            </summary>
        </member>
        <member name="T:Syncfusion.WinForms.Controls.SfToolTip">
            <summary>
            Represents a ToolTip window that displays a brief description about a control when user rests the mouse on that control.
            </summary>
            <example>
            This sample shows how to set tooltip text for a control.
            <code>
            SfToolTip sfToolTip = new SfToolTip();
            sfToolTip.SetToolTip(this.button1, "Sample Tooltip");
            </code>
            </example>
            <example>
            This sample shows how to set <see cref="T:Syncfusion.WinForms.Controls.ToolTipInfo"/> for a control to show as a tooltip.
            <code>
            SfToolTip sfToolTip = new SfToolTip();
            ToolTipInfo tooltipInfo1 = new ToolTipInfo();
            ToolTipItem toolTipItem1 = new ToolTipItem();
            toolTipItem1.Text = "Tooltip item 1 text";
            ToolTipItem toolTipItem2 = new ToolTipItem();
            toolTipItem2.Text = "Tooltip item 2 text";
            toolTipInfo.Items.AddRange(new ToolTipItem[] { toolTipItem1, toolTipItem2});
            sfToolTip.SetToolTipInfo( this.button2, toolTipInfo);
            </code>
            </example>
        </member>
        <member name="F:Syncfusion.WinForms.Controls.SfToolTip.controlCollection">
            <summary>
            The collection of controls registered for tooltip with their ToolTipInfo.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Controls.SfToolTip.controlTextCollection">
            <summary>
            The collection of controls registered for tooltip with text.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Controls.SfToolTip.initialDelayTimer">
            <summary>
            The timer for initial delay.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Controls.SfToolTip.popupDelayTimer">
            <summary>
            The timer for popup delay.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Controls.SfToolTip.toolTipInfo">
            <summary>
            The information to be shown in tooltip for show method.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Controls.SfToolTip.toolTipItem">
            <summary>
            The tooltip item to be shown in tooltip for show method.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Controls.SfToolTip.themeName">
            <summary>
            Contains the value of the <see cref="!:Syncfusion.Core.WinForms.ToolTip.SfToolTip.ThemeName"/> property.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Controls.SfToolTip.canApplytheme">
            <summary>
            It contains the value of the <see cref="P:Syncfusion.WinForms.Controls.SfToolTip.CanApplyTheme"/> property.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Controls.SfToolTip.activeThemeName">
            <summary>
            Contains the value of the <see cref="!:Syncfusion.Core.WinForms.ToolTip.SfToolTip.ActiveThemeName"/> property.
            </summary>
        </member>
        <member name="M:Syncfusion.WinForms.Controls.SfToolTip.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.WinForms.Controls.SfToolTip"/> class.
            </summary>
        </member>
        <member name="M:Syncfusion.WinForms.Controls.SfToolTip.#ctor(System.ComponentModel.IContainer)">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.WinForms.Controls.SfToolTip"/> class.
            </summary>
            <param name="container">The container in which the SfToolTip component has to be added.</param>
        </member>
        <member name="M:Syncfusion.WinForms.Controls.SfToolTip.GetToolTipInfo(System.Windows.Forms.Control)">
            <summary>
            Gets the <see cref="T:Syncfusion.WinForms.Controls.ToolTipInfo"/> of the Control.
            </summary>
            <param name="control">An object of control.</param>
            <returns>Returns the <see cref="T:Syncfusion.WinForms.Controls.ToolTipInfo"/> of the control.</returns>
        </member>
        <member name="M:Syncfusion.WinForms.Controls.SfToolTip.SetToolTipInfo(System.Windows.Forms.Control,Syncfusion.WinForms.Controls.ToolTipInfo)">
            <summary>
            Associates the <see cref="T:Syncfusion.WinForms.Controls.ToolTipInfo"/> with the specified control.
            </summary>
            <param name="control">The control to associate with the <see cref="T:Syncfusion.WinForms.Controls.ToolTipInfo"/>.</param>
            <param name="toolTipInfo">The <see cref="T:Syncfusion.WinForms.Controls.ToolTipInfo"/> to be 
            displayed when the pointer is on the control.</param>
        </member>
        <member name="M:Syncfusion.WinForms.Controls.SfToolTip.SetToolTip(System.Windows.Forms.Control,System.String)">
            <summary>
            Associates the <see cref="T:Syncfusion.WinForms.Controls.ToolTipInfo"/> with the specified control.
            </summary>
            <param name="control">The control to associate with the <see cref="T:Syncfusion.WinForms.Controls.ToolTipInfo"/>.</param>
            <param name="toolTipText">The tooltip text to be displayed when the pointer is on the control.</param>
        </member>
        <member name="M:Syncfusion.WinForms.Controls.SfToolTip.GetToolTip(System.Windows.Forms.Control)">
            <summary>
            Gets the tooltip text of the Control.
            </summary>
            <param name="control">An object of control.</param>
            <returns>Returns the tooltip text of the control.</returns>
        </member>
        <member name="M:Syncfusion.WinForms.Controls.SfToolTip.RemoveToolTip(System.Windows.Forms.Control)">
            <summary>
            Disables the ToolTip for the specified control.
            </summary>
            <param name="control">The control for which the ToolTip has to be disabled.</param>
        </member>
        <member name="M:Syncfusion.WinForms.Controls.SfToolTip.Hide">
            <summary>
            Hides the ToolTip, if it is being displayed.
            </summary>
        </member>
        <member name="M:Syncfusion.WinForms.Controls.SfToolTip.Show(Syncfusion.WinForms.Controls.ToolTipInfo,System.Drawing.Point)">
            <summary>
            Shows the ToolTip with the <see cref="T:Syncfusion.WinForms.Controls.ToolTipInfo"/> at the specified relative position.
            </summary>
            <param name="toolTipInfo"><see cref="T:Syncfusion.WinForms.Controls.ToolTipInfo"/> to be displayed as ToolTip.</param>
            <param name="point">A point in which the ToolTip to be displayed.</param>
        </member>
        <member name="M:Syncfusion.WinForms.Controls.SfToolTip.Show(Syncfusion.WinForms.Controls.ToolTipInfo,System.Int32,System.Int32)">
            <summary>
            Shows the ToolTip with the <see cref="T:Syncfusion.WinForms.Controls.ToolTipInfo"/> at the specified relative position.
            </summary>
            <param name="toolTipInfo"><see cref="T:Syncfusion.WinForms.Controls.ToolTipInfo"/> to be displayed as ToolTip.</param>
            <param name="x">The horizontal offset position in which the ToolTip has to be displayed.</param>
            <param name="y">The vertical offset position in which the ToolTip has to be displayed.</param>
        </member>
        <member name="M:Syncfusion.WinForms.Controls.SfToolTip.Show(Syncfusion.WinForms.Controls.ToolTipInfo,System.Int32,System.Int32,System.Int32)">
            <summary>
            Shows the ToolTip with the <see cref="T:Syncfusion.WinForms.Controls.ToolTipInfo"/> at the specified relative position for a specified duration.
            </summary>
            <param name="toolTipInfo"><see cref="T:Syncfusion.WinForms.Controls.ToolTipInfo"/> to be displayed as ToolTip.</param>
            <param name="x">The horizontal offset position in which the ToolTip has to be displayed.</param>
            <param name="y">The vertical offset position in which the ToolTip has to be displayed.</param>
            <param name="popupDelay">The period of time that the ToolTip should remain visible.</param>
        </member>
        <member name="M:Syncfusion.WinForms.Controls.SfToolTip.Show(Syncfusion.WinForms.Controls.ToolTipInfo,System.Drawing.Point,System.Int32,System.Int32,System.Boolean)">
            <summary>
            Shows the ToolTip with the <see cref="T:Syncfusion.WinForms.Controls.ToolTipInfo"/> at the specified relative position for a specified duration with specified initial delay.
            ToolTip location will be adjusted with respect to the screen bounds, if adjustToScreenBounds value is <b>true</b>.
            </summary>
            <param name="toolTipInfo"><see cref="T:Syncfusion.WinForms.Controls.ToolTipInfo"/> to be displayed as ToolTip.</param>
            <param name="point">A point in which the ToolTip to be displayed.</param>
            <param name="initialDelay">The period of time that passes before the ToolTip appears.</param>
            <param name="popupDelay">The period of time that the ToolTip should remain visible.</param>
            <param name="canAdjustToScreenBounds">Specifies whether to adjust the ToolTip location respective to the screen bounds.</param>
        </member>
        <member name="M:Syncfusion.WinForms.Controls.SfToolTip.Show(Syncfusion.WinForms.Controls.ToolTipInfo,System.Drawing.Point,System.Int32)">
            <summary>
            Shows the ToolTip with the <see cref="T:Syncfusion.WinForms.Controls.ToolTipInfo"/> at the specified relative position for a specified duration.
            </summary>
            <param name="toolTipInfo"><see cref="T:Syncfusion.WinForms.Controls.ToolTipInfo"/> to be displayed as ToolTip.</param>
            <param name="point">A point in which the ToolTip to be displayed.</param>
            <param name="popupDelay">The period of time that the ToolTip should remain visible.</param>
        </member>
        <member name="M:Syncfusion.WinForms.Controls.SfToolTip.Show(System.String,System.Drawing.Point)">
            <summary>
            Shows the ToolTip with the tooltip text at the specified relative position.
            </summary>
            <param name="toolTipText">The text to be displayed as tooltip.</param>
            <param name="point">A point in which the ToolTip to be displayed.</param>
        </member>
        <member name="M:Syncfusion.WinForms.Controls.SfToolTip.Show(System.String,System.Int32,System.Int32)">
            <summary>
            Shows the ToolTip with the tooltip text at the specified relative position.
            </summary>
            <param name="toolTipText">The text to be displayed as tooltip.</param>
            <param name="x">The horizontal offset position in which the ToolTip has to be displayed.</param>
            <param name="y">The vertical offset position in which the ToolTip has to be displayed.</param>
        </member>
        <member name="M:Syncfusion.WinForms.Controls.SfToolTip.Show(System.String,System.Int32,System.Int32,System.Int32)">
            <summary>
            Shows the ToolTip with the tooltip text for the specified duration at the specified relative position.
            </summary>
            <param name="toolTipText">The text to be displayed as tooltip.</param>
            <param name="x">The horizontal offset position in which the ToolTip has to be displayed.</param>
            <param name="y">The vertical offset position in which the ToolTip has to be displayed.</param>
            <param name="popupDelay">The period of time that the ToolTip should remain visible.</param>
        </member>
        <member name="M:Syncfusion.WinForms.Controls.SfToolTip.Show(System.String,System.Drawing.Point,System.Int32)">
            <summary>
            Shows the ToolTip with the tooltip text for the specified duration at the specified relative position.
            </summary>
            <param name="toolTipText">The text to be displayed as tooltip.</param>
            <param name="point">A point in which the ToolTip to be displayed.</param>
            <param name="popupDelay">The period of time that the ToolTip should remain visible.</param>
        </member>
        <member name="M:Syncfusion.WinForms.Controls.SfToolTip.Show(System.String)">
            <summary>
            Shows the ToolTip with the tooltip text at the cursor position.
            </summary>
            <param name="toolTipText">The text to be displayed as tooltip.</param>
        </member>
        <member name="M:Syncfusion.WinForms.Controls.SfToolTip.Show(Syncfusion.WinForms.Controls.ToolTipInfo)">
            <summary>
            Shows the ToolTip with the <see cref="T:Syncfusion.WinForms.Controls.ToolTipInfo"/> at the cursor position.
            </summary>
            <param name="toolTipInfo"><see cref="T:Syncfusion.WinForms.Controls.ToolTipInfo"/> to be displayed as ToolTip.</param>
        </member>
        <member name="M:Syncfusion.WinForms.Controls.SfToolTip.Syncfusion#WinForms#Core#Styles#IThemeProvider#GetActiveThemeName">
            <summary>
            Gets the active theme name of the button control.
            </summary>
            <returns>Returns the active theme name.</returns>
        </member>
        <member name="M:Syncfusion.WinForms.Controls.SfToolTip.System#ComponentModel#IExtenderProvider#CanExtend(System.Object)">
            <summary>
            Specifies whether this object can provide its extender properties to the specified object.
            </summary>
            <param name="extendee">The Object to receive the extender properties.</param>
            <returns>true if this object can provide extender properties to the specified object; otherwise, false.</returns>
        </member>
        <member name="M:Syncfusion.WinForms.Controls.SfToolTip.OnToolTipShowing(Syncfusion.WinForms.Controls.Events.ToolTipShowingEventArgs)">
            <summary>
            Raises the <see cref="E:Syncfusion.WinForms.Controls.SfToolTip.ToolTipShowing"/> event.
            </summary>
            <param name="e">An object of <see cref="!:Syncfusion.WinForms.Controls.ToolTip.ToolTipShowingEventArgs"/>
            that contains event data.</param>
        </member>
        <member name="M:Syncfusion.WinForms.Controls.SfToolTip.OnToolTipShown(Syncfusion.WinForms.Controls.Events.ToolTipShownEventArgs)">
            <summary>
            Raises the <see cref="E:Syncfusion.WinForms.Controls.SfToolTip.ToolTipShown"/> event.
            </summary>
            <param name="e">An object of <see cref="!:Syncfusion.WinForms.Controls.ToolTip.ToolTipShownEventArgs"/>
            that contains event data.</param>
        </member>
        <member name="M:Syncfusion.WinForms.Controls.SfToolTip.OnDrawToolTipItem(Syncfusion.WinForms.Controls.Events.DrawToolTipItemEventArgs)">
            <summary>
            Raises the <see cref="E:Syncfusion.WinForms.Controls.SfToolTip.DrawToolTipItem"/> event.
            </summary>
            <param name="e">An object of <see cref="!:Syncfusion.WinForms.Controls.ToolTip.DrawToolTipItemEventArgs"/>
            that contains event data.</param>
        </member>
        <member name="M:Syncfusion.WinForms.Controls.SfToolTip.CanExtend(System.Object)">
            <summary>
            Specifies whether this object can provide its extender properties to the specified object.
            </summary>
            <param name="extendee">The Object to receive the extender properties.</param>
            <returns>true if this object can provide extender properties to the specified object; otherwise, false.</returns>
        </member>
        <member name="M:Syncfusion.WinForms.Controls.SfToolTip.Dispose(System.Boolean)">
            <summary>
            Releases the unmanaged resources used by the Component and optionally releases the managed resources.
            </summary>
            <param name="disposing">true to release both managed and unmanaged resources; false to release only unmanaged resources.</param>
        </member>
        <member name="M:Syncfusion.WinForms.Controls.SfToolTip.ShouldSerializeToolTipInfo(System.Windows.Forms.Control)">
            <summary>
            Determines whether the extended property for ToolTip should be serialized or not.
            </summary>
            <param name="component">An object of component.</param>
            <returns>Returns true when it need to be serialized otherwise return false.</returns>
        </member>
        <member name="M:Syncfusion.WinForms.Controls.SfToolTip.ShouldSerializeToolTip(System.Windows.Forms.Control)">
            <summary>
            Determines whether the extended property for ToolTip should be serialized or not.
            </summary>
            <param name="component">An object of component.</param>
            <returns>Returns true when it need to be serialized otherwise return false.</returns>
        </member>
        <member name="M:Syncfusion.WinForms.Controls.SfToolTip.OnControlMouseLeave(System.Object,System.EventArgs)">
            <summary>
            Occurs when the mouse pointer leaves the control.
            </summary>
            <param name="sender">The sender that contains the control from which the mouse pointer leaves.</param>
            <param name="e">A <see cref="T:System.EventArgs"/> that contains the event data.</param>
        </member>
        <member name="M:Syncfusion.WinForms.Controls.SfToolTip.OnControlMouseHover(System.Object,System.EventArgs)">
            <summary>
            Occurs when the mouse pointer rests on the control.
            </summary>
            <param name="sender">The sender that contains the control in which the mouse pointer is hovered.</param>
            <param name="e">A <see cref="T:System.EventArgs"/> that contains the event data.</param>
        </member>
        <member name="M:Syncfusion.WinForms.Controls.SfToolTip.OnControlMouseDown(System.Object,System.Windows.Forms.MouseEventArgs)">
            <summary>
            Occurs when the mouse down event of the control occurs.
            </summary>
            <param name="sender">The sender that contains the control in which the mouse down is occurred.</param>
            <param name="e">A <see cref="T:System.EventArgs"/> that contains the event data.</param>
        </member>
        <member name="M:Syncfusion.WinForms.Controls.SfToolTip.UpdateToolTip(Syncfusion.WinForms.Controls.Events.ToolTipShowingEventArgs)">
            <summary>
            Modifies the tooltip if any information is changed.
            </summary>
            <param name="eventArgs">A <see cref="!:Syncfusion.WinForms.Controls.ToolTip.ToolTipShowingEventArgs"/> that contains the event data.</param>
        </member>
        <member name="M:Syncfusion.WinForms.Controls.SfToolTip.OnPopupTimerTick(System.Object,System.EventArgs)">
            <summary>
            Occurs when the popup delay timer interval has elapsed and the timer is enabled.
            </summary>
            <param name="sender">The sender that contains the <see cref="T:System.Windows.Forms.Timer"/> for tooltip popup delay.</param>
            <param name="e">A <see cref="T:System.EventArgs"/> that contains the event data.</param>
        </member>
        <member name="M:Syncfusion.WinForms.Controls.SfToolTip.OnInitialTimerTick(System.Object,System.EventArgs)">
            <summary>
            Occurs when the initial delay timer interval has elapsed and the timer is enabled.
            </summary>
            <param name="sender">The sender that contains the <see cref="T:System.Windows.Forms.Timer"/> for tooltip initial delay.</param>
            <param name="e">A <see cref="T:System.EventArgs"/> that contains the event data.</param>
        </member>
        <member name="M:Syncfusion.WinForms.Controls.SfToolTip.OnToolTipVisibleChanged(System.Object,System.EventArgs)">
            <summary>
            Occurs when the Visible property value changes.
            </summary>
            <param name="sender">The sender that contains the tooltip form.</param>
            <param name="e">A <see cref="T:System.EventArgs"/> that contains the event data.</param>
        </member>
        <member name="M:Syncfusion.WinForms.Controls.SfToolTip.OnThemeChanged(System.Object,Syncfusion.WinForms.Core.Events.ThemeChangedEventArgs)">
            <summary>
            Raises the <see cref="!:Syncfusion.Core.WinForms.IThemeProvider.ThemeChanged"/> event.
            </summary>
            <param name="sender">The sender that contains the <see cref="!:Syncfusion.Core.WinForms.ToolTip.SfToolTip"/>.</param>
            <param name="eventArgs">A <see cref="!:Syncfusion.Core.WinForms.ThemeChangedEventArgs"/> contains the event data.</param>
        </member>
        <member name="E:Syncfusion.WinForms.Controls.SfToolTip.ThemeChanged">
            <summary>
            Occurs when theme name of the <see cref="T:Syncfusion.WinForms.Controls.SfToolTip"/> has changed.
            </summary>
        </member>
        <member name="E:Syncfusion.WinForms.Controls.SfToolTip.ToolTipShowing">
            <summary>
            Occurs when the tooltip is showing.
            </summary>
            <remarks>
            The <see cref="E:Syncfusion.WinForms.Controls.SfToolTip.ToolTipShowing"/> event is raised whenever a ToolTip is displaying, 
            either by calling <see cref="M:Syncfusion.WinForms.Controls.SfToolTip.Show(Syncfusion.WinForms.Controls.ToolTipInfo,System.Drawing.Point)"/> method or implicitly called by v<see cref="T:Syncfusion.WinForms.Controls.SfToolTip"/>.
            The <see cref="T:Syncfusion.WinForms.Controls.Events.ToolTipShowingEventArgs"/>  class contains all the information needed to customize the <see cref="T:Syncfusion.WinForms.Controls.ToolTipItem"/>, including the location, <see cref="T:Syncfusion.WinForms.Controls.ToolTipInfo"/>.
            This event can be canceled.
            </remarks>
        </member>
        <member name="E:Syncfusion.WinForms.Controls.SfToolTip.ToolTipShown">
            <summary>
            Occurs when the tooltip is shown.
            </summary>
            <remarks>
            The <see cref="E:Syncfusion.WinForms.Controls.SfToolTip.ToolTipShown"/> event is raised whenever a ToolTip is displayed, 
            either by calling <see cref="M:Syncfusion.WinForms.Controls.SfToolTip.Show(Syncfusion.WinForms.Controls.ToolTipInfo,System.Drawing.Point)"/> method or implicitly called by v<see cref="T:Syncfusion.WinForms.Controls.SfToolTip"/>.
            </remarks>
        </member>
        <member name="E:Syncfusion.WinForms.Controls.SfToolTip.DrawToolTipItem">
            <summary>
            Occurs before drawing the tooltip item.
            </summary>
            <remarks>
            By using the <see cref="E:Syncfusion.WinForms.Controls.SfToolTip.DrawToolTipItem"/> event, the appearance of the <see cref="T:Syncfusion.WinForms.Controls.ToolTipItem"/> can be customized.
            The <see cref="T:Syncfusion.WinForms.Controls.Events.DrawToolTipItemEventArgs"/>  class contains all the information needed to paint the <see cref="T:Syncfusion.WinForms.Controls.ToolTipItem"/>, including the ToolTip text, the Rectangle, and the Graphics object on which the drawing should be done. 
            This event can be canceled.
            </remarks>
        </member>
        <member name="P:Syncfusion.WinForms.Controls.SfToolTip.CanApplyTheme">
            <summary>
            Gets or sets a value indicating whether a <see cref="T:Syncfusion.WinForms.Controls.SfSkinManager"/> theme style 
            has been applied to the control.
            </summary>
            <value>The default value is <b>true</b>.</value>
        </member>
        <member name="P:Syncfusion.WinForms.Controls.SfToolTip.ThemeName">
            <summary>
            Gets or sets the theme name of the button control.
            </summary>
        </member>
        <member name="P:Syncfusion.WinForms.Controls.SfToolTip.Syncfusion#WinForms#Core#Styles#IThemeProvider#ControlName">
            <summary>
            Gets the name of the control.
            </summary>
        </member>
        <member name="P:Syncfusion.WinForms.Controls.SfToolTip.InitialDelay">
            <summary>
            Gets or sets the time that passes before the ToolTip appears.
            </summary>
            <remarks>
            By using <see cref="P:Syncfusion.WinForms.Controls.SfToolTip.InitialDelay"/> property, you can shorten or lengthen the time that the ToolTip waits before displaying a ToolTip window.
            </remarks>
        </member>
        <member name="P:Syncfusion.WinForms.Controls.SfToolTip.AutoPopDelay">
            <summary>
            Gets or sets the period of time the ToolTip remains visible if the pointer is stationary on a control.
            </summary>
            <value>
            The period of time, in milliseconds, that the ToolTip remains visible when the pointer is stationary on a control. The default value is 5000.
            </value>
            <remarks>
            By using <see cref="P:Syncfusion.WinForms.Controls.SfToolTip.AutoPopDelay"/> property, you can shorten or lengthen the time that the ToolTip window is displayed when the pointer is on a control.
            </remarks>
        </member>
        <member name="P:Syncfusion.WinForms.Controls.SfToolTip.ShadowVisible">
            <summary>
            Gets or sets a value indicating whether shadow should be drawn for the ToolTip.
            </summary>
        </member>
        <member name="P:Syncfusion.WinForms.Controls.SfToolTip.CanOverrideStyle">
            <summary>
            Gets or sets a value indicating whether control elements styles can be overridden by theme style settings.
            Default value is false.
            </summary>
            <remarks>
            By default, the control's element styles will not be overridden by theme style settings if the style is set in sample level. 
            If this property is enabled, element style will be overridden by theme style settings event if it is set in sample level.
            This property should be enabled or disabled before calling the ThemeName property of the control.
            </remarks>
        </member>
        <member name="P:Syncfusion.WinForms.Controls.SfToolTip.Syncfusion#WinForms#Core#Styles#IThemeProvider#ActiveThemeName">
            <summary>
            Gets or sets the active theme name of the tooltip.
            </summary>
        </member>
        <member name="P:Syncfusion.WinForms.Controls.SfToolTip.ToolTipControl">
            <summary>
            Gets or sets the tooltip window for the <see cref="T:Syncfusion.WinForms.Controls.SfToolTip"/>.
            </summary>
        </member>
        <member name="P:Syncfusion.WinForms.Controls.SfToolTip.ActiveControl">
            <summary>
            Gets or sets the active associated control with the tooltip.
            </summary>
        </member>
        <member name="P:Syncfusion.WinForms.Controls.SfToolTip.Style">
            <summary>
            Gets or sets the value of the <see cref="P:Syncfusion.WinForms.Controls.SfToolTip.Style"/> to customize the appearance of the tooltip.
            </summary>
        </member>
        <member name="P:Syncfusion.WinForms.Controls.SfToolTip.CanAdjustToScreenBounds">
            <summary>
            Gets or sets a value indicating whether the location of the ToolTip can be adjusted respective to the screen bounds.
            </summary>
        </member>
        <member name="T:Syncfusion.WinForms.Controls.ToolTipControl">
            <summary>
            Represents a window as a tooltip.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Controls.ToolTipControl.BALLOON_SIZE">
            <summary>
            The const for balloon size.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Controls.ToolTipControl.sfToolTip">
            <summary>
            The object of component.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Controls.ToolTipControl.balloonHeight">
            <summary>
            The height of the balloon.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Controls.ToolTipControl.balloonWidth">
            <summary>
            The width of the balloon.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Controls.ToolTipControl.shadowVisible">
            <summary>
            The value indicating whether shadow should be drawn for the ToolTip.
            </summary>
        </member>
        <member name="M:Syncfusion.WinForms.Controls.ToolTipControl.#ctor(Syncfusion.WinForms.Controls.SfToolTip)">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.WinForms.Controls.ToolTipControl"/> class.
            </summary>
            <param name="sfToolTip">The object of SfToolTip.</param>
        </member>
        <member name="M:Syncfusion.WinForms.Controls.ToolTipControl.GetToolTipLocation(System.Drawing.Point)">
            <summary>
            Gets the location of the ToolTip based on provided ToolTipLocation option.
            </summary>
            <param name="point">The cursor position.</param>
            <returns>Returns the Location of the tooltip to be shown.</returns>
        </member>
        <member name="M:Syncfusion.WinForms.Controls.ToolTipControl.AdjustToScreenPosition(System.Drawing.Point)">
            <summary>
            Adjusts the point respective to the Screen bounds.
            </summary>
            <param name="point">The location of the ToolTip which is to be adjusted with screen bounds.</param>
            <returns>Returns the adjusted position of the ToolTip.</returns>
        </member>
        <member name="M:Syncfusion.WinForms.Controls.ToolTipControl.OnLayout(System.Windows.Forms.LayoutEventArgs)">
            <summary>
            Raises the Layout event.
            </summary>
            <param name="levent">A <see cref="T:System.Windows.Forms.LayoutEventArgs"/> that contains the event data.</param>
        </member>
        <member name="M:Syncfusion.WinForms.Controls.ToolTipControl.OnPaint(System.Windows.Forms.PaintEventArgs)">
            <summary>
            Raises the Paint event.
            </summary>
            <param name="e">A <see cref="T:System.Windows.Forms.PaintEventArgs"/> that contains the event data.</param>
        </member>
        <member name="M:Syncfusion.WinForms.Controls.ToolTipControl.DrawToolTipItemBackground(System.Drawing.Graphics,System.Drawing.Rectangle,Syncfusion.WinForms.Controls.ToolTipItem)">
            <summary>
            Draws the background appearance of the <see cref="T:Syncfusion.WinForms.Controls.ToolTipItem"/>.
            </summary>
            <param name="graphics">An <see cref="T:System.Drawing.Graphics"/> object that graphics data.</param>
            <param name="toolTipItemRectangle">The rectangle of the <see cref="T:Syncfusion.WinForms.Controls.ToolTipItem"/>.</param>
            <param name="toolTipItem">An <see cref="T:Syncfusion.WinForms.Controls.ToolTipItem"/> object.</param>
        </member>
        <member name="M:Syncfusion.WinForms.Controls.ToolTipControl.GetStringFormat(Syncfusion.WinForms.Controls.ToolTipItem)">
            <summary>
            Gets the <see cref="T:System.Drawing.StringFormat"/> based on the <see cref="!:Syncfusion.WinForms.Controls.ToolTip.ToolTipItem.TextAlignment"/> 
            property of the <see cref="T:Syncfusion.WinForms.Controls.ToolTipItem"/>
            </summary>
            <param name="toolTipItem">An <see cref="T:Syncfusion.WinForms.Controls.ToolTipItem"/> object.</param>
            <returns>Returns the <see cref="T:System.Drawing.StringFormat"/>.</returns>
        </member>
        <member name="M:Syncfusion.WinForms.Controls.ToolTipControl.IsImageListAvailable(Syncfusion.WinForms.Controls.ToolTipItem)">
            <summary>
            Checks whether valid image is available in <see cref="!:Syncfusion.WinForms.Controls.ToolTip.ToolTipItem.ImageList"/> or not.
            </summary>
            <param name="toolTipItem">An <see cref="T:Syncfusion.WinForms.Controls.ToolTipItem"/> object.</param>
            <returns>true if valid image is available, otherwise false.</returns>
        </member>
        <member name="M:Syncfusion.WinForms.Controls.ToolTipControl.GetImageSize(Syncfusion.WinForms.Controls.ToolTipItem)">
            <summary>
            Gets the image size of the <see cref="!:Syncfusion.WinForms.Controls.ToolTip.ToolTipItem.Image"/>.
            </summary>
            <param name="toolTipItem">An <see cref="T:Syncfusion.WinForms.Controls.ToolTipItem"/> object.</param>
            <returns>Returns the specified size if ImageSize is set, otherwise returns the size of the image itself.</returns>
        </member>
        <member name="M:Syncfusion.WinForms.Controls.ToolTipControl.SetControlLocation(System.Drawing.Size,Syncfusion.WinForms.Controls.ToolTipItem,Syncfusion.WinForms.Controls.Enums.ToolTipLocation,System.Boolean)">
            <summary>
            Sets the location of the <see cref="P:Syncfusion.WinForms.Controls.ToolTipItem.Control"/>.
            </summary>
            <param name="size">The current size of the tooltip.</param>
            <param name="toolTipItem">The object of ToolTipItem.</param>
            <param name="toolTipLocation">The location in which the tooltip is to be shown.</param>
            <param name="previousItemSeparatorEnabled">The value indicating that the separator for previous item is enabled or not.</param>
        </member>
        <member name="M:Syncfusion.WinForms.Controls.ToolTipControl.GetGraphicsPath(System.Boolean)">
            <summary>
            Gets the GraphicsPath based on the tooltip location for balloon drawing.
            </summary>
            <param name="region">Value indicating to get graphics path based on region updating.</param>
            <returns>Returns the GraphicsPath for balloon drawing.</returns>
        </member>
        <member name="M:Syncfusion.WinForms.Controls.ToolTipControl.GetBalloonBeakPath">
            <summary>
            Gets the GraphicsPath of the ballon beak area.
            </summary>
            <returns>Returns the GraphicsPath of the ballon beak area.</returns>
        </member>
        <member name="M:Syncfusion.WinForms.Controls.ToolTipControl.DrawToolTipItem(System.Drawing.Graphics,System.Drawing.Rectangle,Syncfusion.WinForms.Controls.ToolTipItem,System.Boolean)">
            <summary>
            Draws the appearance of the <see cref="T:Syncfusion.WinForms.Controls.ToolTipItem"/>.
            </summary>
            <param name="graphics">An <see cref="T:System.Drawing.Graphics"/> object that graphics data.</param>
            <param name="toolTipItemRectangle">The rectangle of the <see cref="T:Syncfusion.WinForms.Controls.ToolTipItem"/>.</param>
            <param name="toolTipItem">An <see cref="T:Syncfusion.WinForms.Controls.ToolTipItem"/> object.</param>
            <param name="previousItemSeparatorEnabled">The value indicating that the separator for previous item is enabled or not.</param>
        </member>
        <member name="M:Syncfusion.WinForms.Controls.ToolTipControl.DrawToolTipItemText(System.Drawing.Graphics,System.Drawing.Rectangle,Syncfusion.WinForms.Controls.ToolTipItem,System.Boolean)">
            <summary>
            Draws the ToolTip text of the <see cref="T:Syncfusion.WinForms.Controls.ToolTipItem"/>.
            </summary>
            <param name="graphics">An <see cref="T:System.Drawing.Graphics"/> object that graphics data.</param>
            <param name="toolTipItemRectangle">The rectangle of the <see cref="T:Syncfusion.WinForms.Controls.ToolTipItem"/>.</param>
            <param name="toolTipItem">An <see cref="T:Syncfusion.WinForms.Controls.ToolTipItem"/> object.</param>
            <param name="previousItemSeparatorEnabled">The value indicating that the separator for previous item is enabled or not.</param>
        </member>
        <member name="M:Syncfusion.WinForms.Controls.ToolTipControl.DrawToolTipItemSeparator(System.Drawing.Graphics,System.Drawing.Rectangle,Syncfusion.WinForms.Controls.ToolTipItem)">
            <summary>
            Draws the separator line of the <see cref="T:Syncfusion.WinForms.Controls.ToolTipItem"/>, 
            if <see cref="!:Syncfusion.WinForms.Controls.ToolTip.ToolTipItem.EnableSeparator"/> is true.
            </summary>
            <param name="graphics">An <see cref="T:System.Drawing.Graphics"/> object that graphics data.</param>
            <param name="toolTipItemRectangle">The rectangle of the <see cref="T:Syncfusion.WinForms.Controls.ToolTipItem"/>.</param>
            <param name="toolTipItem">An <see cref="T:Syncfusion.WinForms.Controls.ToolTipItem"/> object.</param>
        </member>
        <member name="M:Syncfusion.WinForms.Controls.ToolTipControl.DrawToolTipItemImage(System.Drawing.Graphics,System.Drawing.Rectangle,Syncfusion.WinForms.Controls.ToolTipItem,System.Boolean)">
            <summary>
            Draws the ToolTip image of the <see cref="T:Syncfusion.WinForms.Controls.ToolTipItem"/>.
            </summary>
            <param name="graphics">An <see cref="T:System.Drawing.Graphics"/> object that graphics data.</param>
            <param name="toolTipItemRectangle">The rectangle of the <see cref="T:Syncfusion.WinForms.Controls.ToolTipItem"/>.</param>
            <param name="toolTipItem">An <see cref="T:Syncfusion.WinForms.Controls.ToolTipItem"/> object.</param>
            <param name="previousItemSeparatorEnabled">The value indicating that the separator for previous item is enabled or not.</param>
        </member>
        <member name="M:Syncfusion.WinForms.Controls.ToolTipControl.GetTextRectangle(System.Drawing.Rectangle,Syncfusion.WinForms.Controls.ToolTipItem,System.Boolean)">
            <summary>
            Gets the rectangle of <see cref="!:Syncfusion.WinForms.Controls.ToolTip.ToolTipItem.Text"/>.
            </summary>
            <param name="toolTipItemRectangle">The rectangle of the <see cref="T:Syncfusion.WinForms.Controls.ToolTipItem"/>.</param>
            <param name="toolTipItem">An <see cref="T:Syncfusion.WinForms.Controls.ToolTipItem"/> object.</param>
            <param name="previousItemSeparatorEnabled">The value indicating that the separator for previous item is enabled or not.</param>
            <returns>Returns the rectangle of the <see cref="!:Syncfusion.WinForms.Controls.ToolTip.ToolTipItem.Text"/>.</returns>
        </member>
        <member name="M:Syncfusion.WinForms.Controls.ToolTipControl.GetImageRectangle(System.Drawing.Rectangle,Syncfusion.WinForms.Controls.ToolTipItem,System.Boolean)">
            <summary>
            Gets the rectangle of the <see cref="!:Syncfusion.WinForms.Controls.ToolTip.ToolTipItem.Image"/>.
            </summary>
            <param name="toolTipItemRectangle">The rectangle of the <see cref="T:Syncfusion.WinForms.Controls.ToolTipItem"/>.</param>
            <param name="toolTipItem">An <see cref="T:Syncfusion.WinForms.Controls.ToolTipItem"/> object.</param>
            <param name="previousItemSeparatorEnabled">The value indicating that the separator for previous item is enabled or not.</param>
            <returns>Returns the rectangle of the <see cref="!:Syncfusion.WinForms.Controls.ToolTip.ToolTipItem.Image"/>.</returns>
        </member>
        <member name="P:Syncfusion.WinForms.Controls.ToolTipControl.IsManualShowing">
            <summary>
            Gets or sets a value indicating whether the tooltip is shown through show method or not.
            </summary>
        </member>
        <member name="P:Syncfusion.WinForms.Controls.ToolTipControl.ToolTipLocation">
            <summary>
            Gets or sets the location in which the tooltip to be shown.
            Maintained temporarily to change the balloon drawing when the tooltip is clipped in screen bounds case.
            </summary>
        </member>
        <member name="P:Syncfusion.WinForms.Controls.ToolTipControl.ToolTipInfo">
            <summary>
            Gets or sets the ToolTipInfo to be shown in the tooltip.
            </summary>
        </member>
        <member name="P:Syncfusion.WinForms.Controls.ToolTipControl.CursorPosition">
            <summary>
            Gets or sets the point in which the tooltip is to be shown.
            </summary>
        </member>
        <member name="P:Syncfusion.WinForms.Controls.ToolTipControl.ShadowVisible">
            <summary>
            Gets or sets a value indicating whether shadow should be drawn for the ToolTip.
            </summary>
        </member>
        <member name="P:Syncfusion.WinForms.Controls.ToolTipControl.IsLocationChanged">
            <summary>
            Gets or sets a value indicating whether the location of the tooltip is changed in tooltip showing event.
            </summary>
        </member>
        <member name="P:Syncfusion.WinForms.Controls.ToolTipControl.ShowWithoutActivation">
            <summary>
            Gets a value indicating whether the window will be activated when it is shown.
            </summary>
            <remarks>
            Overridden to return true to avoid activating the tooltip. If not, parent form will lost focus when the tooltip is activated.
            </remarks>
        </member>
        <member name="P:Syncfusion.WinForms.Controls.ToolTipControl.CreateParams">
            <summary>
            Gets the required creation parameters when the control handle is created.
            </summary>
            <remarks>
            Overridden to set the tooltip window's extended style as TopMost. 
            If not, tooltip will not be shown in front as we are not activating the tooltip window.
            </remarks>
        </member>
        <member name="T:Syncfusion.WinForms.Controls.Events.ListPropertyChangedEventHandler">
            <summary>
            Used by Changing and Changed events of strong typed collections.
            </summary>
            <param name="sender">The sender that contains the object of <see cref="!:Syncfusion.WinForms.Core.ListPropertyChangedEventArgs"/>.</param>
            <param name="e">An object of <see cref="!:Syncfusion.WinForms.Core.ListPropertyChangedEventArges"/> that contains event data.</param>
        </member>
        <member name="T:Syncfusion.WinForms.Controls.Events.ListPropertyChangedEventArgs">
            <summary>
            Represents a class used by Changed event of strong typed collections.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Controls.Events.ListPropertyChangedEventArgs.listChangedType">
            <summary>
            The changed type of the List property.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Controls.Events.ListPropertyChangedEventArgs.index">
            <summary>
            The index.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Controls.Events.ListPropertyChangedEventArgs.item">
            <summary>
            The item object.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Controls.Events.ListPropertyChangedEventArgs.property">
            <summary>
            The property name.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Controls.Events.ListPropertyChangedEventArgs.tag">
            <summary>
            The tag object.
            </summary>
        </member>
        <member name="M:Syncfusion.WinForms.Controls.Events.ListPropertyChangedEventArgs.#ctor(Syncfusion.WinForms.Controls.Enums.ListPropertyChangedType,System.Int32,System.Object,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.WinForms.Controls.Events.ListPropertyChangedEventArgs"/> class.
            </summary>
            <param name="listChangedType">ListPropertyChangedType value.</param>
            <param name="index">Index in which the list gets affected.</param>
            <param name="item">Item which affects the collection.</param>
            <param name="property">Property in which the collection gets affected.</param>
        </member>
        <member name="M:Syncfusion.WinForms.Controls.Events.ListPropertyChangedEventArgs.#ctor(Syncfusion.WinForms.Controls.Enums.ListPropertyChangedType,System.Int32,System.Object,System.String,System.Object)">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.WinForms.Controls.Events.ListPropertyChangedEventArgs"/> class.
            </summary>
            <param name="listChangedType">ListPropertyChangedType value.</param>
            <param name="index">Index in which the list gets affected.</param>
            <param name="item">Item which affects the collection.</param>
            <param name="property">Property in which the collection gets affected.</param>
            <param name="tag">Tag for additional information.</param>
        </member>
        <member name="P:Syncfusion.WinForms.Controls.Events.ListPropertyChangedEventArgs.Action">
            <summary>
            Gets the type in which the list changed.
            </summary>
        </member>
        <member name="P:Syncfusion.WinForms.Controls.Events.ListPropertyChangedEventArgs.Index">
            <summary>
            Gets the index of the item that is changed.
            </summary>
        </member>
        <member name="P:Syncfusion.WinForms.Controls.Events.ListPropertyChangedEventArgs.Item">
            <summary>
            Gets the reference to the affected item.
            </summary>
        </member>
        <member name="P:Syncfusion.WinForms.Controls.Events.ListPropertyChangedEventArgs.Property">
            <summary>
            Gets the name of the affected property.
            </summary>
        </member>
        <member name="P:Syncfusion.WinForms.Controls.Events.ListPropertyChangedEventArgs.Inner">
            <summary>
            Gets the <see cref="T:System.EventArgs"/>.
            </summary>
            <remarks>If tag is EventArgs, then it returns the Tag casted to EventArgs.</remarks>
        </member>
        <member name="P:Syncfusion.WinForms.Controls.Events.ListPropertyChangedEventArgs.Tag">
            <summary>
            Gets or sets a tag.
            </summary>
        </member>
        <member name="T:Syncfusion.WinForms.Controls.ButtonDesigner">
            <summary>
            Implements the <see cref="T:System.Windows.Form.ControlDesigner"/> for <see cref="T:Syncfusion.WinForms.Controls.SfButton"/> control.
            </summary>
            <exclude/>
        </member>
        <member name="F:Syncfusion.WinForms.Controls.ButtonDesigner.actionLists">
            <summary>
            Designer ActionList collection.
            </summary>
        </member>
        <member name="M:Syncfusion.WinForms.Controls.ButtonDesigner.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.WinForms.Controls.ButtonDesigner"/> class.
            </summary>
        </member>
        <member name="P:Syncfusion.WinForms.Controls.ButtonDesigner.ActionLists">
            <summary>
            Gets a designer action list collection to provide the designer action support for <see cref="T:Syncfusion.WinForms.Controls.SfButton"/> control.
            </summary>
        </member>
        <member name="T:Syncfusion.WinForms.Controls.ButtonActionList">
            <summary>
            Defines a class which implements the <see cref="T:Syncfusion.WinForms.Core.DesignerActionListBase"/> that 
            supports the actions performed in the designer window of the <see cref="T:Syncfusion.WinForms.Controls.SfButton"/> control.
            </summary>
            <exclude/>
        </member>
        <member name="T:Syncfusion.WinForms.Core.DesignerActionListBase">
            <summary>
            Defines a class which implements the <see cref="T:System.ComponentModel.Design.DesignerActionList"/> that supports the actions performed in the designer window of the control.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Core.DesignerActionListBase.documentationLink">
            <summary>
            The string value contains the documentation link details.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Core.DesignerActionListBase.forumLink">
            <summary>
            The string value contains the forum link details.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Core.DesignerActionListBase.directTracLink">
            <summary>
            The string value contains the online link details.
            </summary>
        </member>
        <member name="M:Syncfusion.WinForms.Core.DesignerActionListBase.#ctor(System.ComponentModel.IComponent)">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.WinForms.Core.DesignerActionListBase"/> class.
            </summary>
            <param name="component">A component related to the  <see cref="T:System.ComponentModel.Design.DesignerActionList"/>.</param>
        </member>
        <member name="M:Syncfusion.WinForms.Core.DesignerActionListBase.GetSortedActionItems">
            <summary>
            Returns the collection of <see cref="T:System.ComponentModel.Design.DesignerActionItem"/> objects contained in the list.
            </summary>
            <returns>
            A <see cref="T:System.ComponentModel.Design.DesignerActionItemCollection"/> array that contains the <see cref="T:System.ComponentModel.Design.DesignerActionItem"/> in this list.
            </returns>
        </member>
        <member name="M:Syncfusion.WinForms.Core.DesignerActionListBase.AddDefaultActionItems(System.ComponentModel.Design.DesignerActionItemCollection)">
            <summary>
            Used to add the default action items to be displayed in smart tag panel.
            </summary>
            <param name="actionItems">Collection of ActionItems of the SmartTag panel.</param>
            <returns>returns the <see cref="T:System.ComponentModel.Design.DesignerActionItemCollection"/> array that 
            contains the <see cref="T:System.ComponentModel.Design.DesignerActionItem"/> of the SmartTag panel.</returns>
        </member>
        <member name="M:Syncfusion.WinForms.Core.DesignerActionListBase.OnViewOnlineDocumentation">
            <summary>
            Opens the User Guide documentation for WindowsForms link.
            </summary>
        </member>
        <member name="M:Syncfusion.WinForms.Core.DesignerActionListBase.OnViewForums">
            <summary>
            Opens the Forums for WindowsForms link.
            </summary>
        </member>
        <member name="M:Syncfusion.WinForms.Core.DesignerActionListBase.OnViewDirectTrac">
            <summary>
            Opens the Direct-Trac login link.
            </summary>
        </member>
        <member name="M:Syncfusion.WinForms.Core.DesignerActionListBase.OnView(System.String)">
            <summary>
            Used to open the provided link.
            </summary>
            <param name="link">The link to be opened in browser.</param>
        </member>
        <member name="P:Syncfusion.WinForms.Core.DesignerActionListBase.DocumentationLink">
            <summary>
            Gets or sets the link for Online Documentation.
            </summary>
        </member>
        <member name="P:Syncfusion.WinForms.Core.DesignerActionListBase.ForumLink">
            <summary>
            Gets or sets the link for Forums.
            </summary>
        </member>
        <member name="P:Syncfusion.WinForms.Core.DesignerActionListBase.DirectTracLink">
            <summary>
            Gets or sets the Direct-Trac Login link.
            </summary>
        </member>
        <member name="M:Syncfusion.WinForms.Controls.ButtonActionList.#ctor(System.ComponentModel.IComponent)">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.WinForms.Controls.ButtonActionList"/> class.
            </summary>
            <param name="component">A component related to the  <see cref="T:System.ComponentModel.Design.DesignerActionList"/>.</param>
        </member>
        <member name="M:Syncfusion.WinForms.Controls.ButtonActionList.GetSortedActionItems">
            <summary>
            Returns the collection of <see cref="T:System.ComponentModel.Design.DesignerActionItem"/> objects contained in the list.
            </summary>
            <returns>
            A <see cref="T:System.ComponentModel.Design.DesignerActionItemCollection"/> array that contains the <see cref="T:System.ComponentModel.Design.DesignerActionItem"/> in this list.
            </returns>
        </member>
        <member name="M:Syncfusion.WinForms.Controls.ButtonActionList.GetProperty(System.String)">
            <summary>
            Returns the <see cref="T:System.ComponentModel.PropertyDescriptor"/> value from the component based on the given property name.
            </summary>
            <param name="propertyName">The name of the property used to get the property descriptor.</param>
            <returns>Returns the property descriptor value.</returns>
        </member>
        <member name="M:Syncfusion.WinForms.Controls.ButtonActionList.SetValue(System.String,System.Object)">
            <summary>
            Initialize the value to the <see cref="T:System.ComponentModel.PropertyDescriptor"/> of the component based on the property name.
            </summary>
            <param name="propertyName">The property name used to initialize the value.</param>
            <param name="value">The object value to initialize the <see cref="T:System.ComponentModel.PropertyDescriptor"/> of the component.</param>
        </member>
        <member name="M:Syncfusion.WinForms.Controls.ButtonActionList.GetValue(System.String)">
            <summary>
            Gets the value of the <see cref="T:System.ComponentModel.PropertyDescriptor"/> of the component based on the property name.
            </summary>
            <param name="propertyName">The string value used to get the value of the component.</param>
            <returns>Returns the object value from component.</returns>
        </member>
        <member name="P:Syncfusion.WinForms.Controls.ButtonActionList.Name">
            <summary>
            Gets or sets the name of the <see cref="T:Syncfusion.WinForms.Controls.SfButton"/> control.
            </summary>
        </member>
        <member name="P:Syncfusion.WinForms.Controls.ButtonActionList.Text">
            <summary>
            Gets or sets the text value of the <see cref="T:Syncfusion.WinForms.Controls.SfButton"/> control.
            </summary>
            <remarks>
            Changing this property's value at runtime raises the TextChanged event.
            If the <see cref="P:Syncfusion.WinForms.Controls.SfButton.AllowRichText"/> property is set to true, can use the
            rich text value to show the button caption.
            </remarks>
            <value>A string value representing the button's caption.</value>
        </member>
        <member name="P:Syncfusion.WinForms.Controls.ButtonActionList.Image">
            <summary>
            Gets or sets the image of the <see cref="T:Syncfusion.WinForms.Controls.SfButton"/> control.
            </summary>
            <value>An <see cref="T:System.Drawing.Image"/> object representing the image to be displayed on the button.
            The default value is <b>null</b>.</value>
            <remarks>
            <para>
            The <see cref="T:Syncfusion.WinForms.Controls.SfButton"/> allows to animate,
            when set the animated GIF file to <see cref="P:Syncfusion.WinForms.Controls.SfButton.Image"/> property and enable the 
            <see cref="P:Syncfusion.WinForms.Controls.SfButton.AllowImageAnimation"/> property is true.
            </para>
            <para>
            The button's image can also be specified using the ImageList and ImageIndex properties.
            Assign an image collection to the button's ImageList property and then use the ImageIndex property 
            to specify the index of the image to display.
            </para>
            </remarks>
        </member>
        <member name="P:Syncfusion.WinForms.Controls.ButtonActionList.ImageAlign">
            <summary>
            Gets or sets the image alignment value of the <see cref="T:Syncfusion.WinForms.Controls.SfButton"/> control.
            </summary>
            <value>One of the System.Drawing.ContentAlignment values. The default value is MiddleCenter.</value>
        </member>
        <member name="P:Syncfusion.WinForms.Controls.ButtonActionList.TextAlign">
            <summary>
            Gets or sets the text alignment value of the <see cref="T:Syncfusion.WinForms.Controls.SfButton"/> control.
            </summary>
            <value>One of the System.Drawing.ContentAlignment values. The default value is MiddleCenter.</value>
        </member>
        <member name="P:Syncfusion.WinForms.Controls.ButtonActionList.BackColor">
            <summary>
            Gets or sets the back color of the <see cref="T:Syncfusion.WinForms.Controls.SfButton"/> control.
            </summary>
            <remarks>
            This color has filled to background of the button only when set the
            <see cref="!:GradientStyle"/> property to 
            GradientStyle.None or <see cref="!:Syncfusion.WinForms.Controls.ButtonVisualStyle.GradientBrush"/> property to null.
            </remarks>
        </member>
        <member name="P:Syncfusion.WinForms.Controls.ButtonActionList.ForeColor">
            <summary>
            Gets or sets the fore color of the <see cref="T:Syncfusion.WinForms.Controls.SfButton"/> control.
            </summary>
            <value> 
            A <see cref="T:System.Drawing.Color"/> value representing the foreground color of the control.
            </value>
        </member>
        <member name="P:Syncfusion.WinForms.Controls.ButtonActionList.FocusRectangleVisible">
            <summary>
            Gets or sets a value indicating whether the <see cref="T:Syncfusion.WinForms.Controls.SfButton"/> has show 
            focus rectangle when receive focus.
            </summary>
            <value>The <see cref="T:System.Boolean"/> value that specifies whether the dotted focus rectangle is displayed 
            within the SimpleButton when it has focus. The default value is <b>true</b>.</value>
        </member>
        <member name="T:Syncfusion.WinForms.Controls.Enums.ListPropertyChangedType">
            <summary>
            Specifies the change in the ListProperty. Used by Changing and Changed events of strong typed collections.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Controls.Enums.ListPropertyChangedType.Add">
            <summary>
            An item is appended.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Controls.Enums.ListPropertyChangedType.Remove">
            <summary>
            An item is removed.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Controls.Enums.ListPropertyChangedType.Insert">
            <summary>
            An item is inserted.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Controls.Enums.ListPropertyChangedType.Move">
            <summary>
            An item is moved.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Controls.Enums.ListPropertyChangedType.Refresh">
            <summary>
            The whole collection is changed.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Controls.Enums.ListPropertyChangedType.ItemChanged">
            <summary>
            An item is replaced.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Controls.Enums.ListPropertyChangedType.ItemPropertyChanged">
            <summary>
            A nested property of an item is changed.
            </summary>
        </member>
        <member name="T:Syncfusion.WinForms.Controls.Enums.ToolTipStyle">
            <summary>
            Defines the constants that specifies the style of the tooltip.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Controls.Enums.ToolTipStyle.Regular">
            <summary>
            Indicates that the tooltip should be drawn as regular rectangle.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Controls.Enums.ToolTipStyle.Balloon">
            <summary>
            Indicates that the tooltip should be drawn as balloon.
            </summary>
        </member>
        <member name="T:Syncfusion.WinForms.Controls.Enums.ToolTipImageAlignment">
            <summary>
            Defines the constants that specifies the options of image alignment.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Controls.Enums.ToolTipImageAlignment.Left">
            <summary>
            Image is aligned at  the left.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Controls.Enums.ToolTipImageAlignment.Right">
            <summary>
            Image is aligned at the right.
            </summary>
        </member>
        <member name="T:Syncfusion.WinForms.Controls.Enums.ToolTipLocation">
            <summary>
            Defines the constants that specifies the location of the tooltip.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Controls.Enums.ToolTipLocation.Default">
            <summary>
            Indicates that the tooltip will be shown in its mouse position. If ToolTipStyle is Balloon, will be shown in TopRight of mouse position. Otherwise, BottomRight of the mouse position.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Controls.Enums.ToolTipLocation.TopLeft">
            <summary>
            Indicates that the tooltip should be shown in TopLeft of the mouse position.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Controls.Enums.ToolTipLocation.TopRight">
            <summary>
            Indicates that the tooltip should be shown in TopRight of the mouse position.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Controls.Enums.ToolTipLocation.TopCenter">
            <summary>
            Indicates that the tooltip should be shown in TopCenter of the mouse position.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Controls.Enums.ToolTipLocation.BottomLeft">
            <summary>
            Indicates that the tooltip should be shown in BottomLeft of the mouse position.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Controls.Enums.ToolTipLocation.BottomRight">
            <summary>
            Indicates that the tooltip should be shown in BottomRight of the mouse position.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Controls.Enums.ToolTipLocation.BottomCenter">
            <summary>
            Indicates that the tooltip should be shown in BottomCenter of the mouse position.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Controls.Enums.ToolTipLocation.RightCenter">
            <summary>
            Indicates that the tooltip should be shown in RightCenter of the mouse position.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Controls.Enums.ToolTipLocation.LeftCenter">
            <summary>
            Indicates that the tooltip should be shown in LeftCenter of the mouse position.
            </summary>
        </member>
        <member name="T:Syncfusion.WinForms.Controls.Enums.AutoScrollReason">
            <summary>
            Defines the constants that specifies the type of auto scrolling.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Controls.Enums.AutoScrollReason.MouseDragging">
            <summary>
            An user has dragged the mouse outside the auto scroll bounds.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Controls.Enums.AutoScrollReason.OleDragOver">
            <summary>
            An user is moving the mouse over the control during OLE drag-and-drop operation.
            </summary>
        </member>
        <member name="T:Syncfusion.WinForms.Controls.Enums.AutoScrollOrientation">
            <summary>
            Defines the constants that specifies auto scrolling direction.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Controls.Enums.AutoScrollOrientation.None">
            <summary>
            No auto scrolling.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Controls.Enums.AutoScrollOrientation.Horizontal">
            <summary>
            Only horizontal auto scrolling.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Controls.Enums.AutoScrollOrientation.Vertical">
            <summary>
            Only vertical auto scrolling.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Controls.Enums.AutoScrollOrientation.Both">
            <summary>
            Both horizontal and vertical auto scrolling.
            </summary>
        </member>
        <member name="T:Syncfusion.WinForms.Controls.Enums.ScrollBarRegion">
            <summary>
            Defines the constants that specifies the scrollbar regions.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Controls.Enums.ScrollBarRegion.None">
            <summary>
            Sets no region.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Controls.Enums.ScrollBarRegion.MinButton">
            <summary>
            Indicates the minimum button region.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Controls.Enums.ScrollBarRegion.MaxButton">
            <summary>
            Indicates the Maximum button region.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Controls.Enums.ScrollBarRegion.Thumb">
            <summary>
            Indicates the Thumb region.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Controls.Enums.ScrollBarRegion.ThumbLeftRegion">
            <summary>
            Indicates the up or left rectangle of the scrollbar thumb.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Controls.Enums.ScrollBarRegion.ThumbRightRegion">
            <summary>
            Indicates the right or bottom rectangle of the scrollbar thumb.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Controls.Enums.ScrollBarRegion.Length">
            <summary>
            Defines the length of the scrollbar regions.
            </summary>
        </member>
        <member name="T:Syncfusion.WinForms.Controls.Enums.ButtonVisualState">
            <summary>
            Specifies the state of a button.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Controls.Enums.ButtonVisualState.Default">
            <summary>
            The button has its normal appearance.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Controls.Enums.ButtonVisualState.Pressed">
            <summary>
            The button appears pressed.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Controls.Enums.ButtonVisualState.InActive">
            <summary>
            The button is inactive.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Controls.Enums.ButtonVisualState.Hover">
            <summary>
            The mouse hover on the button.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Controls.Enums.ButtonVisualState.Focused">
            <summary>
            The focus state of the button.
            </summary>
        </member>
        <member name="T:Syncfusion.WinForms.Controls.ButtonDrawingHelper">
            <summary>
            Represents a class that draws the <see cref="T:Syncfusion.WinForms.Controls.SfButton"/> control.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Controls.ButtonDrawingHelper.AnyRight">
            <summary>
            The value contains any right alignment combination.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Controls.ButtonDrawingHelper.AnyBottom">
            <summary>
            The value contains any bottom alignment combination.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Controls.ButtonDrawingHelper.AnyCenter">
            <summary>
            The value contains any center alignment combination.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Controls.ButtonDrawingHelper.AnyMiddle">
            <summary>
            The value contains any middle alignment combination.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Controls.ButtonDrawingHelper.button">
            <summary>
            The <see cref="T:Syncfusion.WinForms.Controls.SfButton"/> control.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Controls.ButtonDrawingHelper.textRectangle">
            <summary>
            The rectangle area to draw the text.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Controls.ButtonDrawingHelper.textAlignment">
            <summary>
            The alignment of the text.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Controls.ButtonDrawingHelper.imageRect">
            <summary>
            The rectangle area to draw the image.
            </summary>
        </member>
        <member name="M:Syncfusion.WinForms.Controls.ButtonDrawingHelper.#ctor(Syncfusion.WinForms.Controls.SfButton)">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.WinForms.Controls.ButtonDrawingHelper"/> class.
            </summary>
            <param name="button">A <see cref="T:Syncfusion.WinForms.Controls.SfButton"/> instance.</param>
        </member>
        <member name="M:Syncfusion.WinForms.Controls.ButtonDrawingHelper.Dispose">
            <summary>
            Clean up the unmanaged resources.
            </summary>
        </member>
        <member name="M:Syncfusion.WinForms.Controls.ButtonDrawingHelper.DrawButton(System.Drawing.Graphics)">
            <summary>
            Draws the <see cref="T:Syncfusion.WinForms.Controls.SfButton"/> control.
            </summary>
            <param name="graphics" type="System.Drawing.Graphics"> The graphics object to draw.</param>
        </member>
        <member name="M:Syncfusion.WinForms.Controls.ButtonDrawingHelper.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="dispose">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:Syncfusion.WinForms.Controls.ButtonDrawingHelper.GetBackgroundRect(System.Drawing.Rectangle,System.Single)">
            <summary>
            Calculates the background rectangle area.
            </summary>
            <param name="rect">The button client area.</param>
            <param name="borderWidth">The integer value contains the border width.</param>
            <returns>Returns the calculated background rectangle value.</returns>
        </member>
        <member name="M:Syncfusion.WinForms.Controls.ButtonDrawingHelper.GetDisplaceValue(System.Int32,System.Single,System.Int32)">
            <summary>
            Calculate the between space value based on the position and size.
            </summary>
            <param name="position">A integer value indicates the position.</param>
            <param name="size">A size value used to calculate the displace value.</param>
            <param name="clientSize">The client size value used to calculate the displace value.</param>
            <returns>Returns the between space value.</returns>
        </member>
        <member name="M:Syncfusion.WinForms.Controls.ButtonDrawingHelper.CalculateBounds(System.Drawing.SizeF,System.Drawing.RectangleF,System.Drawing.ContentAlignment,System.Boolean)">
            <summary>
            Calculate the bounds based on the horizontal or vertical alignment.
            </summary>
            <param name="size">The size value used to calculate the bounds.</param>
            <param name="rectangle">The rectangle value used to calculate the bounds.</param>
            <param name="alignment">The alignment value used to calculate bounds.</param>
            <param name="isVertical">The boolean value used to calculate bounds in horizontal or vertical direction.</param>
            <returns>Returns the calculated bounds value.</returns>
        </member>
        <member name="M:Syncfusion.WinForms.Controls.ButtonDrawingHelper.GetRtlAlignment(System.Drawing.ContentAlignment)">
            <summary>
            Gets the alignment in the right to left mode.
            </summary>
            <param name="align">A alignment value to convert in Right to left mode.</param>
            <returns>Returns the alignment in the right to left mode.</returns>
        </member>
        <member name="M:Syncfusion.WinForms.Controls.ButtonDrawingHelper.GetDisplacedPosition(System.Int32,System.Single,System.Int32)">
            <summary>
            Calculate the between space value based on the alignment and size values.
            </summary>
            <param name="alignment">The alignment flag value to calculate the position.</param>
            <param name="size">A size value used to calculate the displace value.</param>
            <param name="clientSize">The client size value used to calculate the displace value.</param>
            <returns>Returns the between space value.</returns>
        </member>
        <member name="M:Syncfusion.WinForms.Controls.ButtonDrawingHelper.GetAlignmentFlags(System.Drawing.ContentAlignment,System.Windows.Forms.TextImageRelation,System.Boolean)">
            <summary>
            Gets the alignment flag value based on the <b>TextImageRelation</b> value.
            </summary>
            <param name="alignment">The alignment value.</param>
            <param name="relation">The relation between the text and image.</param>
            <param name="vertical">The boolean value used to specify the vertical alignment of text and image.</param>
            <returns>The flag value based on the alignment.</returns>
        </member>
        <member name="M:Syncfusion.WinForms.Controls.ButtonDrawingHelper.GetImageDisplace(System.Int32,System.Int32,System.Int32,System.Single,System.Int32)">
            <summary>
            Calculate the displacement value of the image based on the image and text alignment.
            </summary>
            <param name="imageAlignFlag">The image alignment flag value used to calculate the displacement value.</param>
            <param name="textAlignFlag">The text alignment flag value used to calculate the displacement value.</param>
            <param name="imageSize">The image size used to calculate the image displacement value.</param>
            <param name="textSize">The text size used to calculate the image displacement value.</param>
            <param name="clientSize">The client size value used to calculate the displacement value.</param>
            <returns>Returns the image displacement value.</returns>
        </member>
        <member name="M:Syncfusion.WinForms.Controls.ButtonDrawingHelper.GetTextDisplace(System.Int32,System.Int32,System.Int32,System.Single,System.Int32)">
            <summary>
            Calculate the displacement value of the text based on the image and text alignment.
            </summary>
            <param name="imageAlign">The image alignment flag value used to calculate the displacement value.</param>
            <param name="textAlign">The text alignment flag value used to calculate the displacement value.</param>
            <param name="imageSize">The image size used to calculate the text displacement value.</param>
            <param name="textSize">The text size used to calculate the text displacement value.</param>
            <param name="clientSize">The client size value used to calculate the image displacement value.</param>
            <returns>Returns the text displacement value.</returns>
        </member>
        <member name="M:Syncfusion.WinForms.Controls.ButtonDrawingHelper.CalculateBounds(System.Drawing.ContentAlignment,System.Drawing.Rectangle,System.Drawing.SizeF)">
            <summary>
            Calculate the rectangle value based on the alignment, size and rectangle.
            </summary>
            <param name="align">A alignment value used to calculate the bounds.</param>
            <param name="rectangle">A rectangle value used to calculate the bounds.</param>
            <param name="size">A size value used to calculate the bounds.</param>
            <returns>Returns the calculated bounds value.</returns>
        </member>
        <member name="M:Syncfusion.WinForms.Controls.ButtonDrawingHelper.DrawBorder(System.Drawing.Graphics)">
            <summary>
            Draws the border of the <see cref="T:Syncfusion.WinForms.Controls.SfButton"/> based on the <see cref="!:Syncfusion.WinForms.Controls.Buttons.ButtonVisualStyle.Border"/> property.
            </summary>
            <param name="graphics" type="System.Drawing.Graphics">The graphics object to draw.</param>
        </member>
        <member name="M:Syncfusion.WinForms.Controls.ButtonDrawingHelper.DrawFocusRectangle(System.Drawing.Graphics)">
            <summary>
            Draws the focus rectangle when control got focused and the <see cref="P:Syncfusion.WinForms.Controls.SfButton.FocusRectangleVisible"/> property is true.
            </summary>
            <param name="graphics">The graphics used to draw the focus rectangle.</param>
        </member>
        <member name="M:Syncfusion.WinForms.Controls.ButtonDrawingHelper.CalculateBorderRect(System.Drawing.RectangleF)">
            <summary>
            Calculates the border rectangle based on the border of the <see cref="T:Syncfusion.WinForms.Controls.SfButton"/>.
            </summary>
            <param name="rect">The rectangle area to draw the button.</param>
            <returns>Returns the calculated border rectangle value.</returns>
        </member>
        <member name="M:Syncfusion.WinForms.Controls.ButtonDrawingHelper.GetFocusedRect(System.Drawing.Rectangle)">
            <summary>
            Calculates the focused rectangle based on the border width.
            </summary>
            <param name="rect">The rectangle area to draw the button.</param>
            <returns>Returns the focused rectangle area.</returns>
        </member>
        <member name="M:Syncfusion.WinForms.Controls.ButtonDrawingHelper.DrawBackGround(System.Drawing.Graphics)">
            <summary>
            Draws the <see cref="T:Syncfusion.WinForms.Controls.SfButton"/> control background.
            </summary>
            <param name="graphics" type="System.Drawing.Graphics">The graphics object to draw.</param>
        </member>
        <member name="M:Syncfusion.WinForms.Controls.ButtonDrawingHelper.DrawImage(System.Drawing.Graphics,System.Drawing.RectangleF,System.Drawing.Image)">
            <summary>
            Draws the image on the <see cref="T:Syncfusion.WinForms.Controls.SfButton"/> control based on its image customization.
            </summary>
            <param name="graphics" type="System.Drawing.Graphics"> The graphics object used to draw the text.</param>
            <param name="bounds">The bounds to be used when rendering the image.</param>
            <param name="image">Image to render.</param>
        </member>
        <member name="M:Syncfusion.WinForms.Controls.ButtonDrawingHelper.DrawText(System.Drawing.Graphics)">
            <summary>
            Draws the text on the <see cref="T:Syncfusion.WinForms.Controls.SfButton"/> control based on its text customization.
            </summary>
            <param name="graphics" type="System.Drawing.Graphics"> The graphics object to draw.</param>
        </member>
        <member name="M:Syncfusion.WinForms.Controls.ButtonDrawingHelper.CalculateImageRectangle">
            <summary>
            Calculates the bounds of the image based on the alignment, size and padding values.
            </summary>
        </member>
        <member name="M:Syncfusion.WinForms.Controls.ButtonDrawingHelper.CalculateTextAndImageBounds(System.Drawing.Graphics)">
            <summary>
            Calculate the bounds of the image and text based on the <see cref="T:System.Windows.Forms.ButtonBase.TextImageRelation"/> property.
            </summary>
            <param name="graphics">The graphics value used to calculate text and image bounds.</param>
        </member>
        <member name="M:Syncfusion.WinForms.Controls.ButtonDrawingHelper.CalculateTextFirstBounds(System.Drawing.Graphics,System.Int32,System.Int32,System.Boolean,System.Drawing.Size,System.Drawing.SizeF,System.Drawing.Size,System.Int32)">
            <summary>
            Calculate the text and image bounds based on the alignment flags and size values.
            </summary>
            <param name="graphics">The graphics value used to calculate text and image bounds.</param>
            <param name="imageAlignFlags">The integer value specifies the alignment flag value of image.</param>
            <param name="textAlignFlags">The integer value contains the alignment flag value of text.</param>
            <param name="verticalAlignment">A boolean value specifies the vertical or horizontal alignment of image and text.</param>
            <param name="imageSize">The image size used to calculate the text and image bounds.</param>
            <param name="textSize">The text size used to calculate the text and image bounds.</param>
            <param name="clientSize">The client size used to calculate the text and image bounds.</param>
            <param name="border">The border size used to calculate the text and image bounds.</param>
        </member>
        <member name="M:Syncfusion.WinForms.Controls.ButtonDrawingHelper.CalculateImageFirstBounds(System.Drawing.Graphics,System.Int32,System.Int32,System.Boolean,System.Drawing.Size,System.Drawing.SizeF,System.Drawing.Size,System.Int32)">
            <summary>
            Calculate the text and image bounds when image drawn before the text.
            </summary>
            <param name="graphics">The graphics value used to calculate text and image bounds.</param>
            <param name="imageAlignFlags">The integer value contains the image alignment flag.</param>
            <param name="textAlignFlags">The integer value indicates the text alignment flag.</param>
            <param name="verticalAlignment">The boolean value specifies the alignment of the image and text relation.</param>
            <param name="imageSize">The image size used to calculate the text and image bounds.</param>
            <param name="textSize">The text size used to calculate the text and image bounds.</param>
            <param name="clientSize">The client size used to calculate the text and image bounds.</param>
            <param name="border">The border size used to calculate the text and image bounds.</param>
        </member>
        <member name="M:Syncfusion.WinForms.Controls.ButtonDrawingHelper.CalculateTextRectangle(System.Drawing.Graphics)">
            <summary>
            Calculates the bounds of the text based on the alignment and padding.
            </summary>
            <param name="graphics">The graphics to calculate text size.</param>
        </member>
        <member name="M:Syncfusion.WinForms.Controls.ButtonDrawingHelper.GetTextSize(System.Drawing.SizeF,System.Drawing.Graphics)">
            <summary>
            Calculates the size of the text based on the given size information.
            </summary>
            <param name="preferedSize">A size value used to calculate the text size.</param>
            <param name="graphics">The graphics context.</param>
            <returns>Returns the size of the text.</returns>
        </member>
        <member name="P:Syncfusion.WinForms.Controls.ButtonDrawingHelper.Image">
            <summary>
            Gets the image that is displayed on a button control based on the state.
            </summary>
        </member>
        <member name="P:Syncfusion.WinForms.Controls.ButtonDrawingHelper.ImageForeColor">
            <summary>
            Gets a image fore color value based on the button state.
            </summary>
        </member>
        <member name="P:Syncfusion.WinForms.Controls.ButtonDrawingHelper.BackgroundBrush">
            <summary>
            Gets a <see cref="T:Syncfusion.WinForms.Core.BrushInfo"/> based on the current button state.
            </summary>
        </member>
        <member name="P:Syncfusion.WinForms.Controls.ButtonDrawingHelper.Border">
            <summary>
            Gets a border value based on the current button state.
            </summary>
        </member>
        <member name="T:Syncfusion.WinForms.Controls.SfButton">
            <summary>
            Represents a button control with advanced customization options on background, text, border and image, etc.
            </summary>
            <example> 
            This example shows how to initialize the <see cref="T:Syncfusion.WinForms.Controls.SfButton"/> control.
            <code lang="C#">       
            //Initializing new instance of the SfButton.
            SfButton sfButton1 = new SfButton();
            //Initialize the location for the SfButton.
            sfButton1.Location = new System.Drawing.Point(348, 71);
            //Initialize the name of the SfButton.
            sfButton1.Name = "sfButton1";
            //Initialize the size of the SfButton.
            sfButton1.Size = new System.Drawing.Size(94, 30);
            //Initialize the text value of the SfButton.
            sfButton1.Text = "sfButton1";
            </code>
            </example>
        </member>
        <member name="F:Syncfusion.WinForms.Controls.SfButton.updateCount">
            <summary>
            The value contains the update count.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Controls.SfButton.allowRichText">
            <summary>
            It stores the value of the <see cref="P:Syncfusion.WinForms.Controls.SfButton.AllowRichText"/> property.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Controls.SfButton.textMargin">
            <summary>
            It stores the value of the <see cref="P:Syncfusion.WinForms.Controls.SfButton.TextMargin"/> property.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Controls.SfButton.drawHelper">
            <summary>
            A instance of the <see cref="T:Syncfusion.WinForms.Controls.ButtonDrawingHelper"/> used to draw the button control.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Controls.SfButton.state">
            <summary>
            Specifies the current state the button control.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Controls.SfButton.showToolTip">
            <summary>
            Specifies whether the tool tip has shown on the button.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Controls.SfButton.textToolTip">
            <summary>
            The text tool tip value that can be used to draw on the button.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Controls.SfButton.allowWrapText">
            <summary>
            It stores the value of the <see cref="P:Syncfusion.WinForms.Controls.SfButton.AllowWrapText"/> property.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Controls.SfButton.imageMargin">
            <summary>
            It stores the value of the <see cref="P:Syncfusion.WinForms.Controls.SfButton.ImageMargin"/> property.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Controls.SfButton.imageSize">
            <summary>
            It stores the value of the <see cref="P:Syncfusion.WinForms.Controls.SfButton.ImageSize"/> property.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Controls.SfButton.allowImageAnimation">
            <summary>
            It stores the value of the <see cref="P:Syncfusion.WinForms.Controls.SfButton.AllowImageAnimation"/> property.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Controls.SfButton.isAnimating">
            <summary>
            Indicating whether image has currently animating on the button control.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Controls.SfButton.imageLayout">
            <summary>
            It contains the value of the <see cref="P:Syncfusion.WinForms.Controls.SfButton.ImageLayout"/> property.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Controls.SfButton.style">
            <summary>
            It stores the value of the <see cref="P:Syncfusion.WinForms.Controls.SfButton.Style"/> property.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Controls.SfButton.focusRectangleVisible">
            <summary>
            It stores the value of the <see cref="P:Syncfusion.WinForms.Controls.SfButton.FocusRectangleVisible"/> property.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Controls.SfButton.themeName">
            <summary>
            It contains the value of the <see cref="P:Syncfusion.WinForms.Controls.SfButton.ThemeName"/> property.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Controls.SfButton.activeThemeName">
            <summary>
            It contains the value of the ActiveThemeName property.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Controls.SfButton.canApplytheme">
            <summary>
            It contains the value of the <see cref="P:Syncfusion.WinForms.Controls.SfButton.CanApplyTheme"/> property.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Controls.SfButton.canOverrideStyle">
            <summary>
            It contains the value of the <see cref="P:Syncfusion.WinForms.Controls.SfButton.CanOverrideStyle"/> property.
            </summary>
        </member>
        <member name="M:Syncfusion.WinForms.Controls.SfButton.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.WinForms.Controls.SfButton"/> class.
            </summary>
            <remarks>
            The constructor initializes the created button with default settings. 
            </remarks>
        </member>
        <member name="M:Syncfusion.WinForms.Controls.SfButton.System#Windows#Forms#IMessageFilter#PreFilterMessage(System.Windows.Forms.Message@)">
            <summary>
            Filters out a message before it is dispatched.
            </summary>
            <param name="m">The message to be dispatched. You cannot modify this message.</param>
            <returns>true to filter the message and stop it from being dispatched; false to allow
            the message to continue to the next filter or control.</returns>
        </member>
        <member name="M:Syncfusion.WinForms.Controls.SfButton.BeginUpdate">
            <summary>
            Suspends the painting of the control until the <see cref="M:Syncfusion.WinForms.Controls.SfButton.EndUpdate"/> method is called.
            </summary>
            <example>
            <code lang="C#">
            //Suspend updating the button.
            sfButton1.BeginUpdate();
            //Initialize styles changes to the button.
            sfButton1.Style.BackColor = Color.Gray;
            sfButton1.Style.ForeColor = Color.Black;
            //Resume updating the button and update the above changes.
            sfButton1.EndUpdate();
            </code>
            </example>
        </member>
        <member name="M:Syncfusion.WinForms.Controls.SfButton.EndUpdate">
            <summary>
            Resumes the painting of the control suspended by calling the BeginUpdate method.
            </summary>
            <example>
            <code lang="C#">
            //Suspend updating the button.
            sfButton1.BeginUpdate();
            //Initialize styles changes to the button.
            sfButton1.Style.BackColor = Color.Gray;
            sfButton1.Style.ForeColor = Color.Black;
            //Resume updating the button and update the above changes.
            sfButton1.EndUpdate();
            </code>
            </example>
        </member>
        <member name="M:Syncfusion.WinForms.Controls.SfButton.GetActiveThemeName">
            <summary>
            Gets the active theme name of the button control.
            </summary>
            <returns>Returns the active theme name.</returns>
        </member>
        <member name="M:Syncfusion.WinForms.Controls.SfButton.OnFrameChanged(System.Object,System.EventArgs)">
            <summary>
            Invalidate the control when animation image frame change.
            </summary>
            <param name="sender">The sender.</param>
            <param name="e">A <see cref="T:System.EventArgs"/> contains the event data.</param>
        </member>
        <member name="M:Syncfusion.WinForms.Controls.SfButton.RefreshControl">
            <summary>
            Forces the control to invalidate its client area when updateCount value is less than or equal to zero.
            </summary>
        </member>
        <member name="M:Syncfusion.WinForms.Controls.SfButton.GetShowFocusCues">
            <summary>
            Gets a value indicating whether the control should display focus rectangles.
            </summary>
            <returns>True if the control should display focus rectangles; otherwise, false.</returns>
        </member>
        <member name="M:Syncfusion.WinForms.Controls.SfButton.Dispose(System.Boolean)">
            <summary> 
            Cleans up any resources being used by the <see cref="T:Syncfusion.WinForms.Controls.SfButton"/> class.
            </summary>
            <param name="disposing">
            True to release both managed and unmanaged resources; false to release only unmanaged resources.
            </param>
        </member>
        <member name="M:Syncfusion.WinForms.Controls.SfButton.OnMouseEnter(System.EventArgs)">
            <summary>
            Raises the <see cref="M:System.Windows.Forms.ButtonBase.OnMouseEnter(System.Windows.Forms.EventArgs)"/> event.
            </summary>
            <param name="eventArgs">An <see cref="T:System.Windows.Form.EventArgs"/>that contains the event data.</param>
        </member>
        <member name="M:Syncfusion.WinForms.Controls.SfButton.OnMouseLeave(System.EventArgs)">
            <summary>
            Raises the <see cref="M:System.Windows.Forms.ButtonBase.OnMouseLeave(System.Windows.Forms.EventArgs)"/> event.
            </summary>
            <param name="eventArgs">An <see cref="T:System.Windows.Form.EventArgs"/>that contains the event data.</param>
        </member>
        <member name="M:Syncfusion.WinForms.Controls.SfButton.OnMouseDown(System.Windows.Forms.MouseEventArgs)">
            <summary>
            Raises the <see cref="M:System.Windows.Forms.ButtonBase.OnMouseDown(System.Windows.Forms.MouseEventArgs)"/> event.
            </summary>
            <param name="eventArgs">An <see cref="T:System.Windows.Form.MouseEventArgs"/>that contains the event data.</param>
        </member>
        <member name="M:Syncfusion.WinForms.Controls.SfButton.OnMouseUp(System.Windows.Forms.MouseEventArgs)">
            <summary>
            Raises the <see cref="M:System.Windows.Forms.ButtonBase.OnMouseUp(System.Windows.Forms.MouseEventArgs)"/> event.
            </summary>
            <param name="eventArgs">An <see cref="T:System.Windows.Form.MouseEventArgs"/>that contains the event data.</param>
        </member>
        <member name="M:Syncfusion.WinForms.Controls.SfButton.OnKeyDown(System.Windows.Forms.KeyEventArgs)">
            <summary>
            Raises the <see cref="M:System.Windows.Forms.ButtonBase.OnKeyUp(System.Windows.Forms.KeyEventArgs)"/> event.
            </summary>
            <param name="eventArgs">A <see cref="T:System.Windows.Forms.KeyEventArgs"/> that contains the event data.</param>
        </member>
        <member name="M:Syncfusion.WinForms.Controls.SfButton.OnKeyUp(System.Windows.Forms.KeyEventArgs)">
            <summary>
            Raises the <see cref="M:System.Windows.Forms.ButtonBase.OnKeyUp(System.Windows.Forms.KeyEventArgs)"/> event.
            </summary>
            <param name="eventArgs">A <see cref="T:System.Windows.Forms.KeyEventArgs"/> that contains the event data.</param>
        </member>
        <member name="M:Syncfusion.WinForms.Controls.SfButton.OnPaint(System.Windows.Forms.PaintEventArgs)">
            <summary>
            Override the method to draw the customized button. If the <see cref="T:Syncfusion.WinForms.Controls.SfButton"/> 
            is not customized then raises the <see cref="M:System.Windows.Forms.ButtonBase.OnPaint"/> method.
            </summary>
            <param name="eventArgs">A <see cref="T:System.Windows.Forms.PaintEventArgs"/> that contains the event data.</param>
        </member>
        <member name="M:Syncfusion.WinForms.Controls.SfButton.CreateAccessibilityInstance">
            <summary>
            Overridden to update the accessibility object for the SfButton.
            </summary>
            <returns>Returns the accessibility object for the SfButton.</returns>
        </member>
        <member name="M:Syncfusion.WinForms.Controls.SfButton.GetTextWithoutMnemonics(System.String)">
            <summary>
            Get the text value without the Mnemonics character.
            </summary>
            <param name="text">The text with mnemonics character.</param>
            <returns>Returns the text without mnemonics character.</returns>
        </member>
        <member name="M:Syncfusion.WinForms.Controls.SfButton.StartAnimation">
            <summary>
            Begin the animation of the animated image.
            </summary>
        </member>
        <member name="M:Syncfusion.WinForms.Controls.SfButton.TextToolTip_ToolTipShowing(System.Object,Syncfusion.WinForms.Controls.Events.ToolTipShowingEventArgs)">
            <summary>
            Occurs before a ToolTip is initially displayed.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">A <see cref="T:Syncfusion.WinForms.Controls.Events.ToolTipShowingEventArgs"/> contains event data.</param>
        </member>
        <member name="M:Syncfusion.WinForms.Controls.SfButton.ShouldSerializeImageSize">
            <summary>
            Determines a value indicating whether to serialize <see cref="P:Syncfusion.WinForms.Controls.SfButton.ImageSize"/> property.
            </summary>
            <returns><b>True</b> if the property was modified; Otherwise <b>False</b>.</returns>
        </member>
        <member name="M:Syncfusion.WinForms.Controls.SfButton.GetMouseInside">
            <summary>
            Gets the boolean value indicating whether the mouse point is inside the button control.
            </summary>
            <returns>Returns true if the mouse point inside the button, otherwise returns false.</returns>
        </member>
        <member name="M:Syncfusion.WinForms.Controls.SfButton.OnThemeChanged(System.Object,Syncfusion.WinForms.Core.Events.ThemeChangedEventArgs)">
            <summary>
            Raises the <see cref="E:Syncfusion.WinForms.Controls.SfButton.ThemeChanged"/> event when theme name changed.
            </summary>
            <param name="sender">The sender value.</param>
            <param name="args">A <see cref="!:Syncfusion.WinForms.Core.ThemeChangedEventArgs"/> contains the event data.</param>
        </member>
        <member name="E:Syncfusion.WinForms.Controls.SfButton.ThemeChanged">
            <summary>
            Occurs when theme name of the <see cref="T:Syncfusion.WinForms.Controls.SfButton"/> has changed.
            </summary>
        </member>
        <member name="P:Syncfusion.WinForms.Controls.SfButton.FocusRectangleVisible">
            <summary>
            Gets or sets a value indicating whether a dotted focus rectangle is displayed within the <see cref="T:Syncfusion.WinForms.Controls.SfButton"/>
            when it has focus. The default value is false.
            </summary>
            <value>The <see cref="T:System.Boolean"/> value that specifies whether the dotted focus rectangle is displayed 
            within the SimpleButton when it has focus. The default value is <b>true</b>.</value>
        </member>
        <member name="P:Syncfusion.WinForms.Controls.SfButton.Style">
            <summary>
            Gets or sets the <see cref="T:Syncfusion.WinForms.Controls.Styles.ButtonVisualStyle"/> value used to customize the appearance of the button.
            </summary>
        </member>
        <member name="P:Syncfusion.WinForms.Controls.SfButton.Enabled">
            <summary>
            Gets or sets a value indicating whether the control can respond to user interaction.
            </summary>
            <value>True if the control can respond to user interaction; otherwise, false. 
            The default value is <b>true</b>.</value>
        </member>
        <member name="P:Syncfusion.WinForms.Controls.SfButton.IsUpdating">
            <summary>
            Gets a value indicating whether the BeginUpdate() has been called and the painting for a control is suspended.
            </summary>
            <value>True if the control is currently updating, otherwise false.
            </value>
        </member>
        <member name="P:Syncfusion.WinForms.Controls.SfButton.BackColor">
            <summary>
            Gets or sets the background color of the button control.
            </summary>
            <remarks>
            This color has filled to background of the button only when set the
            <see cref="!:GradientStyle"/> property to 
            GradientStyle.None or <see cref="P:Syncfusion.WinForms.Controls.Styles.ButtonVisualStyle.GradientBrush"/> property to null.
            </remarks>
        </member>
        <member name="P:Syncfusion.WinForms.Controls.SfButton.ForeColor">
            <summary>
            Gets or sets the foreground color of the button control.
            </summary>
            <value> 
            A <see cref="T:System.Drawing.Color"/> value representing the foreground color of the control.
            </value>
        </member>
        <member name="P:Syncfusion.WinForms.Controls.SfButton.Text">
            <summary>
            Gets or sets the text to be displayed on the button.
            </summary>
            <remarks>
            Changing this property's value at runtime raises the TextChanged event.
            If the <see cref="P:Syncfusion.WinForms.Controls.SfButton.AllowRichText"/> property is set to true, can use the
            rich text value to show the button caption.
            </remarks>
            <value>A string value representing the button's caption.</value>
        </member>
        <member name="P:Syncfusion.WinForms.Controls.SfButton.AllowRichText">
            <summary>
            Gets or sets a value indicating whether the rich text has been displayed on the button.
            </summary>
            <value><b>True</b>, if the current button caption can show the rich text, otherwise <b>false</b>.
            The default value is <b>false</b>.</value>
            <remarks> The button will display the rich text only when set the <see cref="P:Syncfusion.WinForms.Controls.SfButton.Text"/> 
            value as rich text.
            </remarks>
            <example>
            <code lang="C#">
            //Initialize the AllowRichText property to true.
            sfButton1.AllowRichText = true;
            //Initialize the rich text value to button
            sfButton1.Text = "{\\rtf1\\ansi \\i This is boldText \\b Draw in the button}";
            </code>
            </example>
        </member>
        <member name="P:Syncfusion.WinForms.Controls.SfButton.TextMargin">
            <summary>
            Gets or sets the margin of the text on the button control.
            </summary>
            <remarks>
            A <see cref="T:System.Windows.Forms.Padding"/> representing the space between text and image or border of the control.
            </remarks>
        </member>
        <member name="P:Syncfusion.WinForms.Controls.SfButton.AutoEllipsis">
            <summary>
            Gets or sets a value indicating whether the ellipsis character (...) appears at the right edge of the 
            control, denoting that the control text extends beyond the specified length of the control.
            </summary>
            <value>True if the additional label text is to be indicated by an ellipsis; otherwise,
            false. The default is true.</value>
        </member>
        <member name="P:Syncfusion.WinForms.Controls.SfButton.AllowWrapText">
            <summary>
            Gets or sets a value indicating whether the text has been wrapped on the button control.
            </summary>
            <value>
            True if the text should wrap to the available layout rectangle otherwise, false.
            Default value is false.
            </value>
            <remarks>
            The text will be wrapped only when the <see cref="P:Syncfusion.WinForms.Controls.SfButton.AutoSize"/> is false.
            </remarks>
        </member>
        <member name="P:Syncfusion.WinForms.Controls.SfButton.Padding">
            <summary>
            Gets or sets the padding within the button control.
            </summary>
            <value>
            A <see cref="T:System.Windows.Forms.Padding"/> representing the control's internal spacing characteristics.
            </value>
        </member>
        <member name="P:Syncfusion.WinForms.Controls.SfButton.AutoSize">
            <summary>
            Gets or sets a value that indicates whether the button resizes based on its contents.
            The default value is false.
            </summary>
            <value>true if the control automatically resizes based on its contents; otherwise,
            false. The default is true.</value>
        </member>
        <member name="P:Syncfusion.WinForms.Controls.SfButton.UseCompatibleTextRendering">
            <summary>
            Gets a value indicating whether to use the <see cref="T:System.Drawing.Graphics"/> class (GDI+) to rendering text. 
            The <see cref="T:Syncfusion.WinForms.Controls.SfButton"/> control does not provide support the GDI drawing.
            </summary>
        </member>
        <member name="P:Syncfusion.WinForms.Controls.SfButton.ImageSize">
            <summary>
            Gets or sets the size of the image that will be displayed on the control.
            </summary>
        </member>
        <member name="P:Syncfusion.WinForms.Controls.SfButton.ImageMargin">
            <summary>
            Gets or sets the margin of the image on the button control.
            </summary>
            <remarks>
            A <see cref="T:System.Windows.Forms.Padding"/> representing the space between image and text or border of the control.
            </remarks>
        </member>
        <member name="P:Syncfusion.WinForms.Controls.SfButton.Image">
            <summary>
            Gets or sets the image that is displayed on a button control. 
            The default value is null.
            </summary>
            <value>An <see cref="T:System.Drawing.Image"/> object representing the image to be displayed on the button.
            The default value is <b>null</b>.</value>
            <remarks>
            <para>
            The <see cref="T:Syncfusion.WinForms.Controls.SfButton"/> allows to animate,
            when set the animated GIF file to <see cref="P:Syncfusion.WinForms.Controls.SfButton.Image"/> property and enable the 
            <see cref="P:Syncfusion.WinForms.Controls.SfButton.AllowImageAnimation"/> property is true.
            </para>
            <para>
            The button's image can also be specified using the ImageList and ImageIndex properties.
            Assign an image collection to the button's ImageList property and then use the ImageIndex property 
            to specify the index of the image to display.
            </para>
            </remarks>
        </member>
        <member name="P:Syncfusion.WinForms.Controls.SfButton.AllowImageAnimation">
            <summary>
            Gets or sets a value indicating whether the image has been animate in the button.
            </summary>
            <value>
            If true, the button allows to animate the image, otherwise it does not allow the button animate the image.
            The default value is <br>true</br>.
            </value>
            <remarks>
            The <see cref="T:Syncfusion.WinForms.Controls.SfButton"/> allows to animate
            when set the animated GIF file to <see cref="P:Syncfusion.WinForms.Controls.SfButton.Image"/> property.        
            Other images like <see cref="P:Syncfusion.WinForms.Controls.Styles.ButtonVisualStyle.HoverImage"/>,
            <see cref="P:Syncfusion.WinForms.Controls.Styles.ButtonVisualStyle.PressedImage"/>, 
            <see cref="P:Syncfusion.WinForms.Controls.Styles.ButtonVisualStyle.FocusedImage"/> and 
            <see cref="P:Syncfusion.WinForms.Controls.Styles.ButtonVisualStyle.DisabledImage"/> images are not allow to animate. 
            </remarks>
        </member>
        <member name="P:Syncfusion.WinForms.Controls.SfButton.ImageList">
            <summary>
            Gets or sets the <see cref="T:System.Windows.Forms.ImageList"/> that contains the <see cref="T:System.Drawing.Image"/> 
            displayed on a button control.
            </summary>
            <value>The default value is <b>null</b>.</value>
            <remarks>After assign an image source to the ImageList property, use the ImageIndex property to specify 
            the image to be displayed within the button.</remarks>
        </member>
        <member name="P:Syncfusion.WinForms.Controls.SfButton.ImageLayout">
            <summary>
            Gets or sets the image layout as defined in the <see cref="T:System.Windows.Forms.ImageLayout"/> enumeration
            used to draw the image within the button.
            </summary>
            <value>The default value is <b>ImageLayout.None</b>.</value>
        </member>
        <member name="P:Syncfusion.WinForms.Controls.SfButton.FlatAppearance">
            <summary>
            Gets the appearance of the border and the colors used to indicate check state and mouse state.        
            </summary>
        </member>
        <member name="P:Syncfusion.WinForms.Controls.SfButton.TextImageRelation">
            <summary>
            Gets or sets the position of text and image relative to each other.
            </summary>
            <value>The <see cref="T:System.Windows.Forms.TextImageRelation"/> enumeration that specifies how the button's
            image is aligned relative to the button's text. The default value is <b>TextImageRelation.ImageBeforeText</b>
            </value>
        </member>
        <member name="P:Syncfusion.WinForms.Controls.SfButton.AccessibilityEnabled">
            <summary>
            Gets or sets a value indicating whether the accessibility is enabled for the control or not.
            </summary>
        </member>
        <member name="P:Syncfusion.WinForms.Controls.SfButton.CanApplyTheme">
            <summary>
            Gets or sets a value indicating whether a <see cref="T:Syncfusion.WinForms.Controls.SfSkinManager"/> theme style 
            has been applied to the control.
            </summary>
            <value>The default value is <b>true</b>.</value>
        </member>
        <member name="P:Syncfusion.WinForms.Controls.SfButton.ThemeName">
            <summary>
            Gets or sets the theme name of the button control.
            </summary>
            <value> 
            The default value is null.
            </value>
            <remarks>
            The theme will be applied only when the particular theme for this control has included the Themes assembly.
            </remarks>
        </member>
        <member name="P:Syncfusion.WinForms.Controls.SfButton.CanOverrideStyle">
            <summary>
            Gets or sets a value indicating whether control elements styles can be overridden by theme style settings.
            </summary>
            <value>Default value is false.</value>
            <remarks>
            By default, the control's element styles will not be overridden by theme style settings if the style is set in sample level. 
            If this property is enabled, element style will be overridden by theme style settings event if it is set in sample level.
            This property should be enabled or disabled before calling the ThemeName property of the control.
            </remarks>
        </member>
        <member name="P:Syncfusion.WinForms.Controls.SfButton.Syncfusion#WinForms#Core#Styles#IThemeProvider#ActiveThemeName">
            <summary>
            Gets or sets the active theme name of the control.
            </summary>
        </member>
        <member name="P:Syncfusion.WinForms.Controls.SfButton.Syncfusion#WinForms#Core#Styles#IThemeProvider#ControlName">
            <summary>
            Gets the name of the control.
            </summary>
        </member>
        <member name="P:Syncfusion.WinForms.Controls.SfButton.IsAltPressed">
            <summary>
            Gets or sets a value indicating whether the alt key has been pressed.
            </summary>
        </member>
        <member name="P:Syncfusion.WinForms.Controls.SfButton.IsDesignMode">
            <summary>
            Gets a value indicating whether the button control is currently in design mode.
            </summary>
        </member>
        <member name="P:Syncfusion.WinForms.Controls.SfButton.State">
            <summary>
            Gets or sets a current state of the button control.
            </summary>
        </member>
        <member name="P:Syncfusion.WinForms.Controls.SfButton.DefaultSize">
            <summary>
            Returns the default size of the control.
            </summary>
        </member>
        <member name="T:Syncfusion.WinForms.Controls.Styles.ButtonStyleInfoStore">
            <summary>
            Provides storage for the <see cref="T:Syncfusion.WinForms.Controls.Styles.ButtonVisualStyle"/> object.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Controls.Styles.ButtonStyleInfoStore.ForeColorProperty">
            <summary>
            Provides information about the <see cref="P:Syncfusion.WinForms.Controls.Styles.ButtonVisualStyle.ForeColor"/> property.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Controls.Styles.ButtonStyleInfoStore.PressedForeColorProperty">
            <summary>
            Provides information about the <see cref="P:Syncfusion.WinForms.Controls.Styles.ButtonVisualStyle.PressedForeColor"/> property.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Controls.Styles.ButtonStyleInfoStore.FocusdForeColorProperty">
            <summary>
            Provides information about the <see cref="P:Syncfusion.WinForms.Controls.Styles.ButtonVisualStyle.FocusedForeColor"/> property.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Controls.Styles.ButtonStyleInfoStore.HoverForeColorProperty">
            <summary>
            Provides information about the <see cref="P:Syncfusion.WinForms.Controls.Styles.ButtonVisualStyle.HoverForeColor"/> property.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Controls.Styles.ButtonStyleInfoStore.DisabledForeColorProperty">
            <summary>
            Provides information about the <see cref="P:Syncfusion.WinForms.Controls.Styles.ButtonVisualStyle.DisabledForeColor"/> property.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Controls.Styles.ButtonStyleInfoStore.BackColorProperty">
            <summary>
            Provides information about the <see cref="P:Syncfusion.WinForms.Controls.Styles.ButtonVisualStyle.BackColor"/> property.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Controls.Styles.ButtonStyleInfoStore.PressedBackColorProperty">
            <summary>
            Provides information about the <see cref="P:Syncfusion.WinForms.Controls.Styles.ButtonVisualStyle.PressedBackColor"/> property.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Controls.Styles.ButtonStyleInfoStore.FocusedBackColorProperty">
            <summary>
            Provides information about the <see cref="P:Syncfusion.WinForms.Controls.Styles.ButtonVisualStyle.FocusedBackColor"/> property.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Controls.Styles.ButtonStyleInfoStore.HoverBackColorProperty">
            <summary>
            Provides information about the <see cref="P:Syncfusion.WinForms.Controls.Styles.ButtonVisualStyle.HoverBackColor"/> property.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Controls.Styles.ButtonStyleInfoStore.DisabledBackColorProperty">
            <summary>
            Provides information about the <see cref="P:Syncfusion.WinForms.Controls.Styles.ButtonVisualStyle.DisabledBackColor"/> property.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Controls.Styles.ButtonStyleInfoStore.GradientBrushProperty">
            <summary>
            Provides information about the <see cref="P:Syncfusion.WinForms.Controls.Styles.ButtonVisualStyle.GradientBrush"/> property.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Controls.Styles.ButtonStyleInfoStore.PressedGradientBrushProperty">
            <summary>
            Provides information about the <see cref="P:Syncfusion.WinForms.Controls.Styles.ButtonVisualStyle.PressedGradientBrush"/> property.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Controls.Styles.ButtonStyleInfoStore.HoverGradientBrushProperty">
            <summary>
            Provides information about the <see cref="P:Syncfusion.WinForms.Controls.Styles.ButtonVisualStyle.HoverGradientBrush"/> property.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Controls.Styles.ButtonStyleInfoStore.DisabledGradientBrushProperty">
            <summary>
            Provides information about the <see cref="P:Syncfusion.WinForms.Controls.Styles.ButtonVisualStyle.DisabledGradientBrush"/> property.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Controls.Styles.ButtonStyleInfoStore.FocusedGradientBrushProperty">
            <summary>
            Provides information about the <see cref="P:Syncfusion.WinForms.Controls.Styles.ButtonVisualStyle.FocusedGradientBrush"/> property.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Controls.Styles.ButtonStyleInfoStore.BorderProperty">
            <summary>
            Provides information about the <see cref="P:Syncfusion.WinForms.Controls.Styles.ButtonVisualStyle.Border"/> property.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Controls.Styles.ButtonStyleInfoStore.PressedBorderProperty">
            <summary>
            Provides information about the <see cref="P:Syncfusion.WinForms.Controls.Styles.ButtonVisualStyle.PressedBorder"/> property.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Controls.Styles.ButtonStyleInfoStore.FocusedBorderProperty">
            <summary>
            Provides information about the <see cref="P:Syncfusion.WinForms.Controls.Styles.ButtonVisualStyle.FocusedBorder"/> property.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Controls.Styles.ButtonStyleInfoStore.HoverBorderProperty">
            <summary>
            Provides information about the <see cref="P:Syncfusion.WinForms.Controls.Styles.ButtonVisualStyle.HoverBorder"/> property.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Controls.Styles.ButtonStyleInfoStore.DisabledBorderProperty">
            <summary>
            Provides information about the <see cref="P:Syncfusion.WinForms.Controls.Styles.ButtonVisualStyle.DisabledBorder"/> property.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Controls.Styles.ButtonStyleInfoStore.PaddingProperty">
            <summary>
            Provides information about the <see cref="P:Syncfusion.WinForms.Controls.Styles.ButtonVisualStyle.Padding"/> property.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Controls.Styles.ButtonStyleInfoStore.ImageProperty">
            <summary>
            Provides information about the <see cref="P:Syncfusion.WinForms.Controls.Styles.ButtonVisualStyle.Image"/> property.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Controls.Styles.ButtonStyleInfoStore.HoverImageProperty">
            <summary>
            Provides information about the <see cref="P:Syncfusion.WinForms.Controls.Styles.ButtonVisualStyle.HoverImage"/> property.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Controls.Styles.ButtonStyleInfoStore.PressedImageProperty">
            <summary>
            Provides information about the <see cref="P:Syncfusion.WinForms.Controls.Styles.ButtonVisualStyle.PressedImage"/> property.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Controls.Styles.ButtonStyleInfoStore.FocusedImageProperty">
            <summary>
            Provides information about the <see cref="P:Syncfusion.WinForms.Controls.Styles.ButtonVisualStyle.FocusedImage"/> property.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Controls.Styles.ButtonStyleInfoStore.DisabledImageProperty">
            <summary>
            Provides information about the <see cref="P:Syncfusion.WinForms.Controls.Styles.ButtonVisualStyle.DisabledImage"/> property.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Controls.Styles.ButtonStyleInfoStore.ImageForeColorProperty">
            <summary>
            Provides information about the <see cref="P:Syncfusion.WinForms.Controls.Styles.ButtonVisualStyle.ImageForeColor"/> property.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Controls.Styles.ButtonStyleInfoStore.HoverImageForeColorProperty">
            <summary>
            Provides information about the <see cref="P:Syncfusion.WinForms.Controls.Styles.ButtonVisualStyle.HoverImageForeColor"/> property.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Controls.Styles.ButtonStyleInfoStore.PressedImageForeColorProperty">
            <summary>
            Provides information about the <see cref="P:Syncfusion.WinForms.Controls.Styles.ButtonVisualStyle.PressedImageForeColor"/> property.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Controls.Styles.ButtonStyleInfoStore.FocusedImageForeColorProperty">
            <summary>
            Provides information about the <see cref="P:Syncfusion.WinForms.Controls.Styles.ButtonVisualStyle.FocusedImageForeColor"/> property.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Controls.Styles.ButtonStyleInfoStore.DisabledImageForeColorProperty">
            <summary>
            Provides information about the <see cref="P:Syncfusion.WinForms.Controls.Styles.ButtonVisualStyle.DisabledImageForeColor"/> property.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Controls.Styles.ButtonStyleInfoStore.BorderColorProperty">
            <summary>
            Provides information about the <see cref="P:Syncfusion.WinForms.Controls.Styles.ButtonVisualStyle.BorderColor"/> property.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Controls.Styles.ButtonStyleInfoStore.PressedBorderColorProperty">
            <summary>
            Provides information about the <see cref="P:Syncfusion.WinForms.Controls.Styles.ButtonVisualStyle.PressedBorderColor"/> property.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Controls.Styles.ButtonStyleInfoStore.HoverBorderColorProperty">
            <summary>
            Provides information about the <see cref="P:Syncfusion.WinForms.Controls.Styles.ButtonVisualStyle.HoverBorderColor"/> property.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Controls.Styles.ButtonStyleInfoStore.DisabledBorderColorProperty">
            <summary>
            Provides information about the <see cref="P:Syncfusion.WinForms.Controls.Styles.ButtonVisualStyle.DisabledBorderColor"/> property.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Controls.Styles.ButtonStyleInfoStore.staticData">
            <summary>
            It contains the value of the <see cref="!:Syncfusion.WinForms.Styles.ButtonStyleInfoStore.StaticDataStore"/> property value.
            </summary>
        </member>
        <member name="M:Syncfusion.WinForms.Controls.Styles.ButtonStyleInfoStore.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.WinForms.Controls.Styles.ButtonStyleInfoStore"/> class.
            </summary>
        </member>
        <member name="M:Syncfusion.WinForms.Controls.Styles.ButtonStyleInfoStore.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.WinForms.Controls.Styles.ButtonStyleInfoStore"/> class from a serialization stream.
            </summary>
            <param name="info">An object that holds all the data needed to serialize or deserialize this instance.</param>
            <param name="context">Describes the source and destination of the serialized stream specified by info. </param>
        </member>
        <member name="M:Syncfusion.WinForms.Controls.Styles.ButtonStyleInfoStore.GetStaticData">
            <summary>
            Initializes the <see cref="T:Syncfusion.WinForms.Core.Styles.StaticData"/>, if <see cref="F:Syncfusion.WinForms.Controls.Styles.ButtonStyleInfoStore.staticData"/> is null.
            </summary>
            <returns><see cref="T:Syncfusion.WinForms.Core.Styles.StaticData"/></returns>
        </member>
        <member name="P:Syncfusion.WinForms.Controls.Styles.ButtonStyleInfoStore.StaticDataStore">
            <summary>
            Gets the static data value of the <see cref="!:Syncfusion.WinForms.Controls.Style.ButtonStyleInfoStore"/> class.
            </summary>
        </member>
        <member name="T:Syncfusion.WinForms.Controls.Styles.ButtonVisualStyle">
            <summary>
            Represents the class to define the style for <see cref="T:Syncfusion.WinForms.Controls.SfButton"/> control.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Controls.Styles.ButtonVisualStyle.defaultStyle">
            <summary>
            It contains the value of the <see cref="P:Syncfusion.WinForms.Controls.Styles.ButtonVisualStyle.DefaultStyle"/> property.
            </summary>
        </member>
        <member name="M:Syncfusion.WinForms.Controls.Styles.ButtonVisualStyle.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.WinForms.Controls.Styles.ButtonVisualStyle"/> class.
            </summary>
        </member>
        <member name="M:Syncfusion.WinForms.Controls.Styles.ButtonVisualStyle.#ctor(Syncfusion.WinForms.Core.Styles.StyleInfoSubObjectIdentity)">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.WinForms.Controls.Styles.ButtonVisualStyle"/> class.
            </summary>
            <param name="identity">A <see cref="T:Syncfusion.WinForms.Controls.Styles.ButtonStyleInfoIdentity"/> that holds the identity for this <see cref="T:Syncfusion.WinForms.Controls.Styles.ButtonStyleInfoStore"/>.</param>
        </member>
        <member name="M:Syncfusion.WinForms.Controls.Styles.ButtonVisualStyle.#ctor(Syncfusion.WinForms.Core.Styles.StyleInfoSubObjectIdentity,Syncfusion.WinForms.Core.Styles.StyleInfoStore)">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.WinForms.Controls.Styles.ButtonVisualStyle"/> class.
            </summary>
            <param name="identity">A <see cref="T:Syncfusion.WinForms.Controls.Styles.ButtonStyleInfoIdentity"/> that holds the identity for this <see cref="T:Syncfusion.WinForms.Controls.Styles.ButtonStyleInfoStore"/>.</param>
            <param name="store">The store.</param>
        </member>
        <member name="M:Syncfusion.WinForms.Controls.Styles.ButtonVisualStyle.GetDefaultStyle">
            <summary>
            Gets the default style value of the <see cref="T:Syncfusion.WinForms.Controls.Styles.ButtonVisualStyle"/> class.
            </summary>
            <returns>Returns the default style value.</returns>
        </member>
        <member name="M:Syncfusion.WinForms.Controls.Styles.ButtonVisualStyle.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">True if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:Syncfusion.WinForms.Controls.Styles.ButtonVisualStyle.ShouldSerializeBackColor">
            <summary>
            Determines a value indicating whether to serialize <see cref="P:Syncfusion.WinForms.Controls.Styles.ButtonVisualStyle.BackColor"/> property.
            </summary>
            <returns><b>True</b> if the property was modified; Otherwise <b>False</b>.</returns>
        </member>
        <member name="M:Syncfusion.WinForms.Controls.Styles.ButtonVisualStyle.ShouldSerializeHoverBackColor">
            <summary>
            Determines a value indicating whether to serialize <see cref="P:Syncfusion.WinForms.Controls.Styles.ButtonVisualStyle.HoverBackColor"/> property.
            </summary>
            <returns><b>True</b> if the property was modified; Otherwise <b>False</b>.</returns>
        </member>
        <member name="M:Syncfusion.WinForms.Controls.Styles.ButtonVisualStyle.ShouldSerializeFocusedBackColor">
            <summary>
            Determines a value indicating whether to serialize <see cref="P:Syncfusion.WinForms.Controls.Styles.ButtonVisualStyle.FocusedBackColor"/> property.
            </summary>
            <returns><b>True</b> if the property was modified; Otherwise <b>False</b>.</returns>
        </member>
        <member name="M:Syncfusion.WinForms.Controls.Styles.ButtonVisualStyle.ShouldSerializePressedBackColor">
            <summary>
            Determines a value indicating whether to serialize <see cref="P:Syncfusion.WinForms.Controls.Styles.ButtonVisualStyle.PressedBackColor"/> property.
            </summary>
            <returns><b>True</b> if the property was modified; Otherwise <b>False</b>.</returns>
        </member>
        <member name="M:Syncfusion.WinForms.Controls.Styles.ButtonVisualStyle.ShouldSerializeDisabledBackColor">
            <summary>
            Determines a value indicating whether to serialize <see cref="P:Syncfusion.WinForms.Controls.Styles.ButtonVisualStyle.DisabledBackColor"/> property.
            </summary>
            <returns><b>True</b> if the property was modified; Otherwise <b>False</b>.</returns>
        </member>
        <member name="M:Syncfusion.WinForms.Controls.Styles.ButtonVisualStyle.ShouldSerializeForeColor">
            <summary>
            Determines a value indicating whether to serialize <see cref="P:Syncfusion.WinForms.Controls.Styles.ButtonVisualStyle.ForeColor"/> property.
            </summary>
            <returns><b>True</b> if the property was modified; Otherwise <b>False</b>.</returns>
        </member>
        <member name="M:Syncfusion.WinForms.Controls.Styles.ButtonVisualStyle.ShouldSerializeHoverForeColor">
            <summary>
            Determines a value indicating whether to serialize <see cref="P:Syncfusion.WinForms.Controls.Styles.ButtonVisualStyle.HoverForeColor"/> property.
            </summary>
            <returns><b>True</b> if the property was modified; Otherwise <b>False</b>.</returns>
        </member>
        <member name="M:Syncfusion.WinForms.Controls.Styles.ButtonVisualStyle.ShouldSerializeFocusedForeColor">
            <summary>
            Determines a value indicating whether to serialize <see cref="P:Syncfusion.WinForms.Controls.Styles.ButtonVisualStyle.FocusedForeColor"/> property.
            </summary>
            <returns><b>True</b> if the property was modified; Otherwise <b>False</b>.</returns>
        </member>
        <member name="M:Syncfusion.WinForms.Controls.Styles.ButtonVisualStyle.ShouldSerializePressedForeColor">
            <summary>
            Determines a value indicating whether to serialize <see cref="P:Syncfusion.WinForms.Controls.Styles.ButtonVisualStyle.PressedForeColor"/> property.
            </summary>
            <returns><b>True</b> if the property was modified; Otherwise <b>False</b>.</returns>
        </member>
        <member name="M:Syncfusion.WinForms.Controls.Styles.ButtonVisualStyle.ShouldSerializeDisabledForeColor">
            <summary>
            Determines a value indicating whether to serialize <see cref="P:Syncfusion.WinForms.Controls.Styles.ButtonVisualStyle.DisabledForeColor"/> property.
            </summary>
            <returns><b>True</b> if the property was modified; Otherwise <b>False</b>.</returns>
        </member>
        <member name="M:Syncfusion.WinForms.Controls.Styles.ButtonVisualStyle.ShouldSerializeImageForeColor">
            <summary>
            Determines a value indicating whether to serialize <see cref="P:Syncfusion.WinForms.Controls.Styles.ButtonVisualStyle.ImageForeColor"/> property.
            </summary>
            <returns><b>True</b> if the property was modified; Otherwise <b>False</b>.</returns>
        </member>
        <member name="M:Syncfusion.WinForms.Controls.Styles.ButtonVisualStyle.ShouldSerializeHoverImageForeColor">
            <summary>
            Determines a value indicating whether to serialize <see cref="P:Syncfusion.WinForms.Controls.Styles.ButtonVisualStyle.ImageForeColor"/> property.
            </summary>
            <returns><b>True</b> if the property was modified; Otherwise <b>False</b>.</returns>
        </member>
        <member name="M:Syncfusion.WinForms.Controls.Styles.ButtonVisualStyle.ShouldSerializePressedImageForeColor">
            <summary>
            Determines a value indicating whether to serialize <see cref="P:Syncfusion.WinForms.Controls.Styles.ButtonVisualStyle.PressedImageForeColor"/> property.
            </summary>
            <returns><b>True</b> if the property was modified; Otherwise <b>False</b>.</returns>
        </member>
        <member name="M:Syncfusion.WinForms.Controls.Styles.ButtonVisualStyle.ShouldSerializeFocusedImageForeColor">
            <summary>
            Determines a value indicating whether to serialize <see cref="P:Syncfusion.WinForms.Controls.Styles.ButtonVisualStyle.FocusedImageForeColor"/> property.
            </summary>
            <returns><b>True</b> if the property was modified; Otherwise <b>False</b>.</returns>
        </member>
        <member name="M:Syncfusion.WinForms.Controls.Styles.ButtonVisualStyle.ShouldSerializeDisabledImageForeColor">
            <summary>
            Determines a value indicating whether to serialize <see cref="P:Syncfusion.WinForms.Controls.Styles.ButtonVisualStyle.DisabledImageForeColor"/> property.
            </summary>
            <returns><b>True</b> if the property was modified; Otherwise <b>False</b>.</returns>
        </member>
        <member name="P:Syncfusion.WinForms.Controls.Styles.ButtonVisualStyle.DefaultStyle">
            <summary>
            Gets the default style value for the <see cref="T:Syncfusion.WinForms.Controls.SfButton"/> control.
            </summary>
        </member>
        <member name="P:Syncfusion.WinForms.Controls.Styles.ButtonVisualStyle.BackColor">
            <summary>
            Gets or sets the background color of the <see cref="T:Syncfusion.WinForms.Controls.SfButton"/> control.
            </summary>
            <value>The <see cref="T:System.Drawing.Color"/> value is used to fill the background of the button.</value>
            <remarks>
            This color has filled to background of the button only when set the
            <see cref="!:Syncfusion.WinForms.Controls.SfButton.Style.GradientBrush"/> property to null.
            </remarks>
        </member>
        <member name="P:Syncfusion.WinForms.Controls.Styles.ButtonVisualStyle.PressedBackColor">
            <summary>
            Gets or sets the background color of the <see cref="T:Syncfusion.WinForms.Controls.SfButton"/> control in pressed state.
            </summary>
            <value>The <see cref="T:System.Drawing.Color"/> value is used to fill the background of the button.</value>
            <remarks>
            This color has filled to background of the button only when set the
            <see cref="P:Syncfusion.WinForms.Controls.Styles.ButtonVisualStyle.PressedGradientBrush"/> property to null.
            </remarks>
        </member>
        <member name="P:Syncfusion.WinForms.Controls.Styles.ButtonVisualStyle.HoverBackColor">
            <summary>
            Gets or sets the background color of the <see cref="T:Syncfusion.WinForms.Controls.SfButton"/> control in mouse hover state.
            </summary>
            <value>The <see cref="T:System.Drawing.Color"/> value is used to fill the background of the button.</value>
            <remarks>
            This color has filled to background of the button only when set the
            <see cref="P:Syncfusion.WinForms.Controls.Styles.ButtonVisualStyle.HoverGradientBrush"/> property to null.
            </remarks>
        </member>
        <member name="P:Syncfusion.WinForms.Controls.Styles.ButtonVisualStyle.FocusedBackColor">
            <summary>
            Gets or sets the fore color of the <see cref="T:Syncfusion.WinForms.Controls.SfButton"/> control in focused state.
            </summary>
            <value>The <see cref="T:System.Drawing.Color"/> value is used to fill the background of the button.</value>
            <remarks>
            This color has filled to background of the button only when set the
            <see cref="P:Syncfusion.WinForms.Controls.Styles.ButtonVisualStyle.FocusedGradientBrush"/> property to null.
            </remarks>
        </member>
        <member name="P:Syncfusion.WinForms.Controls.Styles.ButtonVisualStyle.DisabledBackColor">
            <summary>
            Gets or sets the background color of the <see cref="T:Syncfusion.WinForms.Controls.SfButton"/> control in the disabled state.
            </summary>
            <value>The <see cref="T:System.Drawing.Color"/> value is used to fill the background of the button.</value>
            <remarks>
            This color has filled to background of the button only when set the
            <see cref="P:Syncfusion.WinForms.Controls.Styles.ButtonVisualStyle.DisabledGradientBrush"/> property to null.
            </remarks>
        </member>
        <member name="P:Syncfusion.WinForms.Controls.Styles.ButtonVisualStyle.ForeColor">
            <summary>
            Gets or sets the fore color value of the <see cref="T:Syncfusion.WinForms.Controls.SfButton"/> control.
            </summary>
            <value>The <see cref="T:System.Drawing.Color"/> value is used to draw the text of the button.</value>
            <remarks>
            The text will draw on the button by using this color value, when the button state is default.
            </remarks>
        </member>
        <member name="P:Syncfusion.WinForms.Controls.Styles.ButtonVisualStyle.PressedForeColor">
            <summary>
            Gets or sets the fore color value of the <see cref="T:Syncfusion.WinForms.Controls.SfButton"/> control in pressed state 
            </summary>
            <remarks>
            The text will draw on the button by using this color value, when the button state is pressed.
            </remarks>
        </member>
        <member name="P:Syncfusion.WinForms.Controls.Styles.ButtonVisualStyle.FocusedForeColor">
            <summary>
            Gets or sets the fore color value of the <see cref="T:Syncfusion.WinForms.Controls.SfButton"/> control in focused state.
            </summary>
            <value>The <see cref="T:System.Drawing.Color"/> value is used to draw the text of the button.</value>
            <remarks>
            The text will draw on the button by using this color value, when the button state is focused.
            </remarks>
        </member>
        <member name="P:Syncfusion.WinForms.Controls.Styles.ButtonVisualStyle.HoverForeColor">
            <summary>
            Gets or sets the fore color value of the <see cref="T:Syncfusion.WinForms.Controls.SfButton"/> control in hover state.
            </summary>
            <value>The <see cref="T:System.Drawing.Color"/> value is used to draw the text of the button.</value>
            <remarks>
            The text will draw on the button by using this color value, when the button state is hover.
            </remarks>
        </member>
        <member name="P:Syncfusion.WinForms.Controls.Styles.ButtonVisualStyle.DisabledForeColor">
            <summary>
            Gets or sets the fore color value of the <see cref="T:Syncfusion.WinForms.Controls.SfButton"/> control in disabled state.
            </summary>
            <value>The <see cref="T:System.Drawing.Color"/> value is used to draw the text of the button.</value>
            <remarks>
            The text will draw on the button by using this color value, when the button state is disabled.
            </remarks>
        </member>
        <member name="P:Syncfusion.WinForms.Controls.Styles.ButtonVisualStyle.GradientBrush">
            <summary>
            Gets or sets the <see cref="T:Syncfusion.WinForms.Core.BrushInfo"/> used to fill the background 
            of the <see cref="T:Syncfusion.WinForms.Controls.SfButton"/> control in default state.
            The default value is null.
            </summary>
            <remarks>
            If this value is null, the <see cref="P:Syncfusion.WinForms.Controls.Styles.ButtonVisualStyle.BackColor"/>
            is used to fill the background of the button in default state.
            </remarks>      
            <example>
            This example shows how to initialize the <see cref="P:Syncfusion.WinForms.Controls.Styles.ButtonVisualStyle.GradientBrush"/> property.
            <code lang="C#">
            //Initialize the gradient brush value to SfButton.
            sfButton2.Style.GradientBrush = new Syncfusion.WinForms.Core.BrushInfo(Syncfusion.WinForms.Core.GradientStyle.BackwardDiagonal, new Color[] { Color.Red, Color.Green });
            </code> 
            </example>
        </member>
        <member name="P:Syncfusion.WinForms.Controls.Styles.ButtonVisualStyle.PressedGradientBrush">
            <summary>
            Gets or sets the <see cref="T:Syncfusion.WinForms.Core.BrushInfo"/> used to fill the background 
            of the <see cref="T:Syncfusion.WinForms.Controls.SfButton"/> control in pressed state.
            The default value is null.
            </summary>
            <remarks>
            If this value is null, the <see cref="P:Syncfusion.WinForms.Controls.Styles.ButtonVisualStyle.PressedBackColor"/>
            is used to fill the background of the button in pressed state.
            </remarks>     
            <example>
            This example shows how to initialize the <see cref="P:Syncfusion.WinForms.Controls.Styles.ButtonVisualStyle.GradientBrush"/> property.
            <code lang="C#">
            //Initialize the pressed gradient brush value to SfButton.
            sfButton2.Style.PressedGradientBrush = new Syncfusion.WinForms.Core.BrushInfo(Syncfusion.WinForms.Core.GradientStyle.BackwardDiagonal, new Color[] { Color.Red, Color.Green });
            </code> 
            </example>
        </member>
        <member name="P:Syncfusion.WinForms.Controls.Styles.ButtonVisualStyle.HoverGradientBrush">
            <summary>
            Gets or sets the <see cref="T:Syncfusion.WinForms.Core.BrushInfo"/> used to fill the background 
            of the <see cref="T:Syncfusion.WinForms.Controls.SfButton"/> control in hover state.
            The default value is null.
            </summary>
            <remarks>
            If this value is null, the <see cref="P:Syncfusion.WinForms.Controls.Styles.ButtonVisualStyle.HoverBackColor"/>
            is used to fill the background of the button in hover state.
            </remarks>
            <example>
            This example shows how to initialize the <see cref="P:Syncfusion.WinForms.Controls.Styles.ButtonVisualStyle.GradientBrush"/> property.
            <code lang="C#">
            //Initialize the hover gradient brush value to SfButton.
            sfButton2.Style.HoverGradientBrush = new Syncfusion.WinForms.Core.BrushInfo(Syncfusion.WinForms.Core.GradientStyle.BackwardDiagonal, new Color[] { Color.Red, Color.Green });
            </code> 
            </example>
        </member>
        <member name="P:Syncfusion.WinForms.Controls.Styles.ButtonVisualStyle.FocusedGradientBrush">
            <summary>
            Gets or sets the <see cref="T:Syncfusion.WinForms.Core.BrushInfo"/> used to fill the background 
            of the <see cref="T:Syncfusion.WinForms.Controls.SfButton"/> control in focused state.
            The default value is null.
            </summary>
            <remarks>
            If this value is null, the <see cref="P:Syncfusion.WinForms.Controls.Styles.ButtonVisualStyle.FocusedBackColor"/>
            is used to fill the background of the button in focused state.
            </remarks>
            <example>
            This example shows how to initialize the <see cref="P:Syncfusion.WinForms.Controls.Styles.ButtonVisualStyle.GradientBrush"/> property.
            <code lang="C#">
            //Initialize the focused gradient brush value to SfButton.
            sfButton2.Style.FocusedGradientBrush = new Syncfusion.WinForms.Core.BrushInfo(Syncfusion.WinForms.Core.GradientStyle.BackwardDiagonal, new Color[] { Color.Red, Color.Green });
            </code> 
            </example>
        </member>
        <member name="P:Syncfusion.WinForms.Controls.Styles.ButtonVisualStyle.DisabledGradientBrush">
            <summary>
            Gets or sets the <see cref="T:Syncfusion.WinForms.Core.BrushInfo"/> used to fill the background 
            of the <see cref="T:Syncfusion.WinForms.Controls.SfButton"/> control in disabled state.
            The default value is null.
            </summary>
            <remarks>
            If this value is null, the <see cref="P:Syncfusion.WinForms.Controls.Styles.ButtonVisualStyle.DisabledBackColor"/>
            is used to fill the background of the button in disabled state.
            </remarks>
            <example>
            This example shows how to initialize the <see cref="P:Syncfusion.WinForms.Controls.Styles.ButtonVisualStyle.GradientBrush"/> property.
            <code lang="C#">
            //Initialize the disabled gradient brush value to SfButton.
            sfButton2.Style.DisabledGradientBrush = new Syncfusion.WinForms.Core.BrushInfo(Syncfusion.WinForms.Core.GradientStyle.BackwardDiagonal, new Color[] { Color.Red, Color.Green });
            </code> 
            </example>
        </member>
        <member name="P:Syncfusion.WinForms.Controls.Styles.ButtonVisualStyle.Border">
            <summary>
            Gets or sets the <see cref="T:System.Drawing.Pen"/> value used to draw the border of the 
            <see cref="T:Syncfusion.WinForms.Controls.SfButton"/> control in default state.
            </summary>
            <value>The <see cref="T:System.Drawing.Pen"/> value is used to draw the border of the button.
            The default value is null.</value>
        </member>
        <member name="P:Syncfusion.WinForms.Controls.Styles.ButtonVisualStyle.PressedBorder">
            <summary>
            Gets or sets the <see cref="T:System.Drawing.Pen"/> value used to draw the border of the 
            <see cref="T:Syncfusion.WinForms.Controls.SfButton"/> control in pressed state.
            </summary>
            <value>The <see cref="T:System.Drawing.Pen"/> value is used to draw the border of the button.
            The default value is null.</value>
        </member>
        <member name="P:Syncfusion.WinForms.Controls.Styles.ButtonVisualStyle.HoverBorder">
            <summary>
            Gets or sets the <see cref="T:System.Drawing.Pen"/> value used to draw the border of the 
            <see cref="T:Syncfusion.WinForms.Controls.SfButton"/> control in hover state.
            </summary>        
            <value>The <see cref="T:System.Drawing.Pen"/> value is used to draw the border of the button.
            The default value is null.</value>
        </member>
        <member name="P:Syncfusion.WinForms.Controls.Styles.ButtonVisualStyle.DisabledBorder">
            <summary>
            Gets or sets the <see cref="T:System.Drawing.Pen"/> value used to draw the border of the 
            <see cref="T:Syncfusion.WinForms.Controls.SfButton"/> control in disabled state.
            </summary>
            <value>The <see cref="T:System.Drawing.Pen"/> value is used to draw the border of the button.
            The default value is null.</value>
        </member>
        <member name="P:Syncfusion.WinForms.Controls.Styles.ButtonVisualStyle.FocusedBorder">
            <summary>
            Gets or sets the <see cref="T:System.Drawing.Pen"/> value used to draw the border of the 
            <see cref="T:Syncfusion.WinForms.Controls.SfButton"/> control in focused state.
            </summary>
            <value>The <see cref="T:System.Drawing.Pen"/> value is used to draw the border of the button.
            The default value is null.</value>
        </member>
        <member name="P:Syncfusion.WinForms.Controls.Styles.ButtonVisualStyle.Image">
            <summary>
            Gets or sets the image that is displayed on a button control in default state.
            </summary>
            <value>The <see cref="T:System.Drawing.Image"/> value used to displayed on the button. The default value is null.</value>
            <remarks>
            The <see cref="T:Syncfusion.WinForms.Controls.SfButton"/> allows to animate,
            when set the animated GIF file to <see cref="P:Syncfusion.WinForms.Controls.Styles.ButtonVisualStyle.Image"/> property and enable the 
            <see cref="P:Syncfusion.WinForms.Controls.SfButton.AllowImageAnimation"/> property is true.
            </remarks>
        </member>
        <member name="P:Syncfusion.WinForms.Controls.Styles.ButtonVisualStyle.HoverImage">
            <summary>
            Gets or sets the image that is displayed on a button control in hover state.
            </summary>
            <value>The <see cref="T:System.Drawing.Image"/> value used to displayed on the button. The default value is null.</value>
            <remarks>
            The <see cref="T:Syncfusion.WinForms.Controls.SfButton"/> does not allows to animate,
            when set the animated GIF file to <see cref="P:Syncfusion.WinForms.Controls.Styles.ButtonVisualStyle.HoverImage"/> property and even the 
            <see cref="P:Syncfusion.WinForms.Controls.SfButton.AllowImageAnimation"/> property is true. If the <see cref="P:Syncfusion.WinForms.Controls.SfButton.Image"/>
            property is animated GIF file then this property not used in button.
            </remarks>
        </member>
        <member name="P:Syncfusion.WinForms.Controls.Styles.ButtonVisualStyle.PressedImage">
            <summary>
            Gets or sets the image that is displayed on a button control in pressed state.
            </summary>
            <value>The <see cref="T:System.Drawing.Image"/> value used to displayed on the button. The default value is null.</value>
            <remarks>
            The <see cref="T:Syncfusion.WinForms.Controls.SfButton"/> does not allows to animate,
            when set the animated GIF file to <see cref="P:Syncfusion.WinForms.Controls.Styles.ButtonVisualStyle.PressedImage"/> property and even the 
            <see cref="P:Syncfusion.WinForms.Controls.SfButton.AllowImageAnimation"/> property is true. If the <see cref="P:Syncfusion.WinForms.Controls.SfButton.Image"/>
            property is animated GIF file then this property not used in button.
            </remarks>
        </member>
        <member name="P:Syncfusion.WinForms.Controls.Styles.ButtonVisualStyle.FocusedImage">
            <summary>
            Gets or sets the image that is displayed on a button control in focused state.
            </summary>
            <value>The <see cref="T:System.Drawing.Image"/> value used to displayed on the button. The default value is null.</value>
            <remarks>
            The <see cref="T:Syncfusion.WinForms.Controls.SfButton"/> does not allows to animate,
            when set the animated GIF file to <see cref="P:Syncfusion.WinForms.Controls.Styles.ButtonVisualStyle.FocusedImage"/> property and even the 
            <see cref="P:Syncfusion.WinForms.Controls.SfButton.AllowImageAnimation"/> property is true. If the <see cref="P:Syncfusion.WinForms.Controls.SfButton.Image"/>
            property is animated GIF file then this property not used in button.
            </remarks>
        </member>
        <member name="P:Syncfusion.WinForms.Controls.Styles.ButtonVisualStyle.DisabledImage">
            <summary>
            Gets or sets the image that is displayed on a button control in disabled state.
            </summary>
            <value>The <see cref="T:System.Drawing.Image"/> value used to displayed on the button. The default value is null.</value>
            <remarks>
            The <see cref="T:Syncfusion.WinForms.Controls.SfButton"/> does allows to animate,
            when set the animated GIF file to <see cref="P:Syncfusion.WinForms.Controls.Styles.ButtonVisualStyle.DisabledImage"/> property and even the 
            <see cref="P:Syncfusion.WinForms.Controls.SfButton.AllowImageAnimation"/> property is true. If the <see cref="P:Syncfusion.WinForms.Controls.SfButton.Image"/>
            property is animated GIF file then this property not used in button.
            </remarks>
        </member>
        <member name="P:Syncfusion.WinForms.Controls.Styles.ButtonVisualStyle.ImageForeColor">
            <summary>
            Gets or sets the fore color of the image that will be displayed on the <see cref="T:Syncfusion.WinForms.Controls.SfButton"/>
            control in default state.
            </summary>        
            <value>The <see cref="T:System.Drawing.Color"/> value is used to draw the image. The default value is 
            <b>Color.Empty</b>.</value>
        </member>
        <member name="P:Syncfusion.WinForms.Controls.Styles.ButtonVisualStyle.HoverImageForeColor">
            <summary>
            Gets or sets the fore color of the image that will be displayed on the <see cref="T:Syncfusion.WinForms.Controls.SfButton"/>
            control in hover state.
            </summary>        
            <value>The <see cref="T:System.Drawing.Color"/> value is used to draw the image. The default value is 
            <b>Color.Empty</b>.</value>
        </member>
        <member name="P:Syncfusion.WinForms.Controls.Styles.ButtonVisualStyle.PressedImageForeColor">
            <summary>
            Gets or sets the fore color of the image that will be displayed on the <see cref="T:Syncfusion.WinForms.Controls.SfButton"/>
            control in pressed state.
            </summary>       
            <value>The <see cref="T:System.Drawing.Color"/> value is used to draw the image. The default value is 
            <b>Color.Empty</b>.</value>
        </member>
        <member name="P:Syncfusion.WinForms.Controls.Styles.ButtonVisualStyle.FocusedImageForeColor">
            <summary>
            Gets or sets the fore color of the image that will be displayed on the <see cref="T:Syncfusion.WinForms.Controls.SfButton"/>
            control in focused state. 
            </summary>        
            <value>The <see cref="T:System.Drawing.Color"/> value is used to draw the image on focused state of the button.
            The default value is <b>Color.Empty</b>.</value>
        </member>
        <member name="P:Syncfusion.WinForms.Controls.Styles.ButtonVisualStyle.DisabledImageForeColor">
            <summary>
            Gets or sets the fore color of the image that will be displayed on the <see cref="T:Syncfusion.WinForms.Controls.SfButton"/>
            control in disabled state. 
            </summary>   
            <value>The <see cref="T:System.Drawing.Color"/> value is used to draw the image. The default value is 
            <b>Color.Empty</b>.</value>
        </member>
        <member name="P:Syncfusion.WinForms.Controls.Styles.ButtonVisualStyle.Padding">
            <summary>
            Gets or sets the Padding value of the <see cref="T:Syncfusion.WinForms.Controls.SfButton"/> control.
            </summary>
        </member>
        <member name="P:Syncfusion.WinForms.Controls.Styles.ButtonVisualStyle.HasPadding">
            <summary>
            Gets a value indicating whether padding has been initialized for the <see cref="T:Syncfusion.WinForms.Controls.SfButton"/> control.
            </summary>
        </member>
        <member name="P:Syncfusion.WinForms.Controls.Styles.ButtonVisualStyle.HasHoverImage">
            <summary>
            Gets a value indicating whether the Image property has been initialized for the current object.
            </summary>
        </member>
        <member name="P:Syncfusion.WinForms.Controls.Styles.ButtonVisualStyle.HasImage">
            <summary>
            Gets a value indicating whether the Image property has been initialized for the current object.
            </summary>
        </member>
        <member name="P:Syncfusion.WinForms.Controls.Styles.ButtonVisualStyle.HasPressedImage">
            <summary>
            Gets a value indicating whether the PressedImage property has been initialized for the current object.
            </summary>
        </member>
        <member name="P:Syncfusion.WinForms.Controls.Styles.ButtonVisualStyle.HasFocusedImage">
            <summary>
            Gets a value indicating whether the FocusedImage property has been initialized for the current object.
            </summary>
        </member>
        <member name="P:Syncfusion.WinForms.Controls.Styles.ButtonVisualStyle.HasDisabledImage">
            <summary>
            Gets a value indicating whether the DisabledImage property has been initialized for the current object.
            </summary>
        </member>
        <member name="P:Syncfusion.WinForms.Controls.Styles.ButtonVisualStyle.BorderColor">
            <summary>
            Gets or sets color of the border
            </summary>
        </member>
        <member name="P:Syncfusion.WinForms.Controls.Styles.ButtonVisualStyle.HoverBorderColor">
            <summary>
            Gets or sets hover color of the border
            </summary>
        </member>
        <member name="P:Syncfusion.WinForms.Controls.Styles.ButtonVisualStyle.PressedBorderColor">
            <summary>
            Gets or sets pressed color of the border
            </summary>
        </member>
        <member name="P:Syncfusion.WinForms.Controls.Styles.ButtonVisualStyle.DisabledBorderColor">
            <summary>
            Gets or sets disabled color of the border
            </summary>
        </member>
        <member name="T:Syncfusion.WinForms.Controls.Styles.ButtonStyleInfoIdentity">
            <summary>
            Implements the class that provide the identity information of <see cref="T:Syncfusion.WinForms.Controls.Styles.ButtonVisualStyle"/> 
            using <see cref="T:Syncfusion.WinForms.Core.Styles.StyleInfoSubObjectIdentity"/>.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Controls.Styles.ButtonStyleInfoIdentity.sfButton">
            <summary>
             Maintains the SfDataGrid for create the identity. 
            </summary>
        </member>
        <member name="M:Syncfusion.WinForms.Controls.Styles.ButtonStyleInfoIdentity.#ctor(Syncfusion.WinForms.Controls.SfButton)">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.WinForms.Controls.Styles.ButtonStyleInfoIdentity"/> class.
            </summary>
            <param name="button">
            <see cref="T:Syncfusion.WinForms.Controls.SfButton"/> to create an identity.
            </param>
        </member>
        <member name="M:Syncfusion.WinForms.Controls.Styles.ButtonStyleInfoIdentity.GetBaseStyles(Syncfusion.WinForms.Core.Styles.IStyleInfo)">
            <summary>
            Loops through all base styles until it finds a style that has a specific property initialized.
            </summary>
            <param name="thisStyleInfo">A instance of <see cref="T:Syncfusion.WinForms.Core.Styles.IStyleInfo"/></param>
            <returns>
            Returns the <see cref="T:Syncfusion.WinForms.Core.Styles.IStyleInfo"/>.
            </returns>
        </member>
        <member name="M:Syncfusion.WinForms.Controls.Styles.ButtonStyleInfoIdentity.OnStyleChanged(Syncfusion.WinForms.Core.Styles.StyleInfoBase,Syncfusion.WinForms.Core.Styles.StyleInfoProperty)">
            <summary>
            Occurs when a property in the <see cref="T:Syncfusion.WinForms.Controls.Styles.ButtonVisualStyle"/> has changed.
            </summary>
            <param name="style">The <see cref="T:Syncfusion.WinForms.Core.Styles.StyleInfoBase"/> instance that has changed.</param>
            <param name="sip">A <see cref="T:Syncfusion.WinForms.Core.Styles.StyleInfoProperty"/> that identifies the property to operate on.</param>
        </member>
        <member name="T:Syncfusion.WinForms.Core.BrushPainter">
            <summary>
            A helper class that provides the options to paints window background based on the <see cref="T:Syncfusion.WinForms.Core.BrushInfo"/> information.
            </summary>
        </member>
        <member name="M:Syncfusion.WinForms.Core.BrushPainter.FillPath(System.Drawing.Graphics,System.Drawing.Drawing2D.GraphicsPath,System.Drawing.Color)">
            <summary>
            Fills the interior of path based on the <see cref="T:System.Drawing.Color"/> value.
            </summary>
            <param name="g">A <see cref="T:System.Drawing.Graphics"/> context.</param>
            <param name="path">A <see cref="T:System.Drawing.Drawing2D.GraphicsPath"/> context.</param>
            <param name="color">A <see cref="T:System.Drawing.Color"/> value.</param>
        </member>
        <member name="M:Syncfusion.WinForms.Core.BrushPainter.FillPath(System.Drawing.Graphics,System.Drawing.Drawing2D.GraphicsPath,Syncfusion.WinForms.Core.BrushInfo)">
            <summary>
            Fills the interior of a path based on the <see cref="T:Syncfusion.WinForms.Core.BrushInfo"/> information.
            </summary>
            <param name="g">A <see cref="T:System.Drawing.Graphics"/> context.</param>
            <param name="path">A <see cref="T:System.Drawing.Drawing2D.GraphicsPath"/> context.</param>
            <param name="brush">A <see cref="T:Syncfusion.WinForms.Core.BrushInfo"/> value.</param>
        </member>
        <member name="M:Syncfusion.WinForms.Core.BrushPainter.FillPath(System.Drawing.Graphics,System.Drawing.Drawing2D.GraphicsPath,Syncfusion.WinForms.Core.Enums.GradientStyle,System.Drawing.Color[])">
            <summary>
            Fills the interior of a path based on the gradient style and color values.
            </summary>
            <param name="g">A <see cref="T:System.Drawing.Graphics"/> context.</param>
            <param name="p">A <see cref="T:System.Drawing.Drawing2D.GraphicsPath"/> context.</param>
            <param name="gradientStyle">A <see cref="T:Syncfusion.WinForms.Core.Enums.GradientStyle"/> value.</param>
            <param name="colors">A array of the <see cref="T:System.Drawing.Color"/> value.</param>
        </member>
        <member name="M:Syncfusion.WinForms.Core.BrushPainter.FillRectangle(System.Drawing.Graphics,System.Drawing.Rectangle,Syncfusion.WinForms.Core.BrushInfo)">
            <summary>
            Fills the interior of a rectangle based on the <see cref="T:Syncfusion.WinForms.Core.BrushInfo"/> information.
            </summary>
            <param name="g">A <see cref="T:System.Drawing.Graphics"/> context.</param>
            <param name="r">A <see cref="T:System.Drawing.Rectangle"/> structure that represents the rectangle to fill. </param>
            <param name="brush"><see cref="T:Syncfusion.WinForms.Core.BrushInfo"/> object that determines the characteristics of the fill.</param>
        </member>
        <member name="M:Syncfusion.WinForms.Core.BrushPainter.FillRectangle(System.Drawing.Graphics,System.Drawing.Rectangle,Syncfusion.WinForms.Core.Enums.GradientStyle,System.Drawing.Color,System.Drawing.Color)">
            <summary>
            Fills the interior of a rectangle based on the gradient style information.
            </summary>
            <param name="g">A <see cref="T:System.Drawing.Graphics"/> context.</param>
            <param name="r">A <see cref="T:System.Drawing.Rectangle"/> structure that represents the rectangle to fill. </param>
            <param name="gradientStyle">A <see cref="T:Syncfusion.WinForms.Core.Enums.GradientStyle"/> value.</param>
            <param name="foreColor">A <see cref="T:System.Drawing.Color"/> used for the fore color of the gradient fill.</param>
            <param name="backColor">A <see cref="T:System.Drawing.Color"/> used for the back color gradient fill.</param>
        </member>
        <member name="M:Syncfusion.WinForms.Core.BrushPainter.FillRectangle(System.Drawing.Graphics,System.Drawing.Rectangle,Syncfusion.WinForms.Core.Enums.GradientStyle,System.Drawing.Color[])">
            <summary>
            Fills the interior of a rectangle based on the gradient style information.
            </summary>
            <param name="g">A <see cref="T:System.Drawing.Graphics"/> context</param>
            <param name="r">A <see cref="T:System.Drawing.RectangleF"/> structure that represents the rectangle to fill. </param>
            <param name="gradientStyle">A <see cref="T:Syncfusion.WinForms.Core.Enums.GradientStyle"/> value.</param>
            <param name="colors">An array of <see cref="T:System.Drawing.Color"/> used for the gradient fill.</param>
        </member>
        <member name="M:Syncfusion.WinForms.Core.BrushPainter.FillRectangle(System.Drawing.Graphics,System.Drawing.Rectangle,Syncfusion.WinForms.Core.Enums.PatternStyle,System.Drawing.Color,System.Drawing.Color)">
            <summary>
            Fills the interior of a rectangle based on the pattern style and color values.
            </summary>
            <param name="g">A <see cref="T:System.Drawing.Graphics"/> context</param>
            <param name="r">A <see cref="T:System.Drawing.Rectangle"/> structure that represents the rectangle to fill.</param>
            <param name="hatchStyle">A <see cref="T:Syncfusion.WinForms.Core.Enums.PatternStyle"/> information.</param>
            <param name="foreColor">A <see cref="T:System.Drawing.Color"/> used for the fore color of pattern fill.</param>
            <param name="backColor">A <see cref="T:System.Drawing.Color"/> used for the back color of pattern fill.</param>
        </member>
        <member name="M:Syncfusion.WinForms.Core.BrushPainter.FillRectangle(System.Drawing.Graphics,System.Drawing.Rectangle,System.Drawing.Color)">
            <summary>
            Fills the interior of a rectangle based on the color value.
            </summary>
            <param name="g">A <see cref="T:System.Drawing.Graphics"/> context.</param>
            <param name="r">A <see cref="T:System.Drawing.Rectangle"/> structure that represents the rectangle to fill.</param>
            <param name="color">A <see cref="T:System.Drawing.Color"/> value.</param>
        </member>
        <member name="M:Syncfusion.WinForms.Core.BrushPainter.FillRegion(System.Drawing.Graphics,System.Drawing.Region,Syncfusion.WinForms.Core.BrushInfo)">
            <summary>
            Fills the interior of a region based on the <see cref="T:Syncfusion.WinForms.Core.BrushInfo"/> information.
            </summary>
            <param name="g">A <see cref="T:System.Drawing.Graphics"/> context.</param>
            <param name="r">A <see cref="T:System.Drawing.Region"/> structure that represents the region to fill. </param>
            <param name="brush">A <see cref="T:Syncfusion.WinForms.Core.BrushInfo"/> object that determines the characteristics of the fill.</param>
        </member>
        <member name="M:Syncfusion.WinForms.Core.BrushPainter.FillRegion(System.Drawing.Graphics,System.Drawing.Region,Syncfusion.WinForms.Core.Enums.GradientStyle,System.Drawing.Color[])">
            <summary>
            Fills the interior of a region based on the gradient style.
            </summary>
            <param name="g">A <see cref="T:System.Drawing.Graphics"/> context.</param>
            <param name="r">A <see cref="T:System.Drawing.Region"/> structure that represents the region to fill. </param>
            <param name="gradientStyle">A <see cref="T:Syncfusion.WinForms.Core.Enums.GradientStyle"/> value.</param>
            <param name="colors">An array of <see cref="T:System.Drawing.Color"/> used for the gradient fill.</param>
        </member>
        <member name="M:Syncfusion.WinForms.Core.BrushPainter.FillRegion(System.Drawing.Graphics,System.Drawing.Region,Syncfusion.WinForms.Core.Enums.PatternStyle,System.Drawing.Color,System.Drawing.Color)">
            <summary>
            Fills the interior of a region based on the <see cref="T:Syncfusion.WinForms.Core.Enums.PatternStyle"/> information.
            </summary>
            <param name="g">A <see cref="T:System.Drawing.Graphics"/> context.</param>
            <param name="r">A <see cref="T:System.Drawing.Region"/> structure that represents the region to fill. </param>
            <param name="hatchStyle">A <see cref="T:Syncfusion.WinForms.Core.Enums.PatternStyle"/> value.</param>
            <param name="foreColor">A <see cref="T:System.Drawing.Color"/> used for the fore color of pattern fill.</param>
            <param name="backColor">A <see cref="T:System.Drawing.Color"/> used for the back color of pattern fill.</param>
        </member>
        <member name="M:Syncfusion.WinForms.Core.BrushPainter.FillRegion(System.Drawing.Graphics,System.Drawing.Region,System.Drawing.Color)">
            <summary>
            Fills the interior of a region based on the color value.
            </summary>
            <param name="g">A <see cref="T:System.Drawing.Graphics"/> context.</param>
            <param name="r">A <see cref="T:System.Drawing.Region"/> structure that represents the region to fill. </param>
            <param name="color">A <see cref="T:System.Drawing.Color"/> value.</param>
        </member>
        <member name="M:Syncfusion.WinForms.Core.BrushPainter.FillGradient(System.Drawing.Graphics,System.Drawing.Rectangle,System.Collections.ArrayList)">
            <summary>Fills a rectangle with gradient style based on the foreColors values.</summary>
            <param name="g">A <see cref="T:System.Drawing.Graphics"/> context.</param>
            <param name="rc">A <see cref="T:System.Drawing.Rectangle"/> value. </param>
            <param name="foreColors">A <see cref="T:System.Collections.ArrayList"/> contains the colors details.</param>
        </member>
        <member name="M:Syncfusion.WinForms.Core.BrushPainter.FillGradient(System.Drawing.Graphics,System.Drawing.Rectangle,System.Collections.ArrayList,System.Boolean)">
            <summary>Fills a rectangle with gradient style based on the foreColors values.</summary>
            <param name="g">A <see cref="T:System.Drawing.Graphics"/> context.</param>
            <param name="rc">A <see cref="T:System.Drawing.Rectangle"/> value. </param>
            <param name="foreColors">A <see cref="T:System.Collections.ArrayList"/> contains the colors details.</param>
            <param name="isVerticalGradient">Boolean value indicates to draw in vertical or horizontal.</param>
        </member>
        <member name="M:Syncfusion.WinForms.Core.BrushPainter.FillGradient(System.Drawing.Graphics,System.Drawing.Rectangle,System.Drawing.Color,System.Drawing.Color)">
            <summary>Fills the gradient style to rectangle based on the color values.</summary>
            <param name="g">A <see cref="T:System.Drawing.Graphics"/> context.</param>
            <param name="rc">A <see cref="T:System.Drawing.Rectangle"/> value.</param>
            <param name="color1">A <see cref="T:System.Drawing.Color"/> contains the first color of gradient fill.</param>
            <param name="color2">A <see cref="T:System.Drawing.Color"/> contains the second color the gradient fill.</param>&gt;
        </member>
        <member name="M:Syncfusion.WinForms.Core.BrushPainter.FillGradient(System.Drawing.Graphics,System.Drawing.Rectangle,System.Drawing.Color,System.Drawing.Color,System.Boolean)">
            <summary>Fills the gradient style to rectangle based on the color values.</summary>
            <param name="g">A <see cref="T:System.Drawing.Graphics"/> context.</param>
            <param name="rc">A <see cref="T:System.Drawing.Rectangle"/> value.</param>
            <param name="color1">A <see cref="T:System.Drawing.Color"/> contains the first color of gradient fill.</param>
            <param name="color2">A <see cref="T:System.Drawing.Color"/> contains the second color the gradient fill.</param>&gt;
            <param name="isVerticalGradient">Boolean value indicates to draw in vertical or horizontal.</param>
        </member>
        <member name="M:Syncfusion.WinForms.Core.BrushPainter.DrawBorder(System.Drawing.Graphics,System.Drawing.Rectangle,System.Windows.Forms.BorderStyle,System.Windows.Forms.Border3DStyle,System.Windows.Forms.ButtonBorderStyle,System.Drawing.Color)">
            <summary>Draws a border based on the border style and border color information.</summary>
            <param name="g">A <see cref="T:System.Drawing.Graphics"/> context.</param>
            <param name="rc">A <see cref="T:System.Drawing.Rectangle"/> value.</param>
            <param name="borderStyle">A <see cref="T:System.Windows.Forms.BorderStyle"/> context.</param>
            <param name="border3DStyle">A <see cref="T:System.Windows.Forms.Border3DStyle"/> context.</param>
            <param name="borderSingle">A <see cref="T:System.Windows.Forms.ButtonBorderStyle"/> context.</param>
            <param name="borderColor">A <see cref="T:System.Drawing.Color"/> context.</param>
        </member>
        <member name="M:Syncfusion.WinForms.Core.BrushPainter.DrawBorder(System.Drawing.Graphics,System.Drawing.Rectangle,System.Windows.Forms.BorderStyle,System.Windows.Forms.Border3DStyle,System.Windows.Forms.ButtonBorderStyle,System.Drawing.Color,System.Windows.Forms.Border3DSide)">
            <summary>Draws a border based on the border style and border color.</summary>
            <param name="g">A <see cref="T:System.Drawing.Graphics"/> context.</param>
            <param name="rc">A <see cref="T:System.Drawing.Rectangle"/> value.</param>
            <param name="borderStyle">A <see cref="T:System.Windows.Forms.BorderStyle"/> context.</param>
            <param name="border3DStyle">A <see cref="T:System.Windows.Forms.Border3DStyle"/> used for the border style.</param>
            <param name="borderSingle">A <see cref="T:System.Windows.Forms.ButtonBorderStyle"/> context.</param>
            <param name="borderColor">A <see cref="T:System.Drawing.Color"/> context.</param>
            <param name="sides">A <see cref="T:System.Windows.Forms.Border3DStyle"/> used for the 3-D border style.</param>
        </member>
        <member name="M:Syncfusion.WinForms.Core.BrushPainter.DrawBorder(System.Drawing.Graphics,System.Drawing.Rectangle,System.Windows.Forms.BorderStyle,System.Windows.Forms.Border3DStyle,System.Windows.Forms.ButtonBorderStyle,System.Drawing.Color,System.Windows.Forms.Border3DSide,System.Boolean)">
            <summary>
            Draws the borders based on the specified styles information.
            </summary>
            <param name="g"> A <see cref="T:System.Drawing.Graphics"/> context.</param>
            <param name="rc">A output rectangle.</param>
            <param name="borderStyle">A border style.</param>
            <param name="border3DStyle">3D border style.</param>
            <param name="borderSingle">Border style in single mode.</param>
            <param name="borderColor">Border color in single mode.</param>
            <param name="sides">Sides that have to be drawn by methods.</param>
            <param name="useTransform">True - fix known bug in method, otherwise leave 
            old code (for compatibility only).</param>
        </member>
        <member name="M:Syncfusion.WinForms.Core.BrushPainter.FillRectangle(System.IntPtr,System.Drawing.Rectangle,Syncfusion.WinForms.Core.BrushInfo)">
            <summary>
            Fills the interior of rectangle based on the <see cref="T:Syncfusion.WinForms.Core.BrushInfo"/> information.
            </summary>
            <param name="hdc">A handle to the device context.</param>
            <param name="r">A <see cref="T:System.Drawing.Rectangle"/> context.</param>
            <param name="brush">A <see cref="T:Syncfusion.WinForms.Core.BrushInfo"/> context.</param>
        </member>
        <member name="M:Syncfusion.WinForms.Core.BrushPainter.FillRectangle(System.IntPtr,System.Drawing.Rectangle,System.Drawing.Color)">
            <summary>
            Fills the interior of rectangle based on the <see cref="T:System.Drawing.Color"/> information.
            </summary>
            <param name="hdc">A handle to the device context.</param>
            <param name="r">A <see cref="T:System.Drawing.Rectangle"/> context.</param>
            <param name="color">A <see cref="T:System.Drawing.Color"/> context.</param>
        </member>
        <member name="M:Syncfusion.WinForms.Core.BrushPainter.FillGradient(System.IntPtr,System.Drawing.Rectangle,System.Drawing.Color,System.Drawing.Color)">
            <summary>
            Fills the gradient style to rectangle based on the color values.
            </summary>
            <param name="hdc">A handle to the device context.</param>
            <param name="rect">Rectangle area.</param>
            <param name="color1">Starting color of the gradient.</param>
            <param name="color2">Ending color of the gradient.</param>
        </member>
        <member name="M:Syncfusion.WinForms.Core.BrushPainter.FillGradient(System.IntPtr,System.Drawing.Rectangle,System.Drawing.Color,System.Drawing.Color,System.Boolean)">
            <summary>
            Fills the gradient style to rectangle based on the color values.
            </summary>
            <param name="hdc">A handle to the device context.</param>
            <param name="rect">Rectangle area.</param>
            <param name="color1">Starting color of the gradient.</param>
            <param name="color2">Ending color of the gradient.</param>
            <param name="isVerticalGradient">Boolean value indicates to draw in vertical or horizontal.</param>
        </member>
        <member name="M:Syncfusion.WinForms.Core.BrushPainter.FillRegion(System.IntPtr,System.Drawing.Region,System.Drawing.Color)">
            <summary>
            Fills the region based on the color information.
            </summary>
            <param name="hdc">A handle to the device context.</param>
            <param name="region">A <see cref="T:System.Drawing.Region"/> context.</param>
            <param name="color">A <see cref="T:System.Drawing.Color"/>context.</param>
        </member>
        <member name="M:Syncfusion.WinForms.Core.BrushPainter.FillRegion(System.IntPtr,System.Drawing.Region,Syncfusion.WinForms.Core.BrushInfo)">
            <summary>
            Fills the region based on the <see cref="T:Syncfusion.WinForms.Core.BrushInfo"/> information.
            </summary>
            <param name="hdc">A handle to the device context.</param>
            <param name="region">A <see cref="T:System.Drawing.Region"/> context.</param>
            <param name="brush">A <see cref="T:Syncfusion.WinForms.Core.BrushInfo"/> context.</param>
        </member>
        <member name="M:Syncfusion.WinForms.Core.BrushPainter.FillPath(System.IntPtr,System.Drawing.Drawing2D.GraphicsPath,System.Drawing.Color)">
            <summary>
            Fills the interior of a path based on the <see cref="T:System.Drawing.Color"/> information.
            </summary>
            <param name="hdc">A handle to the device context.</param>
            <param name="path">A <see cref="T:System.Drawing.Drawing2D.GraphicsPath"/> context.</param>
            <param name="color">A <see cref="T:System.Drawing.Color"/>context.</param>
        </member>
        <member name="M:Syncfusion.WinForms.Core.BrushPainter.FillPath(System.IntPtr,System.Drawing.Drawing2D.GraphicsPath,Syncfusion.WinForms.Core.BrushInfo)">
            <summary>
            Fills the interior of a path based on the <see cref="T:Syncfusion.WinForms.Core.BrushInfo"/> information.
            </summary>
            <param name="hdc">A handle to the device context.</param>
            <param name="path">A <see cref="T:System.Drawing.Drawing2D.GraphicsPath"/> context.</param>
            <param name="brush">A <see cref="T:Syncfusion.WinForms.Core.BrushInfo"/> context.</param>
        </member>
        <member name="M:Syncfusion.WinForms.Core.BrushPainter.DrawLine(System.IntPtr,System.Drawing.Pen,System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Draws the line based on the position values.
            </summary>
            <param name="hdc">A handle to the device context.</param>
            <param name="pen">A <see cref="T:System.Drawing.Pen"/> context</param>
            <param name="x1">Start X position</param>
            <param name="y1">Start Y position</param>
            <param name="x2">End X position</param>
            <param name="y2">End Y position</param>
        </member>
        <member name="M:Syncfusion.WinForms.Core.BrushPainter.DrawRectangle(System.IntPtr,System.Drawing.Pen,System.Drawing.Rectangle)">
            <summary>
            Draws the rectangle based on the <see cref="T:System.Drawing.Pen"/> information.
            </summary>
            <param name="hdc">A handle to the device context.</param>
            <param name="pen">A <see cref="T:System.Drawing.Pen"/> context.</param>
            <param name="rect">Rectangle area.</param>
        </member>
        <member name="M:Syncfusion.WinForms.Core.BrushPainter.COLORREFtoRGB(System.Int32)">
            <summary>
            Converts the ColorRef value into the RGB value.
            </summary>
            <param name="colorRef">The integer value indicates the color value.</param>
            <returns>Returns the RGB value.</returns>
        </member>
        <member name="M:Syncfusion.WinForms.Core.BrushPainter.TransformRectangle(System.Drawing.Graphics,System.Drawing.Rectangle)">
            <summary>
            Recalculates the rectangle based on the graphics matrix settings. 
            </summary>
            <param name="g">A <see cref="T:System.Drawing.Graphics"/> context.</param>
            <param name="rect">A <see cref="T:System.Drawing.Rectangle"/> context.</param>
            <returns>Returns the transformed rectangle value.</returns>
        </member>
        <member name="M:Syncfusion.WinForms.Core.BrushPainter.CreateBrush(Syncfusion.WinForms.Core.BrushInfo)">
            <summary>
            Converts the <see cref="T:Syncfusion.WinForms.Core.BrushInfo"/> value to the <see cref="T:System.IntPtr"/> value.
            </summary>
            <param name="brush">A <see cref="T:Syncfusion.WinForms.Core.BrushInfo"/> context.</param>
            <returns>Returns the <see cref="T:System.IntPtr"/> value.</returns>
        </member>
        <member name="M:Syncfusion.WinForms.Core.BrushPainter.GetColorBlend(System.Drawing.Color[])">
            <summary>
            Converts the color array to the <see cref="T:System.Drawing.Drawing2D.ColorBlend"/> value.
            </summary>
            <param name="colors">A array of the color.</param>
            <returns>Returns the <see cref="T:System.Drawing.Drawing2D.ColorBlend"/> value.</returns>
        </member>
        <member name="M:Syncfusion.WinForms.Core.BrushPainter.GetGradientBrush(System.Drawing.Rectangle,System.Drawing.Color,System.Drawing.Color)">
            <summary>Gets a new instance of the <see cref="T:System.Drawing.Drawing2D.LinearGradientBrush"/> 
            based on the color values.</summary>
            <param name="rc">A <see cref="T:System.Drawing.Rectangle"/> value.</param>
            <param name="color1">A <see cref="T:System.Drawing.Color"/> contains the first color of gradient fill.</param>
            <param name="color2">A <see cref="T:System.Drawing.Color"/> contains the second color the gradient fill.</param>&gt;
            <returns>Returns a class with the specified points and colors.Returns the <see cref="T:System.Drawing.Brush"/> value.</returns>
        </member>
        <member name="M:Syncfusion.WinForms.Core.BrushPainter.GetVerticalGradientBrush(System.Drawing.Rectangle,System.Drawing.Color,System.Drawing.Color)">
            <summary>Returns a new instance of the <see cref="T:System.Drawing.Drawing2D.LinearGradientBrush"/> 
            based on the color values.</summary>        
            <param name="rc">A <see cref="T:System.Drawing.Rectangle"/> value. </param>
            <param name="color1">A <see cref="T:System.Drawing.Color"/> contains the first color of gradient fill.</param>
            <param name="color2">A <see cref="T:System.Drawing.Color"/> contains the second color the gradient fill.</param>&gt;
            <returns>Returns a <see cref="T:System.Drawing.Brush"/> with the specified points and colors.Returns the <see cref="T:System.Drawing.Brush"/> value.</returns>
        </member>
        <member name="M:Syncfusion.WinForms.Core.BrushPainter.GetLinearGradientBrush(System.Drawing.Color[],System.Drawing.RectangleF,Syncfusion.WinForms.Core.Enums.GradientStyle)">
            <summary>
            Returns the Linear gradient brush value based on the path, gradient style and color collection values.
            </summary>
            <param name="colors">The collection of colors used create a brush instance.</param>
            <param name="rect">The rectangle area used to create a linear gradient brush.</param>
            <param name="gradientStyle">The style of the gradient brush.</param>
            <returns>Returns the linear gradient brush.</returns>
        </member>
        <member name="M:Syncfusion.WinForms.Core.BrushPainter.GetPathGradientBrush(System.Drawing.Drawing2D.GraphicsPath,System.Drawing.Color[])">
            <summary>
            Returns the path gradient brush value based on the given path and color collection.
            </summary>
            <param name="path">The <see cref="T:System.Drawing.Drawing2D.GraphicsPath"/> used to initialize the path gradient.</param>
            <param name="colors">The color collection used to create a path gradient brush.</param>
            <returns>Returns the path gradient brush.</returns>
        </member>
        <member name="T:Syncfusion.WinForms.Core.BrushInfo">
            <summary>
            Holds information on how to fill the background of a window or grid cell.
            </summary>
            <remarks>
            <see cref="T:Syncfusion.WinForms.Core.BrushInfo"/> lets you specify a solid back color, gradient or pattern style with both
            back and fore color.
            <para/>
            This information can be persisted with serialization.
            <para/>
            You can also convert the information to a string and recreate it from a string.
            <para/>
            <see cref="T:Syncfusion.WinForms.Core.BrushInfo"/> is immutable (just like <see cref="T:System.String"/>). You cannot change its values.
            Instead you have to create a new <see cref="T:Syncfusion.WinForms.Core.BrushInfo"/> object.
            <para/>
            <see cref="T:Syncfusion.WinForms.Core.BrushInfo"/> can also be persisted into code when used as a property in a component designer.
            <para/>
            </remarks>
        </member>
        <member name="F:Syncfusion.WinForms.Core.BrushInfo.Separator">
            <summary>
            The separator value.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Core.BrushInfo.Separators">
            <summary>
            The collection of separator values.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Core.BrushInfo.empty">
            <summary>
            The empty brush value.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Core.BrushInfo.brushStyle">
            <summary>
            The <see cref="T:Syncfusion.WinForms.Core.Enums.BrushStyle"/> of the <see cref="T:Syncfusion.WinForms.Core.BrushInfo"/>.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Core.BrushInfo.brushStyleInfo">
            <summary>
            The brush style information of the <see cref="T:Syncfusion.WinForms.Core.BrushInfo"/>. 
            It contains the <see cref="P:Syncfusion.WinForms.Core.BrushInfo.PatternStyle"/> or <see cref="P:Syncfusion.WinForms.Core.BrushInfo.GradientStyle"/> 
            information of the <see cref="T:Syncfusion.WinForms.Core.BrushInfo"/>.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Core.BrushInfo.brushInfoColors">
            <summary>
            The back color is the first entry in this list and the fore color is the last entry in the list.
            </summary>    
        </member>
        <member name="M:Syncfusion.WinForms.Core.BrushInfo.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.WinForms.Core.BrushInfo"/> class.
            </summary>
        </member>
        <member name="M:Syncfusion.WinForms.Core.BrushInfo.#ctor(System.Drawing.Color)">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.WinForms.Core.BrushInfo"/> class with the specified solid back color.
            </summary>
            <param name="color">A <see cref="T:System.Drawing.Color"/> used as solid background.</param>
        </member>
        <member name="M:Syncfusion.WinForms.Core.BrushInfo.#ctor(System.Drawing.Color,System.Drawing.Color)">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.WinForms.Core.BrushInfo"/> class with a solid back color and fore color.
            </summary>
            <param name="foreColor">
            The fore Color.
            </param>
            <param name="backColor">
            The back Color.
            </param>
        </member>
        <member name="M:Syncfusion.WinForms.Core.BrushInfo.#ctor(Syncfusion.WinForms.Core.Enums.PatternStyle,System.Drawing.Color,System.Drawing.Color)">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.WinForms.Core.BrushInfo"/> class with a hatch style and pattern colors.
            </summary>
            <param name="patternStyle">A <see cref="P:Syncfusion.WinForms.Core.BrushInfo.PatternStyle"/>.</param>
            <param name="foreColor">A <see cref="T:System.Drawing.Color"/> used for fore color of the pattern.</param>
            <param name="backColor">A <see cref="T:System.Drawing.Color"/> used for back color the pattern.</param>
        </member>
        <member name="M:Syncfusion.WinForms.Core.BrushInfo.#ctor(Syncfusion.WinForms.Core.Enums.PatternStyle,Syncfusion.WinForms.Core.BrushInfoColorList)">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.WinForms.Core.BrushInfo"/> class with a hatch style and pattern colors.
            </summary>
            <param name="patternStyle">A <see cref="P:Syncfusion.WinForms.Core.BrushInfo.PatternStyle"/> value.</param>
            <param name="colors">List of colors.</param>
        </member>
        <member name="M:Syncfusion.WinForms.Core.BrushInfo.#ctor(Syncfusion.WinForms.Core.Enums.PatternStyle,System.Drawing.Color[])">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.WinForms.Core.BrushInfo"/> class with a hatch style and pattern colors.
            </summary>
            <param name="patternStyle">A <see cref="P:Syncfusion.WinForms.Core.BrushInfo.PatternStyle"/>.</param>
            <param name="colors">List of colors.</param>
        </member>
        <member name="M:Syncfusion.WinForms.Core.BrushInfo.#ctor(Syncfusion.WinForms.Core.Enums.GradientStyle,System.Drawing.Color,System.Drawing.Color)">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.WinForms.Core.BrushInfo"/> class with a gradient style and gradient fill colors.
            </summary>
            <param name="gradientStyle">A <see cref="P:Syncfusion.WinForms.Core.BrushInfo.PatternStyle"/>.</param>
            <param name="foreColor">A <see cref="T:System.Drawing.Color"/> used for fore color of the gradient fill.</param>
            <param name="backColor">A <see cref="T:System.Drawing.Color"/> used for back color the gradient fill.</param>
        </member>
        <member name="M:Syncfusion.WinForms.Core.BrushInfo.#ctor(Syncfusion.WinForms.Core.Enums.GradientStyle,Syncfusion.WinForms.Core.BrushInfoColorList)">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.WinForms.Core.BrushInfo"/> class with a gradient style and gradient fill colors.
            </summary>
            <param name="gradientStyle">A <see cref="P:Syncfusion.WinForms.Core.BrushInfo.GradientStyle"/>.</param>
            <param name="colors">List of gradient fill colors.</param>
        </member>
        <member name="M:Syncfusion.WinForms.Core.BrushInfo.#ctor(Syncfusion.WinForms.Core.Enums.GradientStyle,System.Drawing.Color[])">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.WinForms.Core.BrushInfo"/> class with a hatch style and pattern colors.
            </summary>
            <param name="gradientStyle">A <see cref="P:Syncfusion.WinForms.Core.BrushInfo.GradientStyle"/>.</param>
            <param name="colors">List of colors.</param>
        </member>
        <member name="M:Syncfusion.WinForms.Core.BrushInfo.#ctor(Syncfusion.WinForms.Core.Enums.BrushStyle,System.Object,System.Drawing.Color,System.Drawing.Color)">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.WinForms.Core.BrushInfo"/> class with any BrushStyle. Internal only.
            </summary>
            <param name="style">
            The style.
            </param>
            <param name="styleInfo">
            The style Info.
            </param>
            <param name="foreColor">
            The fore Color.
            </param>
            <param name="backColor">
            The back Color.
            </param>
        </member>
        <member name="M:Syncfusion.WinForms.Core.BrushInfo.#ctor(System.Int32,Syncfusion.WinForms.Core.BrushInfo)">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.WinForms.Core.BrushInfo"/> class with a new alpha-blend value and copies other information from a given <see cref="T:Syncfusion.WinForms.Core.BrushInfo"/>.
            </summary>
            <param name="alpha">
            The alpha value that should be applied to the fore color and back color of the new brush.
            </param>
            <param name="br">
            A <see cref="T:Syncfusion.WinForms.Core.BrushInfo"/> that holds information for this <see cref="T:Syncfusion.WinForms.Core.BrushInfo"/>.
            </param>
        </member>
        <member name="M:Syncfusion.WinForms.Core.BrushInfo.#ctor(Syncfusion.WinForms.Core.BrushInfo)">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.WinForms.Core.BrushInfo"/> class and copies its information from a given <see cref="T:Syncfusion.WinForms.Core.BrushInfo"/>.
            </summary>
            <param name="brush">A <see cref="T:Syncfusion.WinForms.Core.BrushInfo"/> that holds information for this <see cref="T:Syncfusion.WinForms.Core.BrushInfo"/>.</param>
        </member>
        <member name="M:Syncfusion.WinForms.Core.BrushInfo.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.WinForms.Core.BrushInfo"/> class.
            </summary>
            <param name="info">A serialization information.</param>
            <param name="context">A <see cref="T:System.Runtime.Serialization.StreamingContext"/> contains the information.</param>
        </member>
        <member name="M:Syncfusion.WinForms.Core.BrushInfo.Parse(System.String)">
            <summary>
            Creates a new <see cref="T:Syncfusion.WinForms.Core.BrushInfo"/> object and initializes it from a string.
            </summary>
            <param name="s">A string in the format BrushStyle;Style;ForeColor;BackColor.</param>
            <returns>A new <see cref="T:Syncfusion.WinForms.Core.BrushInfo"/> object.</returns>
        </member>
        <member name="M:Syncfusion.WinForms.Core.BrushInfo.ClearColorInfo">
            <summary>
            Clears the <see cref="P:Syncfusion.WinForms.Core.BrushInfo.BrushInfoColorList"/> information.
            </summary>
        </member>
        <member name="M:Syncfusion.WinForms.Core.BrushInfo.ToString">
            <summary>
            Overloaded. Returns the string representation of the brush in the format BrushStyle;Style;ForeColor;BackColor.
            </summary>
            <returns>
            The <see cref="T:System.String"/> value.
            </returns>
        </member>
        <member name="M:Syncfusion.WinForms.Core.BrushInfo.ToString(System.String)">
            <summary>
            Returns the string representation of the brush in the format BrushStyle;Style;ForeColor;BackColor.
            </summary>
            <param name="format">Specifies the format for string. NULL for default, "compact" for a compact string, "G" for more descriptive text.</param>
            <returns>Returns the string value.</returns>
        </member>
        <member name="M:Syncfusion.WinForms.Core.BrushInfo.Clone">
            <summary>
            Creates a new object that is a copy of the current instance.
            </summary>
            <returns>A new object that is a copy of this instance.</returns>
        </member>
        <member name="M:Syncfusion.WinForms.Core.BrushInfo.Dispose">
            <summary>
            Clean up any resources being used.
            </summary>
        </member>
        <member name="M:Syncfusion.WinForms.Core.BrushInfo.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Populates a <see cref="T:System.Runtime.Serialization.SerializationInfo"/> with the data needed to serialize the target object.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo"/> to populate with data.</param>
            <param name="context">The destination for this serialization.</param>
        </member>
        <member name="M:Syncfusion.WinForms.Core.BrushInfo.System#ICloneable#Clone">
            <summary>
            Creates a new object that is a copy of this instance.
            </summary>
            <returns>The copy of this will be return.</returns>
        </member>
        <member name="M:Syncfusion.WinForms.Core.BrushInfo.System#Xml#Serialization#IXmlSerializable#WriteXml(System.Xml.XmlWriter)">
            <summary>
            Serializes the contents of this object into an XML stream.
            </summary>
            <param name="writer">Represents the XML stream.</param>
        </member>
        <member name="M:Syncfusion.WinForms.Core.BrushInfo.System#Xml#Serialization#IXmlSerializable#GetSchema">
            <summary>
            Not implemented and returns NULL.
            </summary>
            <returns>Returns a null.</returns>
        </member>
        <member name="M:Syncfusion.WinForms.Core.BrushInfo.System#Xml#Serialization#IXmlSerializable#ReadXml(System.Xml.XmlReader)">
            <summary>
            De-serialize the contents of this object from an XML stream.
            </summary>
            <param name="reader">Represents the XML stream.</param>
        </member>
        <member name="M:Syncfusion.WinForms.Core.BrushInfo.GetStyle">
            <summary>
            Gets the style of the <see cref="T:Syncfusion.WinForms.Core.BrushInfo"/>.
            </summary>
            <returns>Returns the <see cref="T:Syncfusion.WinForms.Core.Enums.BrushStyle"/> information.</returns>
        </member>
        <member name="M:Syncfusion.WinForms.Core.BrushInfo.SetStyle(Syncfusion.WinForms.Core.Enums.BrushStyle)">
            <summary>
            Sets the style for the <see cref="T:Syncfusion.WinForms.Core.BrushInfo"/>.
            </summary>
            <param name="style">A <see cref="T:Syncfusion.WinForms.Core.Enums.BrushStyle"/> context.</param>
            <returns>Returns the <see cref="T:Syncfusion.WinForms.Core.BrushInfo"/> value.</returns>
        </member>
        <member name="M:Syncfusion.WinForms.Core.BrushInfo.GetBackColor">
            <summary>
            Gets the back color value of the <see cref="T:Syncfusion.WinForms.Core.BrushInfo"/>.
            </summary>
            <returns>Returns the color value.</returns>
        </member>
        <member name="M:Syncfusion.WinForms.Core.BrushInfo.SetBackColor(System.Drawing.Color)">
            <summary>
            Sets the back color for <see cref="T:Syncfusion.WinForms.Core.BrushInfo"/>.
            </summary>
            <param name="color">A <see cref="T:System.Drawing.Color"/> value.</param>
            <returns>Returns the <see cref="T:Syncfusion.WinForms.Core.BrushInfo"/> value.</returns>
        </member>
        <member name="M:Syncfusion.WinForms.Core.BrushInfo.GetPatternStyle">
            <summary>
            Gets the pattern style of the <see cref="T:Syncfusion.WinForms.Core.BrushInfo"/>.
            </summary>
            <returns>Returns the pattern style.</returns>
        </member>
        <member name="M:Syncfusion.WinForms.Core.BrushInfo.SetPatternStyle(Syncfusion.WinForms.Core.Enums.PatternStyle)">
            <summary>
            Sets the <see cref="P:Syncfusion.WinForms.Core.BrushInfo.PatternStyle"/> for <see cref="T:Syncfusion.WinForms.Core.BrushInfo"/>.
            </summary>
            <param name="patternStyle">The <see cref="P:Syncfusion.WinForms.Core.BrushInfo.PatternStyle"/> value.</param>
            <returns>Returns the <see cref="T:Syncfusion.WinForms.Core.BrushInfo"/> value.</returns>
        </member>
        <member name="M:Syncfusion.WinForms.Core.BrushInfo.GetGradientStyle">
            <summary>
            Gets the <see cref="P:Syncfusion.WinForms.Core.BrushInfo.GradientStyle"/> of <see cref="T:Syncfusion.WinForms.Core.BrushInfo"/>.
            </summary>
            <returns>Returns the <see cref="P:Syncfusion.WinForms.Core.BrushInfo.GradientStyle"/> value.</returns>
        </member>
        <member name="M:Syncfusion.WinForms.Core.BrushInfo.SetGradientStyle(Syncfusion.WinForms.Core.Enums.GradientStyle)">
            <summary>
            Sets the <see cref="P:Syncfusion.WinForms.Core.BrushInfo.GradientStyle"/> of <see cref="T:Syncfusion.WinForms.Core.BrushInfo"/>.
            </summary>
            <param name="gradientStyle">The <see cref="P:Syncfusion.WinForms.Core.BrushInfo.GradientStyle"/> value.</param>
            <returns>Returns the <see cref="T:Syncfusion.WinForms.Core.BrushInfo"/> value.</returns>
        </member>
        <member name="M:Syncfusion.WinForms.Core.BrushInfo.GetForeColor">
            <summary>
            Gets the fore color value of the <see cref="T:Syncfusion.WinForms.Core.BrushInfo"/>.
            </summary>
            <returns>Returns the color value.</returns>
        </member>
        <member name="M:Syncfusion.WinForms.Core.BrushInfo.SetForeColor(System.Drawing.Color)">
            <summary>
            Sets the fore color value for <see cref="T:Syncfusion.WinForms.Core.BrushInfo"/>.
            </summary>
            <param name="color">A <see cref="T:System.Drawing.Color"/> value.</param>
            <returns>Returns the <see cref="T:Syncfusion.WinForms.Core.BrushInfo"/> value.</returns>
        </member>
        <member name="M:Syncfusion.WinForms.Core.BrushInfo.InitGradientColors(System.Drawing.Color,System.Drawing.Color)">
            <summary>
            Initializes the gradient colors based on the foreColor and backColor values.
            </summary>
            <param name="backColor">A <see cref="T:System.Drawing.Color"/> value contains the back color value.</param>
            <param name="foreColor">A <see cref="T:System.Drawing.Color"/> value contains the fore color value.</param>
        </member>
        <member name="M:Syncfusion.WinForms.Core.BrushInfo.InitGradientColors(Syncfusion.WinForms.Core.BrushInfoColorList)">
            <summary>
            Initializes the gradient colors based on the <see cref="P:Syncfusion.WinForms.Core.BrushInfo.BrushInfoColorList"/> value.
            </summary>
            <param name="list">A <see cref="P:Syncfusion.WinForms.Core.BrushInfo.BrushInfoColorList"/> context.</param>
        </member>
        <member name="M:Syncfusion.WinForms.Core.BrushInfo.SetDescription(System.String)">
            <summary>
            Sets the description for the <see cref="T:Syncfusion.WinForms.Core.BrushInfo"/>.
            </summary>
            <param name="brushDescription">The string value.</param>
            <returns>Returns the <see cref="T:Syncfusion.WinForms.Core.BrushInfo"/> information.</returns>
        </member>
        <member name="P:Syncfusion.WinForms.Core.BrushInfo.Empty">
            <summary>
            Gets a empty <see cref="T:Syncfusion.WinForms.Core.BrushInfo"/>.
            </summary>
        </member>
        <member name="P:Syncfusion.WinForms.Core.BrushInfo.IsEmpty">
            <summary>
            Gets a value indicating whether a brush is an empty object.
            </summary>
        </member>
        <member name="P:Syncfusion.WinForms.Core.BrushInfo.BackColor">
            <summary>
            Gets the back color.
            </summary>
        </member>
        <member name="P:Syncfusion.WinForms.Core.BrushInfo.ForeColor">
            <summary>
            Gets the fore color value.
            </summary>
        </member>
        <member name="P:Syncfusion.WinForms.Core.BrushInfo.BrushInfoColorList">
            <summary>
            Gets the colors list.The first entry in this list will be the same as the back color property,
            the last entry will be same as the fore color property.
            </summary>
            <value>A reference to the <see cref="P:Syncfusion.WinForms.Core.BrushInfo.BrushInfoColorList"/> instance.</value>       
        </member>
        <member name="P:Syncfusion.WinForms.Core.BrushInfo.PatternStyle">
            <summary>
            Gets the pattern style.
            </summary>
        </member>
        <member name="P:Syncfusion.WinForms.Core.BrushInfo.GradientStyle">
            <summary>
            Gets the gradient style.
            </summary>
        </member>
        <member name="P:Syncfusion.WinForms.Core.BrushInfo.Style">
            <summary>
            Gets the brush style information (solid, gradient or pattern).
            </summary>
        </member>
        <member name="T:Syncfusion.WinForms.Core.BrushInfoColorList">
            <summary>
            Represents a class that provides options to save list of <see cref="T:System.Drawing.Color"/> objects.
            </summary>
        </member>
        <member name="M:Syncfusion.WinForms.Core.BrushInfoColorList.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.WinForms.Core.BrushInfoColorList"/> class. 
            Overloaded. Creates a new instance of this class.
            </summary>
        </member>
        <member name="M:Syncfusion.WinForms.Core.BrushInfoColorList.#ctor(System.Drawing.Color[])">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.WinForms.Core.BrushInfoColorList"/> class with some colors.
            </summary>
            <param name="colors">An array of color objects</param>
        </member>
        <member name="M:Syncfusion.WinForms.Core.BrushInfoColorList.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.WinForms.Core.BrushInfoColorList"/> class from a serialization stream.
            </summary>
            <param name="info">An object that holds all the data needed to serialize or deserialize this instance.</param>
            <param name="context">Describes the source and destination of the serialized stream specified by info. </param>
        </member>
        <member name="M:Syncfusion.WinForms.Core.BrushInfoColorList.InsertRange(System.Int32,System.Collections.ICollection)">
            <summary>
            Overridden. See <see cref="M:System.Collections.ArrayList.InsertRange"/>.
            </summary>
            <param name="index">The zero-based index at which the new elements should be inserted.</param>
            <param name="c">The <see cref="T:System.Collections.ICollection"/> whose elements should be inserted into the
            <see cref="T:System.Collections.ArrayList"/>. The collection itself cannot be null, but it can
            contain elements that are null.</param>
        </member>
        <member name="M:Syncfusion.WinForms.Core.BrushInfoColorList.Clear">
            <summary>
            Overridden. See <see cref="M:System.Collections.ArrayList.Clear"/>.
            </summary>
        </member>
        <member name="M:Syncfusion.WinForms.Core.BrushInfoColorList.RemoveRange(System.Int32,System.Int32)">
            <summary>
            Overridden. See <see cref="M:System.Collections.ArrayList.RemoveRange"/>.
            </summary>
            <param name="index">The zero-based index at which the new elements should be inserted.</param>
            <param name="count">The number of elements to remove.</param>>
        </member>
        <member name="M:Syncfusion.WinForms.Core.BrushInfoColorList.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Populates a <see cref="T:System.Runtime.Serialization.SerializationInfo"/> with the data needed to serialize the target object.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo"/> to populate with data.</param>
            <param name="context">The destination for this serialization.</param>
        </member>
        <member name="M:Syncfusion.WinForms.Core.BrushInfoColorList.Add(System.Drawing.Color)">
            <summary>
            Add the color value in collection.
            </summary>
            <param name="color">A <see cref="T:System.Drawing.Color"/> value.</param>
        </member>
        <member name="M:Syncfusion.WinForms.Core.BrushInfoColorList.AddRange(System.Drawing.Color[])">
            <summary>
            Add the array of color values into the collection.
            </summary>
            <param name="colors">A array of the <see cref="T:System.Drawing.Color"/> objects.</param>
        </member>
        <member name="M:Syncfusion.WinForms.Core.BrushInfoColorList.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Populates a <see cref="T:System.Runtime.Serialization.SerializationInfo"/> with the data needed to serialize the target object.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo"/> to populate with data.</param>
            <param name="context">The destination for this serialization.</param>
        </member>
        <member name="P:Syncfusion.WinForms.Core.BrushInfoColorList.Item(System.Int32)">
            <summary>
            Gets or sets the color at the specified index.
            </summary>
            <param name="index">The index value.</param>
            <returns>Returns the color value.</returns>
        </member>
        <member name="T:Syncfusion.WinForms.Core.BrushInfoColorsCollectionEditor">
            <summary>
            Provides a user interface that can edit most types of collections at design time.
            </summary>
        </member>
        <member name="M:Syncfusion.WinForms.Core.BrushInfoColorsCollectionEditor.#ctor(System.Type)">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.WinForms.Core.BrushInfoColorsCollectionEditor"/> class base on the specified collection type.
            </summary>
            <param name="type">The type of the collection for this editor to edit.</param>
        </member>
        <member name="M:Syncfusion.WinForms.Core.BrushInfoColorsCollectionEditor.EditValue(System.ComponentModel.ITypeDescriptorContext,System.IServiceProvider,System.Object)">
            <summary>
            Overridden. See <see cref="M:System.ComponentModel.Design.CollectionEditor.EditValue"/>.
            </summary>
            <param name="context">An <see cref="T:System.ComponentModel.ITypeDescriptorContext"/> that can be used to gain additional context information.</param>
            <param name="provider">A service provider object through which editing services can be obtained.</param>
            <param name="value">The object to edit the value of.</param>
            <returns>The new value of the object. If the value of the object has not changed, this
            should return the same object it was passed.</returns>
        </member>
        <member name="M:Syncfusion.WinForms.Core.BrushInfoColorsCollectionEditor.SetItems(System.Object,System.Object[])">
            <summary>
            Overridden. See <see cref="M:System.ComponentModel.Design.CollectionEditor.SetItems"/>.
            </summary>
            <param name="editValue">The collection to edit.</param>
            <param name="value">An array of objects to set as the collection items.</param>
            <returns>The newly created collection object or, otherwise, the collection indicated by the editValue parameter.</returns>
        </member>
        <member name="M:Syncfusion.WinForms.Core.BrushInfoColorsCollectionEditor.CanRemoveInstance(System.Object)">
            <summary>
            Prevent deleting items when there are only 2 items (or less) in the collection.
            </summary>
            <param name="value">A <see cref="T:System.Object"/> value.</param>
            <returns>true if it is permissible to remove this value from the collection; otherwise,
            false. The default implementation always returns true.</returns>
        </member>
        <member name="M:Syncfusion.WinForms.Core.BrushInfoColorsCollectionEditor.GetItemsInCollectionEditorFormListBox">
            <summary>
            Gets the items count in ListBox from the CollectionEditor.
            </summary>
            <returns>Returns the items count</returns>
        </member>
        <member name="T:Syncfusion.WinForms.Core.ColorListConverter">
            <summary>
            Provides a unified way of converting types of values to other types.
            </summary>
        </member>
        <member name="M:Syncfusion.WinForms.Core.ColorListConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
            <summary>
            Overridden. See <see cref="M:System.ComponentModel.TypeConverter.ConvertTo"/>.
            </summary>
            <param name="context">An <see cref="T:System.ComponentModel.ITypeDescriptorContext"/> that provides a format context.</param>
            <param name="culture">A <see cref="T:System.Globalization.CultureInfo"/>. If null is passed, the current culture is assumed.</param>
            <param name="value">The <see cref="T:System.Object"/> to convert.</param>
            <param name="destinationType">The <see cref="T:System.Type"/> to convert the value parameter to.</param>
            <returns>An <see cref="T:System.Object"/> that represents the converted value.</returns>
        </member>
        <member name="M:Syncfusion.WinForms.Core.ColorListConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)">
            <summary>
            Overridden. See <see cref="M:System.ComponentModel.TypeConverter.CanConvertTo"/>. 
            </summary>
            <param name="context">An <see cref="T:System.ComponentModel.ITypeDescriptorContext"/> that provides a format context.</param>
            <param name="destinationType">A <see cref="T:System.Type"/> that represents the type you want to convert to.</param>
            <returns>true if this converter can perform the conversion; otherwise, false.</returns>
        </member>
        <member name="T:Syncfusion.WinForms.Core.CheckBoxPainter">
            <summary>
            Represents the static class the contains the methods for painting the checkbox.
            </summary>
        </member>
        <member name="M:Syncfusion.WinForms.Core.CheckBoxPainter.DrawCheckBox(System.Drawing.Graphics,System.Drawing.Rectangle,System.Windows.Forms.CheckState,Syncfusion.WinForms.Core.Styles.CheckBoxStyleInfoBase)">
            <summary>
            Draws the check box for the cell.
            </summary>
            <param name="graphics">The <see cref="T:System.Drawing.Graphics"/> that used to draw the check box.</param>
            <param name="checkBoxBounds">The bounds of the check box.</param>
            <param name="state">The state of the check box.</param>
            <param name="checkBoxStyle">The style for the check box.</param>
        </member>
        <member name="M:Syncfusion.WinForms.Core.CheckBoxPainter.GetCheckBoxSize(Syncfusion.WinForms.Core.Styles.CheckBoxStyleInfoBase)">
            <summary>
            Get the checkbox size based on the given <see cref="T:Syncfusion.WinForms.Core.Styles.CheckBoxStyleInfoBase"/> value.
            </summary>
            <param name="checkBoxStyle">The <see cref="T:Syncfusion.WinForms.Core.Styles.CheckBoxStyleInfoBase"/> value.</param>
            <returns>Returns the checkbox size.</returns>
        </member>
        <member name="T:Syncfusion.WinForms.Core.ImagePainter">
            <summary>
            Represents a class that provides the various options for drawing the images and icons.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Core.ImagePainter.bitmaps">
            <summary>
            The bitmap cache.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Core.ImagePainter.manifestPrefix">
            <summary>
            The manifest to load from. The bitmaps should be saved in the Resources
            tree in the Visual Studio project with the build action set to "Embedded Resource".
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Core.ImagePainter.assembly">
            <summary>
            The assembly to load from. The bitmaps should be saved in the Resources
            tree in Visual Studio project with the build action set to "Embedded Resource".
            </summary>
        </member>
        <member name="M:Syncfusion.WinForms.Core.ImagePainter.#ctor(System.String,System.Reflection.Assembly)">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.WinForms.Core.ImagePainter"/> class, with manifestPrefix and a reference to the assembly
            to load bitmaps from.
            </summary>
            <param name="manifestPrefix"> The manifest to load from. The bitmaps should be saved in the Resources
            tree in the Visual Studio project with the build action set to "Embedded Resource".</param>
            <param name="ass">The assembly to load from. The bitmaps should be saved in the Resources
            tree in Visual Studio project with the build action set to "Embedded Resource".</param>
        </member>
        <member name="M:Syncfusion.WinForms.Core.ImagePainter.DrawImage(System.Drawing.Graphics,System.Drawing.Rectangle,System.Drawing.Point,System.Drawing.Bitmap,System.Drawing.Color)">
            <summary>
            Paints the bitmap by substituting black pixels with a new color.
            </summary>
            <param name="graphics">A graphics object used to draw the bitmap.</param>
            <param name="bounds">A rectangle which contains the boundary data.</param>
            <param name="offset">A point that specifies pixels to offset the bitmap from its origin point.</param>
            <param name="bmp">The bitmap to be drawn on the screen.</param>
            <param name="newColor">The new color used to substitute black pixels.</param>
            <returns>Returns a rectangle which contains the boundary data of the drawn bitmap.</returns>        
        </member>
        <member name="M:Syncfusion.WinForms.Core.ImagePainter.DrawImage(System.Drawing.Graphics,System.Drawing.Rectangle,System.Drawing.Point,System.Drawing.Bitmap,System.Drawing.Color,System.Drawing.Color)">
            <summary>
            Paints the bitmap by substituting old color with a new color.
            </summary>
            <param name="graphics">A graphics object used to draw the bitmap.</param>
            <param name="bounds">A rectangle which contains the boundary data.</param>
            <param name="offset">A point that specifies pixels to offset the bitmap from its origin point.</param>
            <param name="bmp">The bitmap to be drawn on the screen.</param>
            <param name="newColor">The new color used to substitute old color.</param>
            <param name="oldColor">The old color value.</param>
            <returns>A rectangle which contains the boundary data of the drawn bitmap.</returns>        
        </member>
        <member name="M:Syncfusion.WinForms.Core.ImagePainter.DrawImage(System.Drawing.Graphics,System.Drawing.Image,System.Windows.Forms.ImageLayout,System.Drawing.Rectangle,System.Drawing.Point,System.Windows.Forms.RightToLeft)">
            <summary>
            Draws the image on the given graphics based on the image layout type and rectangle values.
            </summary>
            <param name="graphics">A graphics object used to draw the image.</param>
            <param name="image">A image used to draw on the graphics.</param>
            <param name="imageLayout">Image layout of the image to draw.</param>
            <param name="clientRect">A rectangle area where need to draw the image.</param>
            <param name="offset">The offset value used to adjust the image location.</param>
            <param name="rightToLeft">A boolean value indicates the right to left mode.</param>
        </member>
        <member name="M:Syncfusion.WinForms.Core.ImagePainter.DrawImage(System.Drawing.Graphics,System.Drawing.Image,System.Windows.Forms.ImageLayout,System.Drawing.Rectangle,System.Drawing.Point,System.Windows.Forms.RightToLeft,System.Drawing.Imaging.ImageAttributes)">
            <summary>
            Draws the image on the given graphics based on the image layout type, rectangle and image attribute values.
            </summary>
            <param name="graphics">A graphics object used to draw the image.</param>
            <param name="image">A image value.</param>
            <param name="imageLayout">Image layout of the image.</param>
            <param name="clientRect">A rectangle area where need to draw the image.</param>
            <param name="offset">The offset value.</param>
            <param name="rightToLeft">A boolean value indicates the right to left mode.</param>
            <param name="imageAttributes">A image attribute value.</param>
        </member>
        <member name="M:Syncfusion.WinForms.Core.ImagePainter.DrawGrayedImage(System.Drawing.Graphics,System.Drawing.Image,System.Int32,System.Int32)">
            <summary>Draws the grayed image at the specified coordinates.</summary>
            <param name="graphics">A <see cref="T:System.Drawing.Graphics"/> context.</param>
            <param name="image">A <see cref="T:System.Drawing.Image"/> context.</param>
            <param name="left">The integer value indicates the left position of the image.</param>
            <param name="top">The integer value indicates the top position of the image.</param>
        </member>
        <member name="M:Syncfusion.WinForms.Core.ImagePainter.DrawGrayedImage(System.Drawing.Graphics,System.Drawing.Image,System.Int32,System.Int32,System.Single)">
            <summary>Draws the image based on the greyScale value.</summary>
            <param name="graphics">A <see cref="T:System.Drawing.Graphics"/> context.</param>
            <param name="image">A <see cref="T:System.Drawing.Image"/> context.</param>
            <param name="left">The integer value indicates the left position of the image.</param>
            <param name="top">The integer value indicates the top position of the image.</param>
            <param name="grayScale">The float value indicates the gray scale value of the image.</param>
        </member>
        <member name="M:Syncfusion.WinForms.Core.ImagePainter.DrawGrayedImage(System.Drawing.Graphics,System.Drawing.Image,System.Drawing.Rectangle,System.Drawing.RectangleF)">
            <summary>Draws the grayed image from source rectangle to destination rectangle.</summary>
            <param name="graphics">A <see cref="T:System.Drawing.Graphics"/> context.</param>
            <param name="image">A <see cref="T:System.Drawing.Image"/> context.</param>
            <param name="destRect">The destination rectangle.</param>
            <param name="srcRect">The source rectangle.</param>
        </member>
        <member name="M:Syncfusion.WinForms.Core.ImagePainter.DrawGrayedImage(System.Drawing.Graphics,System.Drawing.Image,System.Drawing.Rectangle,System.Drawing.RectangleF,System.Single)">
            <summary>Draws the grayed image from source rectangle to destination rectangle based on the gray Scale value.</summary>
            <param name="graphics">A <see cref="T:System.Drawing.Graphics"/> context.</param>
            <param name="image">A <see cref="T:System.Drawing.Image"/> context.</param>
            <param name="destRect">The destination rectangle.</param>
            <param name="srcRect">The source rectangle.</param>
            <param name="grayScale">The gray scale value.</param>
        </member>
        <member name="M:Syncfusion.WinForms.Core.ImagePainter.DrawTransparentImage(System.Drawing.Graphics,System.Drawing.Point,System.Drawing.Image,System.Single)">
            <summary>Draws the transparent image at specified position based on the transparency value.</summary>
            <param name="graphics">A <see cref="T:System.Drawing.Graphics"/> context.</param>
            <param name="point">A <see cref="T:System.Drawing.Point"/> context.</param>
            <param name="image">A <see cref="T:System.Drawing.Image"/> context.</param>
            <param name="transparency">A transparency value. The transparency should be in the range 0 to 1.</param>
        </member>
        <member name="M:Syncfusion.WinForms.Core.ImagePainter.DrawTransparentImage(System.Drawing.Graphics,System.Drawing.Rectangle,System.Drawing.Image,System.Single)">
            <summary>Draws the transparent image at specified rectangle based on the transparency value.</summary>
            <param name="graphics">A <see cref="T:System.Drawing.Graphics"/> context.</param>
            <param name="rect">A <see cref="T:System.Drawing.Rectangle"/> context.</param>
            <param name="image">A <see cref="T:System.Drawing.Image"/> context.</param>
            <param name="transparency">A transparency value. The transparency should be in the range 0 to 1.</param>
        </member>
        <member name="M:Syncfusion.WinForms.Core.ImagePainter.DrawShadowImage(System.Drawing.Graphics,System.Drawing.Image,System.Drawing.Rectangle,System.Single,System.Int32,Syncfusion.WinForms.Core.Enums.ShadowOption)">
            <summary>
            Draws the image with shadow at specified coordinates based on the shadowScale and shadowOffset values.
            </summary>
            <param name="graphics">A <see cref="T:System.Drawing.Graphics"/> context.</param>
            <param name="image">A <see cref="T:System.Drawing.Image"/> context.</param>
            <param name="rectange">A <see cref="T:System.Drawing.Rectangle"/> context.</param>
            <param name="shadowScale">A shadow scale value used to specify the shadow level.The shadowScale should be in the range 0 to 1.</param>
            <param name="shadowOffset">A shadow offset value. This value is must be greater than zero.</param>
            <param name="options">A <see cref="T:Syncfusion.WinForms.Core.Enums.ShadowOption"/> value.</param>
        </member>
        <member name="M:Syncfusion.WinForms.Core.ImagePainter.DrawShadowImage(System.Drawing.Graphics,System.Drawing.Image,System.Int32,System.Int32,System.Int32,System.Int32,System.Single,System.Int32,Syncfusion.WinForms.Core.Enums.ShadowOption)">
            <summary>Draws the image with shadow at specified coordinates based on the shadowScale and shadowOffset values.
            </summary>
            <param name="graphics">A <see cref="T:System.Drawing.Graphics"/> context.</param>
            <param name="image">A <see cref="T:System.Drawing.Image"/> context.</param>
            <param name="x">The integer value indicates the left position of the image.</param>
            <param name="y">The integer value indicates the top position of the image.</param>
            <param name="width">The integer value indicates the width of the image.</param>
            <param name="height">The integer value indicates the height of the image.</param>
            <param name="shadowScale">A shadow scale value used to specify the shadow level.The shadow scale should be in the range 0 to 1.</param>
            <param name="shadowOffset">A shadow offset value.</param>
            <param name="options">A <see cref="T:Syncfusion.WinForms.Core.Enums.ShadowOption"/> specifies options to draw shadow.</param>
        </member>
        <member name="M:Syncfusion.WinForms.Core.ImagePainter.DrawShadowImage(System.Drawing.Graphics,System.Drawing.Image,System.Drawing.Point,System.Single,System.Int32,Syncfusion.WinForms.Core.Enums.ShadowOption)">
            <summary>
            Draws the image with shadow at specified position based on the shadowScale and shadowOffset values.
            </summary>
            <param name="graphics">A <see cref="T:System.Drawing.Graphics"/> context.</param>
            <param name="image">A <see cref="T:System.Drawing.Image"/> context.</param>
            <param name="point">A point value holds the image location.</param>
            <param name="shadowScale">A shadow scale value used to specify the shadow level.The shadowScale should be in the range 0 to 1.</param>
            <param name="shadowOffset">A shadow offset value.</param>
            <param name="options">A <see cref="T:Syncfusion.WinForms.Core.Enums.ShadowOption"/> specifies options to draw shadow.</param>
        </member>
        <member name="M:Syncfusion.WinForms.Core.ImagePainter.DrawRotatedImage(System.Drawing.Graphics,System.Drawing.Bitmap,System.Single,System.Drawing.Rectangle)">
            <summary>
            Draws the rotated image at specified location based on the angle information.
            </summary>
            <param name="gr">A <see cref="T:System.Drawing.Graphics"/> context.</param>
            <param name="bitmap">A <see cref="T:System.Drawing.Bitmap"/> context.</param>
            <param name="angle">A angle value.</param>
            <param name="rect">A <see cref="T:System.Drawing.Rectangle"/> value.</param>
        </member>
        <member name="M:Syncfusion.WinForms.Core.ImagePainter.DrawIcon(System.IntPtr,System.Drawing.Icon,System.Drawing.Rectangle)">
            <summary>
            Draws the image represented by the specified <see cref="T:System.Drawing.Icon"/> within the area
            specified by a <see cref="T:System.Drawing.Rectangle"/> structure.</summary>
            <param name="hdc">A handle to the device context.</param>
            <param name="icon">A <see cref="T:System.Drawing.Icon"/> context.</param>
            <param name="rect">A <see cref="T:System.Drawing.Rectangle"/> context.</param>
        </member>
        <member name="M:Syncfusion.WinForms.Core.ImagePainter.DrawImage(System.IntPtr,System.Drawing.Image,System.Drawing.Rectangle)">
            <summary>
            Draws an image to graphics context using the native methods.
            </summary>
            <param name="hdc">A handle to the device context.</param>
            <param name="image">A <see cref="T:System.Drawing.Image"/> value.</param>
            <param name="rect">A <see cref="T:System.Drawing.Rectangle"/> context.</param>
        </member>
        <member name="M:Syncfusion.WinForms.Core.ImagePainter.DrawImageFromImageList(System.IntPtr,System.Windows.Forms.ImageList,System.Int32,System.Drawing.Rectangle)">
            <summary>
            Draws an image from the <see cref="T:System.Windows.Forms.ImageList"/> based on the specified index.
            </summary>
            <param name="hdc">A handle to the device context.</param>
            <param name="imageList">The <see cref="T:System.Windows.Forms.ImageList"/> containing the images.</param>
            <param name="index">The index of the image.</param>
            <param name="rect">The rectangle into which to draw.</param>        
        </member>
        <member name="M:Syncfusion.WinForms.Core.ImagePainter.GetBitmap(System.String)">
            <summary>
            Gets a bitmap from cache or loads bitmap from manifest on first use.
            </summary>
            <param name="bitmapName">The bitmap name.</param>
            <returns>Reference to bitmap; NULL if bitmap failed to load.</returns>
        </member>
        <member name="M:Syncfusion.WinForms.Core.ImagePainter.DrawImage(System.Drawing.Graphics,System.Drawing.Rectangle,System.Drawing.Point,System.String,System.Drawing.Color)">
            <summary>
            Loads the bitmap from the manifest and paints it by substituting black pixels with a new color.
            </summary>
            <param name="graphics">A graphics object used to draw the bitmap.</param>
            <param name="bounds">A rectangle which contains the boundary data.</param>
            <param name="offset">A point that specifies pixel to offset the bitmap from its origin point.</param>
            <param name="bitmapName">The name of the bitmap.</param>
            <param name="newColor">The new color used to substitute black pixels.</param>     
        </member>
        <member name="M:Syncfusion.WinForms.Core.ImagePainter.DrawImage(System.Drawing.Graphics,System.Drawing.Rectangle,System.Drawing.Point,System.String,System.Drawing.Color,System.Drawing.Color)">
            <summary>
            Loads the bitmap from the manifest and paints it by substituting old color with a new color.
            </summary>
            <param name="graphics">A graphics object used to draw the bitmap.</param>
            <param name="bounds">A rectangle which contains the boundary data.</param>
            <param name="offset">A point that specifies pixel to offset the bitmap from its origin point.</param>
            <param name="bitmapName">The name of the bitmap.</param>
            <param name="newColor">The new color used to substitute black pixels.</param>
            <param name="oldColor">The old color value.</param>
        </member>
        <member name="M:Syncfusion.WinForms.Core.ImagePainter.CalculateImageBounds(System.Drawing.Rectangle,System.Drawing.Image,System.Windows.Forms.ImageLayout)">
            <summary>
            Calculates rectangle to draw on it image, depending on imageLayout.
            </summary>  
            <param name="bounds">A rectangle value used to calculate the image bounds.</param>
            <param name="image">A image used to calculate the bounds.</param>
            <param name="imageLayout">Image layout of the image.</param>
            <returns>Returns a rectangle value.</returns>
        </member>
        <member name="M:Syncfusion.WinForms.Core.ImagePainter.GetRotatedImage(System.Drawing.Bitmap,System.Single)">
            <summary>
            Returns the rotated image based on the angle information.
            </summary>
            <param name="bitmap">The bitmap image which need to rotate.</param>
            <param name="angle">The rotation angle.</param>
            <returns>Returns the rotated image</returns>
        </member>
        <member name="M:Syncfusion.WinForms.Core.ImagePainter.GetShadowLocation(System.Drawing.Rectangle,Syncfusion.WinForms.Core.Enums.ShadowOption,System.Int32)">
            <summary>
            Calculates the shadow location based on the rectangle, shadow offset and shadow option values.
            </summary>
            <param name="location">The rectangle value used to calculate the shadow rectangle.</param>
            <param name="options">The ShadowOption used to calculate the shadow rectangle.</param>
            <param name="shadowOffset">The integer value used to initialize the shadow width.</param>
            <returns>Returns the calculated shadow location.</returns>
        </member>
        <member name="M:Syncfusion.WinForms.Core.ImagePainter.GetShadowMatrix(System.Single)">
            <summary>
            Calculates the color matrix value based on the shadow scale value.
            </summary>
            <param name="shadowScale">The value indicates the shadow scale.</param>
            <returns>Returns the color matrix value based on the shadow scale value.</returns>
        </member>
        <member name="M:Syncfusion.WinForms.Core.ImagePainter.GetTransparentMatrix(System.Single)">
            <summary>
            Calculates the transparent color matrix value based on the shadow scale.
            </summary>
            <param name="transparency">The value used to calculate the transparent matrix.</param>
            <returns>Returns the transparent color matrix value.</returns>
        </member>
        <member name="M:Syncfusion.WinForms.Core.ImagePainter.GetGrayScaleMatrix(System.Single)">
            <summary>
            Calculates the color matrix value based on the gray scale value.
            </summary>
            <param name="grayScale">The value is used to calculates the color matrix.</param>
            <returns>Returns the calculated color matrix value based on the gray scale value.</returns>
        </member>
        <member name="M:Syncfusion.WinForms.Core.ImagePainter.GetTextureBrush(System.Drawing.Image,System.Drawing.Point)">
            <summary>
            Creates a TextureBrush value for the image based on the offset value.
            </summary>
            <param name="image">The image used to create a texture brush.</param>
            <param name="offset">The offset value used to calculate </param>
            <returns>Returns the TextBrush value based on the image and offset value.</returns>
        </member>
        <member name="M:Syncfusion.WinForms.Core.ImagePainter.GetCenterImageLayout(System.Drawing.Rectangle,System.Drawing.Rectangle)">
            <summary>
            Calculate the image rectangle value based on the ImageLayout.Center position.
            </summary>
            <param name="intersectRect">The intersect rectangle contains the original rectangle and client rectangle.</param>
            /// <param name="rectangle">The rectangle contains the original rectangle and client rectangle.</param>
            <returns>Returns the image rectangle value.</returns>
        </member>
        <member name="T:Syncfusion.WinForms.Core.Utils.RtlHelper">
            <summary>
            A helper class that provides the options for converting the actual rectangle to right to left mode rectangle.
            </summary>
        </member>
        <member name="M:Syncfusion.WinForms.Core.Utils.RtlHelper.GetRectangle(System.Drawing.Rectangle,System.Drawing.Size)">
            <summary>
            Gets an equivalent rectangle value for the right to left mode.
            </summary>
            <param name="bounds">The <see cref="T:System.Drawing.Rectangle"/> context.</param>
            <param name="size">The size value.</param>
            <returns>Returns the rectangle value for the RightToLeft mode.</returns>
        </member>
        <member name="M:Syncfusion.WinForms.Core.Utils.RtlHelper.GetRectangle(System.Drawing.Rectangle,System.Drawing.Size,System.Int32)">
            <summary>
            Gets an equivalent rectangle value for the right to left mode. Based on the offset value the right to left mode rectangle has calculated.
            </summary>
            <param name="bounds">The <see cref="T:System.Drawing.Rectangle"/> context.</param>
            <param name="size">The size value.</param>
            <param name="offset">The offset value used to calculate the rectangle value for right to left mode.</param>
            <returns>Returns the rectangle value for right to left mode.</returns>
        </member>
        <member name="T:Syncfusion.WinForms.Core.ShapesPainter">
            <summary>
                Represents the functionalities that encapsulates the painting logic for a triangle.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Core.ShapesPainter.TRI_HEIGHT_RATIO">
            <summary>
                Maintains the triangle's height ratio.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Core.ShapesPainter.TRI_WIDTH_RATIO">
            <summary>
                Maintains the triangle's width ratio.
            </summary>
        </member>
        <member name="M:Syncfusion.WinForms.Core.ShapesPainter.DrawTriangle(System.Drawing.Graphics,System.Drawing.Rectangle,Syncfusion.WinForms.Core.Enums.TriangleDirection,System.Drawing.Brush,System.Drawing.Pen,System.Boolean)">
            <summary>
            Paints a triangle to a given graphics canvas.
            </summary>
            <param name="g">
            The <see cref="T:System.Drawing.Graphics"/> context of the canvas.
            </param>
            <param name="bounds">
            The <see cref="T:System.Drawing.Rectangle"/> with the bounds.
            </param>
            <param name="direction">
            The <see cref="T:Syncfusion.WinForms.Core.Enums.TriangleDirection"/> which indicates the sort order.
            </param>
            <param name="backBrush">
            Brush to paint the inner region of the triangle.
            </param>
            <param name="backPen">
            Pen to draw a triangle boundary.
            </param>
            <param name="opaque">
            Specifies if the triangle should be drawn transparent.
            </param>
        </member>
        <member name="M:Syncfusion.WinForms.Core.ShapesPainter.BuildTrianglePoints(Syncfusion.WinForms.Core.Enums.TriangleDirection,System.Drawing.Rectangle)">
            <summary>
            Creates the Triangle points.
            </summary>
            <param name="direction">
            Specifies the direction of Triangle.
            </param>
            <param name="bounds">
            The <see cref="T:System.Drawing.Rectangle"/> with the bounds.
            </param>
            <returns>
            Triangle points.
            </returns>
        </member>
        <member name="M:Syncfusion.WinForms.Core.ShapesPainter.OffsetPoints(System.Drawing.Point[],System.Int32,System.Int32)">
            <summary>
            Creates the Offset points.
            </summary>
            <param name="points">
            Array of triangle points.
            </param>
            <param name="xOffset">
            X-Co ordinate.
            </param>
            <param name="yOffset">
            Y-Co ordinate.
            </param>
        </member>
        <member name="T:Syncfusion.WinForms.Core.TextPainter">
            <summary>
            Represents a class that provides the options to paint the text and rotated text.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Core.TextPainter.DrawTextFlags">
            <summary>
            The flag which is used for drawing the text using the native methods.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Core.TextPainter.richTextBox">
            <summary>
            The instance of <see cref="T:Syncfusion.WinForms.Core.RichTextBoxExt"/> used to draw the rich text content.
            </summary>
        </member>
        <member name="M:Syncfusion.WinForms.Core.TextPainter.DrawString(System.IntPtr,System.String,System.Drawing.Font,System.Drawing.Rectangle,System.Boolean)">
            <summary>
            Draws the text in the specified rectangle based on the <see cref="T:System.Drawing.Font"/> value.
            </summary>
            <param name="hdc">A handle to the device context.</param>
            <param name="text">String to measure.</param>
            <param name="font"><see cref="T:System.Drawing.Font"/>that defines the text format of the string.</param>
            <param name="rectangle"><see cref="T:System.Drawing.Rectangle"/>that specifies the maximum layout area for the text. </param>
            <param name="isRightToLeft">True - we use RTL, otherwise normal drawing.</param>
        </member>
        <member name="M:Syncfusion.WinForms.Core.TextPainter.DrawString(System.IntPtr,System.String,System.Drawing.Font,System.Drawing.Rectangle,System.Drawing.Color,System.Boolean)">
            <summary>
            Draws the text in the specified rectangle based on the <see cref="T:System.Drawing.Color"/> and
            <see cref="T:System.Drawing.Font"/> values.
            </summary>
            <param name="hdc">A handle to the device context.</param>
            <param name="text">String to measure.</param>
            <param name="font"><see cref="T:System.Drawing.Font"/>that defines the text format of the string.</param>
            <param name="rectangle"><see cref="T:System.Drawing.Rectangle"/>that specifies the maximum layout area for the text. </param>
            <param name="textColor">The text color.</param>
            <param name="isRightToLeft">True - we use RTL, otherwise normal drawing.</param>        
        </member>
        <member name="M:Syncfusion.WinForms.Core.TextPainter.MeasureRotatedString(System.Drawing.SizeF,System.Single)">
            <summary>
            Measures the string bounds based on the angle information.
            </summary>
            <param name="stringSize">The actual string size value.</param>
            <param name="angle">The angle value.</param>
            <returns>Returns the measured rotated string size value.</returns>
        </member>
        <member name="M:Syncfusion.WinForms.Core.TextPainter.MeasureRotatedString(System.Drawing.Graphics,System.String,System.Drawing.Font,System.Int32,System.Drawing.StringFormat,System.Single)">
            <summary>
            Measures the string bounds based on the angle information.
            </summary>
            <param name="g">The graphics.</param>
            <param name="text">The string value used to measure the size.</param>
            <param name="font">The font value used to calculate the string bounds.</param>
            <param name="width">The width value.</param>
            <param name="format">A <see cref="T:System.Drawing.StringFormat"/> context.</param>
            <param name="angle">The rotation angle.</param>
            <returns>Returns the measured string size based on the angle.</returns>
        </member>
        <member name="M:Syncfusion.WinForms.Core.TextPainter.DrawRotatedString(System.Drawing.Graphics,System.String,System.Drawing.Font,System.Drawing.Brush,System.Drawing.Rectangle,System.Drawing.StringFormat,System.Single)">
            <summary>
            Draws the text based on the rotation angle information.
            </summary>
            <param name="g">The graphics.</param>
            <param name="text">The String value used to measure the size.</param>
            <param name="font">The Font value used to calculate the string bounds.</param>
            <param name="br">The Brush information used to draw the string.</param>
            <param name="rect">The Rectangle value used to draw the rotated string.</param>
            <param name="format">A <see cref="T:System.Drawing.StringFormat"/> context.</param>
            <param name="angle">The rotation angle.</param>
        </member>
        <member name="M:Syncfusion.WinForms.Core.TextPainter.DrawRotatedString(System.Drawing.Graphics,System.String,System.Drawing.Font,System.Drawing.Brush,System.Drawing.RectangleF,System.Drawing.StringFormat,System.Single)">
            <summary>
            Draws the text based on the rotation angle information.
            </summary>
            <param name="g">The graphics.</param>
            <param name="text">The string value used to measure the size.</param>
            <param name="font">The font value used to calculate the string bounds.</param>
            <param name="br">The brush information used to draw the string.</param>
            <param name="rect">The rectangle value used to draw the rotated string.</param>
            <param name="format">A <see cref="T:System.Drawing.StringFormat"/> context.</param>
            <param name="angle">The rotation angle.</param>
        </member>
        <member name="M:Syncfusion.WinForms.Core.TextPainter.GetRichTextSize(System.String,System.Drawing.Size,System.Drawing.Font,System.Boolean,System.Windows.Forms.RightToLeft)">
            <summary>
            Calculates the size of the rich text box based on the font and text values.
            </summary>
            <param name="rtfText">The string value contains rich text.</param>
            <param name="preferredSize">The preferred size used to draw the rich text.</param>
            <param name="font">The <see cref="T:System.Drawing.Font"/> value.</param>
            <param name="wrapText">A boolean value indicates rich text allows wrap text or not.</param>
            <param name="rightToLeft">A value indicates the right to left mode.</param>
            <returns>Returns the size of the rich text box.</returns>
        </member>
        <member name="M:Syncfusion.WinForms.Core.TextPainter.DrawRichText(System.Drawing.Graphics,System.String,System.Drawing.RectangleF)">
            <summary>
            Draws the rich text on the given graphics based on the text, font, fore color and wrap text mode.
            </summary>
            <param name="graphics">The graphics context.</param>
            <param name="rtfText">The string value contains the rich text content.</param>
            <param name="rectangle">The rectangle value used to draw the rich text.</param>   
        </member>
        <member name="M:Syncfusion.WinForms.Core.TextPainter.DrawRichText(System.Drawing.Graphics,System.String,System.Drawing.RectangleF,System.Drawing.Font,System.Drawing.Color,System.Boolean,System.Windows.Forms.RightToLeft)">
            <summary>
            Draws the rich text on the given graphics based on the text, font, fore color and wrap text mode.
            </summary>
            <param name="graphics">The graphics context.</param>
            <param name="rtfText">The string value contains the rich text content.</param>
            <param name="rectangle">The rectangle value used to draw the rich text.</param>
            <param name="font">The font value used to draw the rich text.</param>
            <param name="foreColor">The fore color value used to draw the rich text.</param>
            <param name="wrapText">A boolean value indicates rich text allows wrap text or not.</param>
            <param name="rightToLeft">A value indicates the right to left mode.</param>
        </member>
        <member name="M:Syncfusion.WinForms.Core.TextPainter.CalculateOutsideRect(System.Drawing.Rectangle,System.Single)">
            <summary>
            Calculates the outside rectangle value based on the angle information.
            </summary>
            <param name="rect">The actual rectangle value.</param>
            <param name="angle">The angle value.</param>
            <returns>Returns the calculated outside rectangle value.</returns>
        </member>
        <member name="M:Syncfusion.WinForms.Core.TextPainter.CenterInRect(System.Drawing.Rectangle,System.Drawing.Size)">
            <summary>
            Calculates the center of the rectangle value based on the size information.
            </summary>
            <param name="rect">The actual rectangle value.</param>
            <param name="size">The size value.</param>
            <returns>Returns the rectangle value.</returns>
        </member>
        <member name="M:Syncfusion.WinForms.Core.TextPainter.CalculateOutsideRect(System.Drawing.RectangleF,System.Single)">
            <summary>
            Calculates the outside rectangle based on angle value.
            </summary>
            <param name="rect">The actual rectangle value.</param>
            <param name="angle">The angle value.</param>
            <returns>Returns the calculated outside rectangle value.</returns>
        </member>
        <member name="M:Syncfusion.WinForms.Core.TextPainter.RichTextBoxContentsResized(System.Object,System.Windows.Forms.ContentsResizedEventArgs)">
            <summary>
            Occurs content within the RichTextBox are resized.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">A <see cref="T:System.Windows.Forms.ContentsResizedEventArgs"/> that contains the event data.</param>
        </member>
        <member name="M:Syncfusion.WinForms.Core.TextPainter.GetRotatePoint(System.Drawing.PointF,System.Double)">
            <summary>
            Returns the rotated point value based on the angle information.
            </summary>
            <param name="p">The Point value.</param>
            <param name="angle">The angle value.</param>
            <returns>Returns the calculated point value.</returns>
        </member>
        <member name="M:Syncfusion.WinForms.Core.TextPainter.GetRotatePoint(System.Drawing.PointF,System.Double,System.Drawing.PointF)">
            <summary>
            Returns the rotated point value based on the angle and origin point values.
            </summary>
            <param name="p">The point which used to calculate.</param>
            <param name="angle">The angle.</param>
            <param name="origin">The origin point.</param>
            <returns>Returns the calculated point value.</returns>
        </member>
        <member name="M:Syncfusion.WinForms.Core.TextPainter.GetRotatePoints(System.Drawing.RectangleF,System.Double)">
            <summary>
            Returns the rotated points for creating the rectangle based on the angle information.
            </summary>
            <param name="r">The actual rectangle value.</param>
            <param name="angle">The angle which used for calculate.</param>
            <returns>Returns the array of points.</returns>
        </member>
        <member name="M:Syncfusion.WinForms.Core.TextPainter.GetRotatePoints(System.Drawing.RectangleF,System.Double,System.Drawing.PointF)">
            <summary>
            Returns the rotated points for creating the rectangle based on the angle and origin point values.
            </summary>
            <param name="r">The actual rectangle value.</param>
            <param name="angle">The angle.</param>
            <param name="origin">The origin point.</param>
            <returns>Returns the array point values.</returns>
        </member>
        <member name="T:Syncfusion.WinForms.Core.RichTextBoxExt">
            <summary>
            Represents a class that provide options to draw the rich text on the <see cref="T:Syncfusion.WinForms.Controls.SfButton"/>.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Core.RichTextBoxExt.WmUser">
            <summary>
            The constant value.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Core.RichTextBoxExt.EmFormatrange">
            <summary>
            The constant value for format range.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Core.RichTextBoxExt.WsExTransparent">
            <summary>
            The constant value for the transparent range.
            </summary>
        </member>
        <member name="M:Syncfusion.WinForms.Core.RichTextBoxExt.DrawRichText(System.IntPtr,System.Drawing.Rectangle)">
            <summary>
            Draws the rich text box to the given device context.
            </summary>
            <param name="hdc">The device context.</param>
            <param name="rect">The rectangle area to draw the rich text box.</param>
        </member>
        <member name="P:Syncfusion.WinForms.Core.RichTextBoxExt.CreateParams">
            <summary>
            Gets the required creation parameters when the control handle is created.
            </summary>
        </member>
        <member name="T:Syncfusion.WinForms.Core.Utils.BusyIndicator">
            <summary>
            Represents a class that provides the animation for an image based on the time-based frames.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Core.Utils.BusyIndicator.control">
            <summary>
            Specifies the control that needs to show the busy indicator. 
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Core.Utils.BusyIndicator.canCalculateLocation">
            <summary>
            Specifies whether to calculate the location for the busy indicator or not.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Core.Utils.BusyIndicator.canAnimate">
            <summary>
            Specifies whether the busy indicator needs to be shown or not.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Core.Utils.BusyIndicator.displayLocation">
            <summary>
            Specifies the indicator display location at the attached control.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Core.Utils.BusyIndicator.displayImage">
            <summary>
            Specifies the image that needs to be displayed as the busy indicator.
            </summary>
        </member>
        <member name="M:Syncfusion.WinForms.Core.Utils.BusyIndicator.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.WinForms.Core.Utils.BusyIndicator"/> class.
            </summary>
        </member>
        <member name="M:Syncfusion.WinForms.Core.Utils.BusyIndicator.Show(System.Windows.Forms.Control)">
            <summary>
            Shows the busy indicator for the given control.
            </summary>
            <param name="control">The control which needs to be display the busy indicator.</param>
            <remarks>By default, busy Indicator will be displayed at the center of the control until set the <see cref="P:Syncfusion.WinForms.Core.Utils.BusyIndicator.Location"/> property.</remarks>
        </member>
        <member name="M:Syncfusion.WinForms.Core.Utils.BusyIndicator.Show(System.Windows.Forms.Control,System.Drawing.Image)">
            <summary>
            Displays the busy indicator for the given control with the given image.
            </summary>
            <param name="control">The control which needs to be display the busy indicator.</param>
            <param name="image">The image which needs to be shown as the busy indicator.</param>
            <remarks>By default, busy Indicator will be displayed at the center of the control until set the <see cref="P:Syncfusion.WinForms.Core.Utils.BusyIndicator.Location"/> property.</remarks>
        </member>
        <member name="M:Syncfusion.WinForms.Core.Utils.BusyIndicator.Show(System.Windows.Forms.Control,System.Drawing.Point)">
            <summary>
            Displays the busy indicator for the given control at the given location.
            </summary>
            <param name="control">The control which needs to be display the busy indicator.</param>
            <param name="location">The location of the busy Indicator.</param>
        </member>
        <member name="M:Syncfusion.WinForms.Core.Utils.BusyIndicator.Show(System.Windows.Forms.Control,System.Drawing.Image,System.Drawing.Point)">
            <summary>
            Displays the busy indicator for the given control based on the given image and location
            </summary>
            <param name="control">The control which needs to be display the busy indicator.</param>
            <param name="image">The image which needs to be shown as the busy indicator.</param>
            <param name="location">The location of the busy Indicator.</param>
        </member>
        <member name="M:Syncfusion.WinForms.Core.Utils.BusyIndicator.Hide">
            <summary>
            Hides the busy indicator for the control.
            </summary>
        </member>
        <member name="M:Syncfusion.WinForms.Core.Utils.BusyIndicator.Dispose">
            <summary>
            Releases all resources used by the BusyIndicator.
            </summary>
        </member>
        <member name="M:Syncfusion.WinForms.Core.Utils.BusyIndicator.Dispose(System.Boolean)">
            <summary>
            Cleans up any resources being used by the <see cref="T:Syncfusion.WinForms.Core.Utils.BusyIndicator"/> class.
            </summary>
            <param name="disposing">True to release both managed and unmanaged resources; false to release only unmanaged resources.</param>
        </member>
        <member name="M:Syncfusion.WinForms.Core.Utils.BusyIndicator.Animate">
            <summary>
            Animates the image on the attached control.
            </summary>
        </member>
        <member name="M:Syncfusion.WinForms.Core.Utils.BusyIndicator.OnAnimate(System.Object,System.EventArgs)">
            <summary>
            Occurs on the frequency of the updated frames.
            </summary>
            <param name="sender">The object of the sender.</param>
            <param name="e">An <see cref="T:System.EventArgs"/> that contains event data.</param>
        </member>
        <member name="M:Syncfusion.WinForms.Core.Utils.BusyIndicator.DrawImage(System.Object)">
            <summary>
            Draws the busy indicator for the attached control.
            </summary>
            <param name="sender">The object of the sender.</param>
        </member>
        <member name="M:Syncfusion.WinForms.Core.Utils.BusyIndicator.OnControlSizeChanged(System.Object,System.EventArgs)">
            <summary>
            Occurs when the attached controls size is change.
            </summary>
            <param name="sender">The object of the sender.</param>
            <param name="e">An <see cref="T:EventArgs"/> that contains event data.</param>
        </member>
        <member name="P:Syncfusion.WinForms.Core.Utils.BusyIndicator.Image">
            <summary>
            Gets or sets the image for the busy indicator.
            </summary>
        </member>
        <member name="P:Syncfusion.WinForms.Core.Utils.BusyIndicator.Location">
            <summary>
            Gets or sets the location of the busy indicator.
            </summary>
        </member>
        <member name="T:Syncfusion.WinForms.Core.Utils.BusyIndicator.DrawImageEventHandler">
            <summary>
            Specifies the delegate for drawing the busy indicator asynchronously.
            </summary>
            <param name="sender">The object of the sender.</param>
        </member>
        <member name="T:Syncfusion.WinForms.Core.Utils.DisposeHelper">
            <summary>
            A helper class that provides the functionalities to dispose the object.
            </summary>
        </member>
        <member name="M:Syncfusion.WinForms.Core.Utils.DisposeHelper.Dispose(System.Windows.Forms.ImageList@)">
            <summary>
            Releases the all resources that are used by the <see cref="T:System.Windows.Forms.ImageList"/> object.
            </summary>
            <param name="list">The <see cref="T:System.Windows.Forms.ImageList"/> that need to be disposed.</param>
        </member>
        <member name="M:Syncfusion.WinForms.Core.Utils.DisposeHelper.Dispose(System.Collections.IList@)">
            <summary>
            Releases the all resources that are used by the <see cref="T:System.Collections.IList"/> object.
            </summary>
            <param name="collection">The <see cref="T:System.Collections.IList"/> that need to be disposed.</param>
        </member>
        <member name="M:Syncfusion.WinForms.Core.Utils.DisposeHelper.Dispose(System.Collections.IDictionary@)">
            <summary>
            Releases the all resources used by the <see cref="T:System.Collections.IDictionary"/> object.
            </summary>
            <param name="dictionary">The <see cref="T:System.Collections.IDictionary"/> that need to be disposed.</param>
        </member>
        <member name="M:Syncfusion.WinForms.Core.Utils.DisposeHelper.Dispose(System.Windows.Forms.NativeWindow@)">
            <summary>
            Releases the all resources that are used by the <see cref="T:System.Windows.Forms.NativeWindow"/> object.
            </summary>
            <param name="window">The <see cref="T:System.Windows.Forms.NativeWindow"/> that need to be disposed.</param>
        </member>
        <member name="M:Syncfusion.WinForms.Core.Utils.DisposeHelper.Dispose(System.Collections.ArrayList@)">
            <summary>
            Releases the all resources that are used by the <see cref="T:System.Collections.ArrayList"/> object.
            </summary>
            <param name="collection">An <see cref="T:System.Collections.ArrayList"/> that need to be disposed.</param>
        </member>
        <member name="M:Syncfusion.WinForms.Core.Utils.DisposeHelper.Dispose(System.Collections.Hashtable@)">
            <summary>
            Releases the all resources that are used by the <see cref="T:System.Collections.Hashtable"/> object.
            </summary>
            <param name="hashTable">The <see cref="T:System.Collections.Hashtable"/> that need to be disposed.</param>
        </member>
        <member name="T:Syncfusion.WinForms.Core.Events.ThemeChangedEventHandler">
            <summary>
            Represents the method that will handle the <see cref="!:IThemeProvider.ThemeChanged"/> event.  
            </summary>
            <param name="sender">A sender contains the control.</param>
            <param name="e">A <see cref="T:Syncfusion.WinForms.Core.Events.ThemeChangedEventArgs"/> that contains the event data.</param>
        </member>
        <member name="T:Syncfusion.WinForms.Core.Events.ThemeChangedEventArgs">
            <summary>
            Provides data for the <see cref="!:IThemeProvider.ThemeChanged"/> event.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Core.Events.ThemeChangedEventArgs.themeName">
            <summary>
            The theme name.
            </summary>
        </member>
        <member name="M:Syncfusion.WinForms.Core.Events.ThemeChangedEventArgs.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.WinForms.Core.Events.ThemeChangedEventArgs"/> class.
            </summary>
            <param name="themeName">Name of the theme.</param>
        </member>
        <member name="P:Syncfusion.WinForms.Core.Events.ThemeChangedEventArgs.ThemeName">
            <summary>
            Gets the name of the theme.
            </summary>
        </member>
        <member name="T:Syncfusion.WinForms.Core.Utils.NullableHelper">
            <summary>
            A helper class that provides the functionalities for converting the object to the specified type. 
            This will return the null if the object cannot be converted to specified type.
            </summary>
        </member>
        <member name="M:Syncfusion.WinForms.Core.Utils.NullableHelper.ChangeType(System.Object,System.Type)">
            <summary>
            Returns an object of the specified type whose value is equivalent to the specified object.
            </summary>
            <param name="value">The object that need to be convert.</param>
            <param name="type">The target <see cref="T:System.Type"/>. It can also be a <see cref="T:System.Nullable"/> type.</param>
            <returns>Returns the converted value as object.</returns>
        </member>
        <member name="M:Syncfusion.WinForms.Core.Utils.NullableHelper.ChangeType(System.Object,System.Type,System.IFormatProvider)">
            <summary>
            Returns an object of the specified type whose value is equivalent to the specified object.
            </summary>
            <param name="value">The value that need to be converted to the target type.</param>
            <param name="type">The target <see cref="T:System.Type"/>.It can also be a <see cref="T:System.Nullable"/> type.</param>
            <param name="provider">The <see cref="T:System.IFormatProvider"/> object.</param>
            <returns>
            Returns null when the object is not converted to the target type otherwise return the converted value.
            </returns>
        </member>
        <member name="M:Syncfusion.WinForms.Core.Utils.NullableHelper.ChangeDbNullasNull(System.Object,System.Type)">
            <summary>
            Changes the DBNull object as null. 
            </summary>
            <param name="value">The object that need to be checked as the DBNull.</param>
            <param name="type">The target <see cref="T:System.Type"/> of the object.</param>
            <returns>
            Returns the DBNull object as null.
            </returns>
        </member>
        <member name="M:Syncfusion.WinForms.Core.Utils.NullableHelper.ChangeNonNullableType(System.Object,System.Type,System.IFormatProvider)">
            <summary>
            Returns an object of the specified type whose value is equivalent to the specified object.
            </summary>
            <param name="value">The value that need to be converted.</param>
            <param name="type">The target <see cref="T:System.Type"/>.</param>
            <param name="provider">The <see cref="T:System.IFormatProvider"/> object.</param>
            <returns>Returns the converted object.</returns>
        </member>
        <member name="T:Syncfusion.WinForms.Core.Utils.ReflectionHelper">
            <summary>
            A helper class that provides the functionalities to retrieve information about 
            assemblies, modules, members, parameters, and other entities in managed code.
            </summary>
        </member>
        <member name="M:Syncfusion.WinForms.Core.Utils.ReflectionHelper.GetMethod(System.Type,System.String,System.Int32)">
            <summary>
            Searches for the specified method, using the specified binding constraints.
            </summary>
            <param name="type">The type used to get the method.</param>
            <param name="name">The string containing the name of the method to get.</param>
            <param name="argumentsCount">The integer containing the arguments count of the method to get.</param>
            <returns>An object representing the method that matches the specified requirements, if found; otherwise, null.</returns>
        </member>
        <member name="M:Syncfusion.WinForms.Core.Utils.ReflectionHelper.GetMethod(System.Type,System.String)">
            <summary>
            Searches for the specified method, using the specified binding constraints.
            </summary>
            <param name="type">The type used to get the method.</param>
            <param name="name">The string containing the name of the method to get.</param>
            <returns>An object representing the method that matches the specified requirements, if found; otherwise, null.</returns>
            <exception cref="T:System.ArgumentNullException">name is null.</exception>
        </member>
        <member name="M:Syncfusion.WinForms.Core.Utils.ReflectionHelper.GetProperty(System.Type,System.String)">
            <summary>
            Searches for the specified property, using the specified binding constraints.
            </summary>
            <param name="type">The type used to get the property.</param>
            <param name="propertyName">The string containing the name of the property to get.</param>
            <returns>An object representing the property that matches the specified requirements, if found; otherwise, null.</returns>
            <exception cref="T:System.ArgumentNullException">name is null.</exception>
        </member>
        <member name="M:Syncfusion.WinForms.Core.Utils.ReflectionHelper.GetField(System.Type,System.String)">
            <summary>
            Searches for the specified field, using the specified binding constraints.
            </summary>
            <param name="type">The type used to get the field.</param>
            <param name="fieldName">The string containing the name of the field to get.</param>
            <returns>An object representing the field that matches the specified requirements, if found; otherwise, null.</returns>
            <exception cref="T:System.ArgumentNullException">name is null.</exception>
        </member>
        <member name="M:Syncfusion.WinForms.Core.Utils.ReflectionHelper.GetValue(System.Object,System.String)">
            <summary>
            Returns the property value of a specified object.
            </summary>
            <param name="obj">The object whose field value will be returned.</param>
            <param name="propertyName">The string containing the name of the property or field to get value.</param>
            <returns>The property value of the specified object.</returns>
        </member>
        <member name="M:Syncfusion.WinForms.Core.Utils.ReflectionHelper.SetValue(System.Object,System.String,System.Object)">
            <summary>
            Sets the property value of a specified object.
            </summary>
            <param name="obj">The object whose property value will be set.</param>
            <param name="propertyName">The name of the property.</param>
            <param name="value">The new property value.</param>
            <returns>Returns true if value set properly, otherwise false.</returns>
        </member>
        <member name="M:Syncfusion.WinForms.Core.Utils.ReflectionHelper.Invoke(System.Reflection.MethodInfo,System.Object,System.Object[])">
            <summary>
            Invokes the method or constructor represented by the current instance, using the specified parameters.
            </summary>
            <param name="method">The method information.</param>
            <param name="obj">
            The object on which to invoke the method or constructor. If a method is static,
            this argument is ignored. If a constructor is static, this argument must be null or an instance of the class
            that defines the constructor.
            </param>
            <param name="parameters">An argument list for the invoked method or constructor. This is an array
            of objects with the same number, order, and type as the parameters of the method or constructor to be invoked.</param>
            <returns>
            An object containing the return value of the invoked method, or null in the 
            case of a constructor.CautionElements of the parameters array that represent
            parameters declared with the ref or out keyword may also be modified.
            </returns>
        </member>
        <member name="T:Syncfusion.WinForms.Core.Enums.BrushStyle">
            <summary>
            Defines the constants that specify the various brush styles.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Core.Enums.BrushStyle.None">
            <summary>
            The <see cref="T:Syncfusion.WinForms.Core.BrushInfo"/> is an empty object.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Core.Enums.BrushStyle.Solid">
            <summary>
            The <see cref="T:Syncfusion.WinForms.Core.BrushInfo"/> represents a solid fill.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Core.Enums.BrushStyle.Pattern">
            <summary>
            The <see cref="T:Syncfusion.WinForms.Core.BrushInfo"/> represents a pattern fill.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Core.Enums.BrushStyle.Gradient">
            <summary>
            The <see cref="T:Syncfusion.WinForms.Core.BrushInfo"/> represents a gradient fill.
            </summary>
        </member>
        <member name="T:Syncfusion.WinForms.Core.Enums.PatternStyle">
            <summary>
            Defines the constants that specify various pattern styles.
            </summary>	
        </member>
        <member name="F:Syncfusion.WinForms.Core.Enums.PatternStyle.None">
            <summary>
            A none value.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Core.Enums.PatternStyle.Horizontal">
            <summary>
            A pattern of horizontal lines.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Core.Enums.PatternStyle.Vertical">
            <summary>
            A pattern of vertical lines.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Core.Enums.PatternStyle.ForwardDiagonal">
            <summary>
            A pattern of lines on a diagonal from top-left to bottom-right.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Core.Enums.PatternStyle.BackwardDiagonal">
            <summary>
            A pattern of lines on a diagonal from top-right to bottom-left.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Core.Enums.PatternStyle.Cross">
            <summary>
            A pattern of cross-cross horizontal and vertical lines.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Core.Enums.PatternStyle.DiagonalCross">
            <summary>
            A pattern of cross-cross diagonal lines.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Core.Enums.PatternStyle.Percent05">
            <summary>
            Specifies a 5-percent hatch. The ratio of foreground color to background color is 5:100.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Core.Enums.PatternStyle.Percent10">
            <summary>
            Specifies a 10-percent hatch. The ratio of foreground color to background color is 10:100.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Core.Enums.PatternStyle.Percent20">
            <summary>
            Specifies a 20-percent hatch. The ratio of foreground color to background color is 20:100.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Core.Enums.PatternStyle.Percent25">
            <summary>
            Specifies a 25-percent hatch. The ratio of foreground color to background color is 25:100.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Core.Enums.PatternStyle.Percent30">
            <summary>
            Specifies a 30-percent hatch. The ratio of foreground color to background color is 30:100.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Core.Enums.PatternStyle.Percent40">
            <summary>
            Specifies a 40-percent hatch. The ratio of foreground color to background color is 40:100.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Core.Enums.PatternStyle.Percent50">
            <summary>
            Specifies a 50-percent hatch. The ratio of foreground color to background color is 50:100.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Core.Enums.PatternStyle.Percent60">
            <summary>
            Specifies a 60-percent hatch. The ratio of foreground color to background color is 60:100.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Core.Enums.PatternStyle.Percent70">
            <summary>
            Specifies a 70-percent hatch. The ratio of foreground color to background color is 70:100.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Core.Enums.PatternStyle.Percent75">
            <summary>
            Specifies a 75-percent hatch. The ratio of foreground color to background color is 75:100.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Core.Enums.PatternStyle.Percent80">
            <summary>
            Specifies a 80-percent hatch. The ratio of foreground color to background color is 80:100.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Core.Enums.PatternStyle.Percent90">
            <summary>
            Specifies a 90-percent hatch. The ratio of foreground color to background color is 90:100.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Core.Enums.PatternStyle.LightDownwardDiagonal">
            <summary>
            Specifies diagonal lines that slant to the right from top points to bottom points and are spaced 50 percent closer together than BackwardDiagonal, but they are not anti-aliased.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Core.Enums.PatternStyle.LightUpwardDiagonal">
            <summary>
            Specifies diagonal lines that slant to the left from top points to bottom points and are spaced 50 percent closer together than BackwardDiagonal, but they are not anti-aliased.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Core.Enums.PatternStyle.DarkDownwardDiagonal">
            <summary>
            Specifies diagonal lines that slant to the right from top points to bottom points, are spaced 50 percent closer together than, and are twice the width of ForwardDiagonal. This hatch pattern is not anti-aliased.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Core.Enums.PatternStyle.DarkUpwardDiagonal">
            <summary>
            Specifies diagonal lines that slant to the left from top points to bottom points, are spaced 50 percent closer together than BackwardDiagonal and are twice its width, but the lines are not anti-aliased.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Core.Enums.PatternStyle.WideDownwardDiagonal">
            <summary>
            Specifies diagonal lines that slant to the right from top points to bottom points, have the same spacing as hatch style ForwardDiagonal and are triple its width, but are not anti-aliased.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Core.Enums.PatternStyle.WideUpwardDiagonal">
            <summary>
            Specifies diagonal lines that slant to the left from top points to bottom points, have the same spacing as hatch style BackwardDiagonal and are triple its width, but are not anti-aliased.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Core.Enums.PatternStyle.LightVertical">
            <summary>
            Specifies light vertical lines. 
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Core.Enums.PatternStyle.LightHorizontal">
            <summary>
            Specifies light horizontal lines. 
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Core.Enums.PatternStyle.NarrowVertical">
            <summary>
            Specifies narrow vertical lines .
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Core.Enums.PatternStyle.NarrowHorizontal">
            <summary>
            Specifies narrow horizontal lines 
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Core.Enums.PatternStyle.DarkVertical">
            <summary>
            Specifies vertical lines that are spaced 50 percent closer together than Vertical and are twice its width.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Core.Enums.PatternStyle.DarkHorizontal">
            <summary>
            Specifies horizontal lines that are spaced 50 percent closer together than Horizontal and are twice the width of HatchStyleHorizontal.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Core.Enums.PatternStyle.DashedDownwardDiagonal">
            <summary>
            Specifies dashed diagonal lines, that slant to the right from top points to bottom points.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Core.Enums.PatternStyle.DashedUpwardDiagonal">
            <summary>
            Specifies dashed diagonal lines, that slant to the left from top points to bottom points.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Core.Enums.PatternStyle.DashedHorizontal">
            <summary>
            Specifies dashed horizontal lines.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Core.Enums.PatternStyle.DashedVertical">
            <summary>
            Specifies dashed vertical lines.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Core.Enums.PatternStyle.SmallConfetti">
            <summary>
            Specifies a hatch that has the appearance of confetti.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Core.Enums.PatternStyle.LargeConfetti">
            <summary>
            Specifies a hatch that has the appearance of confetti and is composed of larger pieces than SmallConfetti.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Core.Enums.PatternStyle.ZigZag">
            <summary>
            Specifies horizontal lines that are composed of zigzags.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Core.Enums.PatternStyle.Wave">
            <summary>
            Specifies horizontal lines that are composed of tildes.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Core.Enums.PatternStyle.DiagonalBrick">
            <summary>
            Specifies a hatch that has the appearance of layered bricks that slant to the left from top points to bottom points.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Core.Enums.PatternStyle.HorizontalBrick">
            <summary>
            Specifies a hatch that has the appearance of horizontally layered bricks.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Core.Enums.PatternStyle.Weave">
            <summary>
            Specifies a hatch that has the appearance of a woven material.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Core.Enums.PatternStyle.Plaid">
            <summary>
            Specifies a hatch that has the appearance of a plaid material.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Core.Enums.PatternStyle.Divot">
            <summary>
            Specifies a hatch that has the appearance of divots.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Core.Enums.PatternStyle.DottedGrid">
            <summary>
            Specifies horizontal and vertical lines, each of which is composed of dots, that cross.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Core.Enums.PatternStyle.DottedDiamond">
            <summary>
            Specifies forward diagonal and backward diagonal lines, each of which is composed of dots, that cross.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Core.Enums.PatternStyle.Shingle">
            <summary>
            Specifies a hatch that has the appearance of diagonally-layered shingles that slant to the right from top points to bottom points.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Core.Enums.PatternStyle.Trellis">
            <summary>
            Specifies a hatch that has the appearance of a trellis.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Core.Enums.PatternStyle.Sphere">
            <summary>
            Specifies a hatch that has the appearance of spheres laid adjacent to one another.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Core.Enums.PatternStyle.SmallGrid">
            <summary>
            Specifies horizontal and vertical lines that cross and are spaced 50 percent closer together than hatch style Cross.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Core.Enums.PatternStyle.SmallCheckerBoard">
            <summary>
            Specifies a hatch that has the appearance of a checkerboard.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Core.Enums.PatternStyle.LargeCheckerBoard">
            <summary>
            Specifies a hatch that has the appearance of a checkerboard with squares that are twice the size of SmallCheckerBoard.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Core.Enums.PatternStyle.OutlinedDiamond">
            <summary>
            Specifies forward diagonal and backward diagonal lines that cross but are not anti aliased.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Core.Enums.PatternStyle.SolidDiamond">
            <summary>
            Specifies a hatch that has the appearance of a checkerboard placed diagonally.
            </summary>
        </member>
        <member name="T:Syncfusion.WinForms.Core.Enums.GradientStyle">
            <summary>
            Defines the constants that specify various gradient styles.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Core.Enums.GradientStyle.None">
            <summary>
            A none value.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Core.Enums.GradientStyle.ForwardDiagonal">
            <summary>
            ForwardDiagonal Gradient.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Core.Enums.GradientStyle.BackwardDiagonal">
            <summary>
            BackwardDiagonal Gradient.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Core.Enums.GradientStyle.Horizontal">
            <summary>
            Horizontal Gradient.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Core.Enums.GradientStyle.Vertical">
            <summary>
            Vertical Gradient.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Core.Enums.GradientStyle.PathRectangle">
            <summary>
            PathRectangle Gradient.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Core.Enums.GradientStyle.PathEllipse">
            <summary>
            PathEllipse Gradient.
            </summary>
        </member>
        <member name="T:Syncfusion.WinForms.Core.Enums.GestureOptions">
            <summary>
            Defines the constants that specify the gesture option for the control.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Core.Enums.GestureOptions.None">
            <summary>
            Does not allow to configure any touch gestures to control.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Core.Enums.GestureOptions.All">
            <summary>
            Allows the control to enable all gesture options.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Core.Enums.GestureOptions.Panning">
            <summary>
            Allows the control to enable the panning gesture.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Core.Enums.GestureOptions.Zooming">
            <summary>
            Allows the control to enable the zooming gesture.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Core.Enums.GestureOptions.Rotate">
            <summary>
            Allows the control to enable the rotate gesture.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Core.Enums.GestureOptions.TwoFingerTap">
            <summary>
            Allows the control to enable the two finger tap gesture.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Core.Enums.GestureOptions.PressAndTap">
            <summary>
            Allows the control to enable the press and tap gesture.
            </summary>
        </member>
        <member name="T:Syncfusion.WinForms.Core.Enums.PanningOptions">
            <summary>
            Defines the constants that specify touch panning option for control.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Core.Enums.PanningOptions.None">
            <summary>
            Does not allow the control to the perform any panning operations.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Core.Enums.PanningOptions.All">
            <summary>
            Allows the control to enable all panning options.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Core.Enums.PanningOptions.VerticalPanning">
            <summary>
            Allows the control to perform the panning operation in vertical direction.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Core.Enums.PanningOptions.HorizontalPanning">
            <summary>
            Allows the control to perform the panning operation in horizontal direction.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Core.Enums.PanningOptions.Gutter">
            <summary>
            Allows the control to perform the panning operation with gutter.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Core.Enums.PanningOptions.Inertia">
            <summary>
            Allows the control to perform the panning operation with inertia.
            </summary>
        </member>
        <member name="T:Syncfusion.WinForms.Core.Enums.ShadowOption">
            <summary>
            Defines the constants that specify the shadow option to draw the image with shadow.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Core.Enums.ShadowOption.None">
            <summary>
            Does not allow to draw shadow for the image.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Core.Enums.ShadowOption.All">
            <summary>
            Allows to draw the shadow in all sides of the image.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Core.Enums.ShadowOption.BottomLeft">
            <summary>
            Allows to draw the shadow at bottom and left sides of the image.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Core.Enums.ShadowOption.TopRight">
            <summary>
            Allows to draw the shadow at top and right sides of the image.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Core.Enums.ShadowOption.TopLeft">
            <summary>
            Allows to draw the shadow at top and left sides of the image.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Core.Enums.ShadowOption.BottomRight">
            <summary>
            Allows to draw the shadow at bottom and right sides of the image.
            </summary>
        </member>
        <member name="T:Syncfusion.WinForms.Core.Enums.TriangleDirection">
            <summary>
                Defines the constants that specifies the direction of the triangle.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Core.Enums.TriangleDirection.Up">
            <summary>
                A triangle pointing up.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Core.Enums.TriangleDirection.Down">
            <summary>
                A triangle pointing down.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Core.Enums.TriangleDirection.Left">
            <summary>
                A triangle pointing to the left.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Core.Enums.TriangleDirection.Right">
            <summary>
                A triangle pointing to the right.
            </summary>
        </member>
        <member name="T:Syncfusion.WinForms.Core.Enums.CheckBoxAlignment">
            <summary>
            Defines the constant that specify the alignment of the check box.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Core.Enums.CheckBoxAlignment.Left">
            <summary>
            Specifies that the check box will be left aligned.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Core.Enums.CheckBoxAlignment.Right">
            <summary>
            Specifies that the check box will be right aligned.
            </summary>
        </member>
        <member name="T:Syncfusion.WinForms.Core.LocalizationResourceBase">
            <summary>
            Represents a class which contains resource manager that provides convenient access to culture-specific resources at run time.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Core.LocalizationResourceBase.loader">
            <summary>
            The loader.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Core.LocalizationResourceBase.resources">
            <summary>
            The resource manager.
            </summary>
        </member>
        <member name="M:Syncfusion.WinForms.Core.LocalizationResourceBase.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.WinForms.Core.LocalizationResourceBase"/> class.
            </summary>
        </member>
        <member name="M:Syncfusion.WinForms.Core.LocalizationResourceBase.SetResources(System.Reflection.Assembly,System.String)">
            <summary>
            Sets the resource manager based on the assembly and namespace.
            It can be used to get the values from the application resource files 
            when the assembly name and the namespace of the control or application is different.
            </summary>
            <param name="controlAssembly">The control assembly.</param>
            <param name="nameSpace">The namespace of the control.</param>
        </member>
        <member name="M:Syncfusion.WinForms.Core.LocalizationResourceBase.GetString(System.String)">
            <summary>
            Gets the localized string for the current culture.
            </summary>
            <param name="name">The string that need to be localized.</param>
            <returns>Returns the localized string.</returns>
        </member>
        <member name="M:Syncfusion.WinForms.Core.LocalizationResourceBase.GetLoader">
            <summary>
            Gets the static <see cref="T:Syncfusion.WinForms.Core.LocalizationResourceBase"/> object.
            </summary>
            <returns>Returns the <see cref="T:Syncfusion.WinForms.Core.LocalizationResourceBase"/> value.</returns>
        </member>
        <member name="M:Syncfusion.WinForms.Core.LocalizationResourceBase.GetLocalizedResourceManager(System.Reflection.Assembly,System.String)">
            <summary>
            Gets the localized ResourceManager.
            </summary>
            <param name="controlAssembly">The assembly of the control.</param>
            <param name="nameSpace">The namespace of the control.</param>
            <returns>Returns the resource manager.</returns>
        </member>
        <member name="T:Syncfusion.WinForms.Core.NativeMethods">
            <summary>
            Represents a class that provides the native methods.
            </summary>
        </member>
        <member name="M:Syncfusion.WinForms.Core.NativeMethods.GetDC(System.IntPtr)">
            <summary>
            The GetDC function retrieves a handle to a device context (DC) for the client area of a specified window or for the entire screen.
            </summary>
            <param name="hWnd">A handle to the window whose DC is to be retrieved. If this value is NULL, GetDC retrieves the DC for the entire screen.</param>
            <returns>If the function succeeds, the return value is a handle to the DC for the specified window's client area.
            If the function fails, the return value is NULL.</returns>
        </member>
        <member name="M:Syncfusion.WinForms.Core.NativeMethods.UpdateLayeredWindow(System.IntPtr,System.IntPtr,System.Drawing.Point@,System.Drawing.Size@,System.IntPtr,System.Drawing.Point@,System.Int32,Syncfusion.WinForms.Core.NativeMethods.BLENDFUNCTION@,System.Int32)">
            <summary>
            Updates the position, size, shape, content, and translucency of a layered window.
            </summary>
            <param name="hwnd">A handle to a layered window. A layered window is created by specifying WS_EX_LAYERED when creating the window with the CreateWindowEx function.</param>
            <param name="hdcDst">A handle to a DC for the screen.</param>
            <param name="pptDst">A pointer to a structure that specifies the new screen position of the layered window. </param>
            <param name="psize">Specifies the new size of the layered window.</param>
            <param name="hdcSrc">A handle to a DC for the surface that defines the layered window.</param>
            <param name="pprSrc">A pointer to a structure that specifies the location of the layer in the device context. </param>
            <param name="crKey">A structure that specifies the color key to be used when composing the layered window.</param>
            <param name="pblend">A pointer to a structure that specifies the transparency value to be used when composing the layered window.</param>
            <param name="dwFlags">Use flag as the blend function</param>
            <returns>If the function succeeds, the return value is nonzero. Otherwise zero</returns>
        </member>
        <member name="M:Syncfusion.WinForms.Core.NativeMethods.CreateRoundRectRgn(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            This function creates a rectangular region with rounded corners.
            </summary>
            <param name="nLeftRect">Specifies the x-coordinate of the upper-left corner of the region in device units.</param>
            <param name="nTopRect">Specifies the y-coordinate of the upper-left corner of the region in device units.</param>
            <param name="nRightRect">Specifies the x-coordinate of the lower-right corner of the region in device units.</param>
            <param name="nBottomRect">Specifies the y-coordinate of the lower-right corner of the region in device units.</param>
            <param name="nWidthEllipse">Specifies the width of the ellipse used to create the rounded corners in device units.</param>
            <param name="nHeightEllipse">Specifies the height of the ellipse used to create the rounded corners in device units.</param>
            <returns>If the function succeeds, the return value is the handle to the region. Otherwise return NULL</returns>
        </member>
        <member name="M:Syncfusion.WinForms.Core.NativeMethods.CallNextHookEx(System.IntPtr,System.Int32,System.Int32,System.Int32)">
            <summary>
            Calls the next hook process.
            </summary>
            <param name="hhook">The hook.</param>
            <param name="code">The code.</param>
            <param name="wparam">The window handle parameter.</param>
            <param name="lparam">The handle parameter.</param>
            <returns>Returns the pointer.</returns>
        </member>
        <member name="M:Syncfusion.WinForms.Core.NativeMethods.SetWindowsHookEx(System.Int32,Syncfusion.WinForms.Core.NativeMethods.HookProc,System.IntPtr,System.Int32)">
            <summary>
            Sets the windows hook process.
            </summary>
            <param name="hookId">The hook id.</param>
            <param name="pfnHook">The process hook.</param>
            <param name="hInst">The pointer value.</param>
            <param name="threadId">The thread id</param>
            <returns>Returns the pointer value.</returns>
        </member>
        <member name="M:Syncfusion.WinForms.Core.NativeMethods.GetWindowThreadProcessId(System.IntPtr,System.Int32@)">
            <summary>
            The get window process id.
            </summary>
            <param name="hWnd">The handle.</param>
            <param name="lpdwProcessId">process id.</param>
            <returns>Returns the integer value.</returns>
        </member>
        <member name="M:Syncfusion.WinForms.Core.NativeMethods.UnhookWindowsHookEx(System.IntPtr)">
            <summary>
            Unhook the window handle.
            </summary>
            <param name="hhook">The hook.</param>
            <returns>Returns the boolean value.</returns>
        </member>
        <member name="M:Syncfusion.WinForms.Core.NativeMethods.TranslateMessage(Syncfusion.WinForms.Core.NativeMethods.MSG@)">
            <summary>
            Translate the message.
            </summary>
            <param name="msg">The message.</param>
            <returns>Returns true if translate success.</returns>
        </member>
        <member name="M:Syncfusion.WinForms.Core.NativeMethods.DispatchMessage(Syncfusion.WinForms.Core.NativeMethods.MSG@)">
            <summary>
            Dispatch message.
            </summary>
            <param name="msg">The message.</param>
            <returns>Returns integer value.</returns>
        </member>
        <member name="M:Syncfusion.WinForms.Core.NativeMethods.PeekMessage(Syncfusion.WinForms.Core.NativeMethods.MSG@,System.IntPtr,System.Int32,System.Int32,System.Int32)">
            <summary>
            Peek the message.
            </summary>
            <param name="msg">The message.</param>
            <param name="hwnd">The handle.</param>
            <param name="msgMin">The message minimum.</param>
            <param name="msgMax">The maximum message.</param>
            <param name="remove">The integer value.</param>
            <returns>Returns boolean value.</returns>
        </member>
        <member name="M:Syncfusion.WinForms.Core.NativeMethods.GetParent(System.IntPtr)">
            <summary>
            Gets the parent of the given handle.
            </summary>
            <param name="hwnd">The handle.</param>
            <returns>Returns the parent handle.</returns>
        </member>
        <member name="M:Syncfusion.WinForms.Core.NativeMethods.SystemParametersInfo(System.Int32,System.Int32,System.Boolean@,System.Int32)">
            <summary>
            The system parameter information.
            </summary>
            <param name="uAction">The action.</param>
            <param name="uParam">The parameter used to get the system information.</param>
            <param name="lpvParam">The current action parameter,</param>
            <param name="fuWinIni">Window handle.</param>
            <returns>returns the integer value.</returns>
        </member>
        <member name="M:Syncfusion.WinForms.Core.NativeMethods.GetFocus">
            <summary>
            Checks the focus.
            </summary>
            <returns>Returns the handle.</returns>
        </member>
        <member name="M:Syncfusion.WinForms.Core.NativeMethods.GetCurrentThreadId">
            <summary>
            Gets the current thread id.
            </summary>
            <returns>Returns the current thread id.</returns>
        </member>
        <member name="M:Syncfusion.WinForms.Core.NativeMethods.GetMessageExtraInfo">
            <summary>
            Gets the extra information for the mouse event.
            </summary>
            <returns>The extra information provided by Windows API.</returns>        
        </member>
        <member name="M:Syncfusion.WinForms.Core.NativeMethods.GetSystemMetrics(System.Int32)">
            <summary>
            Gets the system information.
            </summary>
            <param name="nIndex">The index</param>
            <returns>Returns the index.</returns>
        </member>
        <member name="M:Syncfusion.WinForms.Core.NativeMethods.SetGestureConfig(System.IntPtr,System.Int32,System.Int32,Syncfusion.WinForms.Core.NativeTouch.GESTURECONFIG@,System.Int32)">
            <summary>
            Configures the messages that are sent from a window for Windows Touch gestures.
            </summary>
            <param name="hWnd">A handle to the window to set the gesture configuration.</param>
            <param name="reserved">Its a reserved parameter, must be set to 0.</param>
            <param name="gestureId">A count of the gesture configuration structures that are being passed.</param>
            <param name="gestureConfig">An array of gesture configuration structures that specify the gesture configuration.</param>
            <param name="configSize">The size of the gesture configuration (GESTURECONFIG) structure.</param>
            <returns>Returns true if the configuration succeed, otherwise returns false.</returns>
        </member>
        <member name="M:Syncfusion.WinForms.Core.NativeMethods.SetGestureConfig(System.IntPtr,System.Int32,System.Int32,Syncfusion.WinForms.Core.NativeTouch.GESTURECONFIG[],System.Int32)">
            <summary>
            Configures the messages that are sent from a window for Windows Touch gestures.
            </summary>
            <param name="hWnd">A handle to the window to set the gesture configuration.</param>
            <param name="reserved">Its a reserved parameter, must be set to 0.</param>
            <param name="ids">A count of the gesture configuration structures that are being passed.</param>
            <param name="gestureconfigs">An array of gesture configuration structures that specify the gesture configuration.</param>
            <param name="size">The size of the gesture configuration (GESTURECONFIG) structure.</param>
            <returns>Returns true if the configuration succeed, otherwise returns false.</returns>
        </member>
        <member name="M:Syncfusion.WinForms.Core.NativeMethods.GetGestureInfo(System.IntPtr,Syncfusion.WinForms.Core.NativeTouch.GESTUREINFO@)">
            <summary>
            Retrieves a GESTUREINFO structure given a handle to the gesture information.
            </summary>
            <param name="hGestureInfo">The Gesture information handle.</param>
            <param name="gestureInfo">A pointer to the Gesture information structure.</param>
            <returns>If the function succeeds, the return value is nonzero.</returns>
        </member>
        <member name="M:Syncfusion.WinForms.Core.NativeMethods.SetCursorPos(System.Int32,System.Int32)">
            <summary>
            Moves the cursor to the specified screen coordinates. 
            If the new coordinates are not within the screen rectangle set by the most recent ClipCursor function call, the system automatically adjusts the coordinates so that the cursor stays within the rectangle.
            </summary>
            <param name="x">The new x-coordinate of the cursor, in screen coordinates.</param>
            <param name="y">The new y-coordinate of the cursor, in screen coordinates.</param>
            <returns>Returns nonzero if successful or zero otherwise.</returns>
        </member>
        <member name="M:Syncfusion.WinForms.Core.NativeMethods.SetWindowPos(System.IntPtr,System.IntPtr,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Changes the size, position, and Z order of a child, pop-up, or top-level window. These windows are ordered according to their appearance on the screen. The topmost window receives the highest rank and is the first window in the Z order.
            </summary>
            <param name="hWnd">A Handle to the window.</param>
            <param name="hWndInsertAfter">A handle to the window to precede the positioned window in the Z order.</param>
            <param name="x">The new position of the left side of the window, in client coordinates.</param>
            <param name="y">The new position of the top of the window, in client coordinates.</param>
            <param name="cx">The new width of the window, in pixels.</param>
            <param name="cy">The new height of the window, in pixels.</param>
            <param name="flags">The window sizing and positioning flags.</param>
            <returns>Returns the boolean value when position has set.</returns>
        </member>
        <member name="M:Syncfusion.WinForms.Core.NativeMethods.ScrollWindowEx(System.IntPtr,System.Int32,System.Int32,Syncfusion.WinForms.Core.NativePaint.RECT@,Syncfusion.WinForms.Core.NativePaint.RECT@,System.IntPtr,Syncfusion.WinForms.Core.NativePaint.RECT@,System.Int32)">
            <summary>
            The ScrollWindowEx function scrolls the contents of the specified window's client area.
            </summary>
            <param name="hWnd">Handle to the window where the client area is to be scrolled.</param>
            <param name="xAmount">Specifies the amount, in device units, of horizontal scrolling. This parameter must be a negative value to scroll to the left.</param>
            <param name="yAmount">Specifies the amount, in device units, of vertical scrolling. This parameter must be a negative value to scroll up.</param>
            <param name="rectScrollRegion">The portion of the client area to be scrolled. If this parameter is NULL, the entire client area is scrolled.</param>
            <param name="rectClip">Contains the coordinates of the clipping rectangle. Only device bits within the clipping rectangle are affected. Bits scrolled from the outside of the rectangle to the inside are painted; bits scrolled from the inside of the rectangle to the outside are not painted. This parameter may be NULL.</param>
            <param name="hrgnUpdate">Handle to the region that is modified to hold the region invalidated by scrolling. This parameter may be NULL.</param>
            <param name="prcUpdate">Pointer to a RECT structure that receives the boundaries of the rectangle invalidated by scrolling. This parameter may be NULL.</param>
            <param name="flags">Specifies flags that control scrolling.</param>
            <returns>Returns the boolean value.</returns>
        </member>
        <member name="M:Syncfusion.WinForms.Core.NativeMethods.SetScrollInfo(System.IntPtr,System.Int32,Syncfusion.WinForms.Core.NativeScroll.SCROLLINFO@,System.Boolean)">
            <summary>
            The SetScrollInfo function sets the parameters of a scroll bar, including the minimum and maximum scrolling positions, the page size, and the position of the scroll box (thumb). The function also redraws the scroll bar, if requested.
            </summary>
            <param name="hWnd">Handle to a scroll bar control or a window with a standard scroll bar, depending on the value of the functionBar parameter.</param>
            <param name="functionBar">Specifies the type of scroll bar for which to set parameters. This parameter can be one of the following values.</param>
            <param name="si">Pointer to a SCROLLINFO structure. Before calling SetScrollInfo, set the size member of the structure to sizeof(SCROLLINFO), set the fMask member to indicate the parameters to set, and specify the new parameter values in the appropriate members.</param>
            <param name="redraw">Specifies whether the scroll bar is redrawn to reflect the changes to the scroll bar. If this parameter is TRUE, the scroll bar is redrawn, otherwise, it is not redrawn.</param>
            <returns>The return value is the current position of the scroll box.</returns>
        </member>
        <member name="M:Syncfusion.WinForms.Core.NativeMethods.GetScrollInfo(System.IntPtr,System.Int32,Syncfusion.WinForms.Core.NativeScroll.SCROLLINFO@)">
            <summary>
            The GetScrollInfo function retrieves the parameters of a scroll bar, including the minimum and maximum scrolling positions, the page size, and the position of the scroll box (thumb).
            </summary>
            <param name="hWnd">Handle to a scroll bar control or a window with a standard scroll bar, depending on the value of the functionBar parameter.</param>
            <param name="functionBar">Specifies the type of scroll bar for which to retrieve parameters.</param>
            <param name="si">Pointer to a SCROLLINFO structure. Before calling GetScrollInfo, set the size member to sizeof(SCROLLINFO), and set the fMask member to specify the scroll bar parameters to retrieve. Before returning, the function copies the specified parameters to the appropriate members of the structure.</param>
            <returns>If the function retrieved any values, the return value is nonzero otherwise the return zero.</returns>
        </member>
        <member name="M:Syncfusion.WinForms.Core.NativeMethods.GetScrollBarInfo(System.IntPtr,System.UInt32,Syncfusion.WinForms.Core.NativeScroll.SCROLLBARINFO@)">
            <summary>
            The GetScrollBarInfo function retrieves information about the specified scroll bar.
            </summary>
            <param name="hwnd">Handle to a window associated with the scroll bar whose information is to be retrieved. If the idObject parameter is OBJID_CLIENT, hwnd is a handle to a scroll bar control. Otherwise, hwnd is a handle to a window created with WS_VSCROLL and/or WS_HSCROLL style.</param>
            <param name="idObject">Specifies the scroll bar object. This parameter can be one of the following values.</param>
            <param name="psbi">Pointer to a SCROLLBARINFO structure to receive the information. Before calling GetScrollBarInfo, set the cbSize member to sizeof(SCROLLBARINFO).</param>
            <returns>If the function succeeds, the return value is nonzero.</returns>
        </member>
        <member name="M:Syncfusion.WinForms.Core.NativeMethods.GetRegionData(System.IntPtr,System.Int32,System.Byte[])">
            <summary>
            The GetRegionData function fills the specified buffer with data describing a region. This data includes the dimensions of the rectangles that make up the region.
            </summary>
            <param name="hRgn">A handle to the region.</param>
            <param name="size">The size, in bytes, of the lpRgnData buffer.</param>
            <param name="data">A pointer to a RGNDATA structure that receives the information. The dimensions of the region are in logical units. If this parameter is NULL, the return value contains the number of bytes needed for the region data.</param>
            <returns>If the function succeeds and dwCount specifies an adequate number of bytes, the return value is always dwCount. If dwCount is too small or the function fails, the return value is 0. If lpRgnData is NULL, the return value is the required number of bytes.
            If the function fails, the return value is zero.</returns>
        </member>
        <member name="M:Syncfusion.WinForms.Core.NativeMethods.SetParent(System.IntPtr,System.IntPtr)">
            <summary>
            Changes the parent window of the specified child window.
            </summary>
            <param name="hwndchild">A handle to the child window.</param>
            <param name="hwnparent">A handle to the new parent window. If this parameter is NULL, the desktop window becomes the new parent window. If this parameter is HWND_MESSAGE, the child window becomes a message-only window.</param>
            <returns>
            If the function succeeds, the return value is a handle to the previous parent window.
            If the function fails, the return value is NULL. To get extended error information, call GetLastError.
            </returns>
        </member>
        <member name="M:Syncfusion.WinForms.Core.NativeMethods.GetWindow(System.IntPtr,System.Int32)">
            <summary>
            Retrieves a handle to a window that has the specified relationship (Z-Order or owner) to the specified window.
            </summary>
            <param name="hwnd">A handle to a window. The window handle retrieved is relative to this window, based on the value of the uCmd parameter.</param>
            <param name="uCmd">The relationship between the specified window and the window whose handle is to be retrieved. This parameter can be one of the following values.</param>
            <returns>
            If the function succeeds, the return value is a window handle. If no window exists with the specified relationship to the specified window, the return value is NULL. To get extended error information, call GetLastError.
            </returns>
        </member>
        <member name="M:Syncfusion.WinForms.Core.NativeMethods.GetWindowLong(System.IntPtr,System.Int32)">
            <summary>
            Retrieves information about the specified window. The function also retrieves the 32-bit (DWORD) value at the specified offset into the extra window memory.
            </summary>
            <param name="hWnd">A handle to the window and, indirectly, the class to which the window belongs.</param>
            <param name="index">The zero-based offset to the value to be retrieved. Valid values are in the range zero through the number of bytes of extra window memory, minus four;</param>
            <returns>
            If the function fails, the return value is zero. To get extended error information, call GetLastError.
            </returns>
        </member>
        <member name="M:Syncfusion.WinForms.Core.NativeMethods.GetWindowRect(System.IntPtr,Syncfusion.WinForms.Core.NativePaint.RECT@)">
            <summary>
            Retrieves the dimensions of the bounding rectangle of the specified window. The dimensions are given in screen coordinates that are relative to the upper-left corner of the screen.
            </summary>
            <param name="hwnd">A handle to the window.</param>
            <param name="rect">A pointer to a RECT structure that receives the screen coordinates of the upper-left and lower-right corners of the window.</param>
            <returns>If the function succeeds, the return value is nonzero, otherwise return zero.</returns>
        </member>
        <member name="M:Syncfusion.WinForms.Core.NativeMethods.DrawText(System.IntPtr,System.String,System.Int32,Syncfusion.WinForms.Core.NativePaint.RECT@,System.Int32)">
            <summary>
            Draws formatted text in the specified rectangle. 
            </summary>
            <param name="hdc">A handle to the device context.</param>
            <param name="textString">A pointer to the string that specifies the text to be drawn. If the nCount parameter is -1, the string must be null-terminated.</param>
            <param name="count">The length, in characters, of the string. If count is -1, then the textString parameter is assumed to be a pointer to a null-terminated string and DrawText computes the character count automatically.</param>
            <param name="rect">A pointer to a RECT structure that contains the rectangle (in logical coordinates) in which the text is to be formatted.</param>
            <param name="format">The method of formatting the text.</param>
            <returns>If the function succeeds, the return value is the height of the text in logical units, else return zero.</returns>
        </member>
        <member name="M:Syncfusion.WinForms.Core.NativeMethods.FillRect(System.IntPtr,Syncfusion.WinForms.Core.NativePaint.RECT@,System.IntPtr)">
            <summary>
            This function fills a rectangle by using the specified brush. This function includes the left and top borders, but excludes the right and bottom borders of the rectangle.
            </summary>
            <param name="hdc">A handle to the device context.</param>
            <param name="rect">A pointer to a RECT structure that contains the logical coordinates of the rectangle to be filled.</param>
            <param name="hBrush">A handle to the brush used to fill the rectangle.</param>
            <returns>If the function succeeds, the return value is nonzero else return zero.</returns>
        </member>
        <member name="M:Syncfusion.WinForms.Core.NativeMethods.DeleteObject(System.IntPtr)">
            <summary>
            The DeleteObject function deletes a logical pen, brush, font, bitmap, region, or palette, freeing all system resources associated with the object. After the object is deleted, the specified handle is no longer valid.
            </summary>
            <param name="hObject">A handle to a logical pen, brush, font, bitmap, region, or palette.</param>
            <returns>If the function succeeds, the return value is nonzero, else return zero.</returns>
        </member>
        <member name="M:Syncfusion.WinForms.Core.NativeMethods.SelectObject(System.IntPtr,System.IntPtr)">
            <summary>
            The SelectObject function selects an object into the specified device context (DC). The new object replaces the previous object of the same type.
            </summary>
            <param name="hdc">A handle to the DC.</param>
            <param name="obj">A handle to the object to be selected.</param>
            <returns>If the selected object is not a region and the function succeeds, the return value is a handle to the object being replaced. If the selected object is a region and the function succeeds, the return value is one of the following values.</returns>
        </member>
        <member name="M:Syncfusion.WinForms.Core.NativeMethods.GradientFill(System.IntPtr,Syncfusion.WinForms.Core.NativePaint.TRIVERTEX[],System.UInt32,Syncfusion.WinForms.Core.NativePaint.GRADIENT_RECT[],System.UInt32,Syncfusion.WinForms.Core.NativePaint.GRADIENT_FILL)">
            <summary>
            This method used to fill the gradient.
            </summary>
            <param name="hdc">A handle to the Device Context.</param>
            <param name="vertex">The array of <see cref="T:Syncfusion.WinForms.Core.NativePaint.TRIVERTEX"/> objects.</param>
            <param name="vertexIndex">The index of the vertex to be selected.</param>
            <param name="mesh">The array of <see cref="T:Syncfusion.WinForms.Core.NativePaint.GRADIENT_RECT"/> objects.</param>
            <param name="objectIndex">The index of the <see cref="T:Syncfusion.WinForms.Core.NativePaint.GRADIENT_RECT"/> object array to be selected.</param>
            <param name="mode">The Gradient fill mode.</param>
            <returns>If the function fails, the return value is zero else return non zero value.</returns>
        </member>
        <member name="M:Syncfusion.WinForms.Core.NativeMethods.CreatePen(System.Int32,System.Int32,System.Int32)">
            <summary>
            The CreatePen function creates a logical pen that has the specified style, width, and color. The pen can subsequently be selected into a device context and used to draw lines and curves.
            </summary>
            <param name="penStyle">The pen style.</param>
            <param name="width">The width of the pen, in logical units. If nWidth is zero, the pen is a single pixel wide, regardless of the current transformation.</param>
            <param name="color">A color reference for the pen color. </param>
            <returns>If the function succeeds, the return value is a handle that identifies a logical pen. If the function fails, the return value is NULL.</returns>
        </member>
        <member name="M:Syncfusion.WinForms.Core.NativeMethods.FillRgn(System.IntPtr,System.IntPtr,System.IntPtr)">
            <summary>
            This function fills a region by using the specified brush.
            </summary>
            <param name="hdc">A handle to the Device Context.</param>
            <param name="hrgn">Handle to the region to be filled. The region's coordinates are presumed to be in logical units.</param>
            <param name="hbr">Handle to the brush to be used to fill the region.</param>
            <returns>If the function fails, the return value is zero else return non zero value.</returns>
        </member>
        <member name="M:Syncfusion.WinForms.Core.NativeMethods.MoveToEx(System.IntPtr,System.Int32,System.Int32,System.IntPtr)">
            <summary>
            This function updates the current position to the specified point and optionally returns the previous position.
            </summary>
            <param name="hdc">A handle to the Device Context.</param>
            <param name="x">The x-coordinate of the upper-left corner of the rectangle.</param>
            <param name="y">The y-coordinate of the upper-left corner of the rectangle.</param>
            <param name="point">Pointer to a POINT structure that receives the previous current position. If this parameter is a NULL pointer, the previous position is not returned.</param>
            <returns>If the function fails, the return value is zero else return non zero value.</returns>
        </member>
        <member name="M:Syncfusion.WinForms.Core.NativeMethods.LineTo(System.IntPtr,System.Int32,System.Int32)">
            <summary>
            This function draws a line from the current position up to, but not including, the specified point.
            </summary>
            <param name="hdc">A handle to the Device Context.</param>
            <param name="topLeftXEnd">The x-coordinate of the upper-left corner of the rectangle.</param>
            <param name="topLeftYEnd">The y-coordinate of the upper-left corner of the rectangle.</param>
            <returns>If the function fails, the return value is zero else return non zero value.</returns>
        </member>
        <member name="M:Syncfusion.WinForms.Core.NativeMethods.CreateBrushIndirect(Syncfusion.WinForms.Core.NativePaint.LOGBRUSH@)">
            <summary>
            This function creates a logical brush that has the specified style, color, and pattern.
            </summary>
            <param name="lb">A pointer to a LOGBRUSH structure that contains information about the brush.</param>
            <returns>If the function succeeds, the return value identifies a logical brush.
            If the function fails, the return value is NULL.</returns>
        </member>
        <member name="M:Syncfusion.WinForms.Core.NativeMethods.CreateSolidBrush(System.Int32)">
            <summary>
            This function creates a logical brush that has the specified solid color.
            </summary>
            <param name="color">The color of the brush.</param>
            <returns>If the function succeeds, the return value identifies a logical brush. If the function fails, the return value is NULL.</returns>
        </member>
        <member name="M:Syncfusion.WinForms.Core.NativeMethods.RectangleCE(System.IntPtr,System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            This method used to draws the rectangle.
            </summary>
            <param name="hdc">A handle to the Device Context.</param>
            <param name="leftRect">The left position of rectangle.</param>
            <param name="topRect">The top position of rectangle.</param>
            <param name="rightRect">The right position of rectangle.</param>
            <param name="bottomRect">The bottom position of rectangle.</param>
            <returns>If the function succeeds, the return value is nonzero, else return zero.</returns>
        </member>
        <member name="M:Syncfusion.WinForms.Core.NativeMethods.CopyImage(System.IntPtr,System.UInt32,System.Int32,System.Int32,System.UInt32)">
            <summary>
            Creates a new image (icon, cursor, or bitmap) and copies the attributes of the specified image to the new one. 
            If necessary, the function stretches the bits to fit the desired size of the new image.
            </summary>
            <param name="imagePtr">A handle to the image to be copied.</param>
            <param name="imageType">The type of image to be copied. This parameter can be one of the following values.</param>
            <param name="desiredWidth">The desired width, in pixels, of the image. If this is zero, then the returned image will have the same width as the original hImage.</param>
            <param name="desiredHeight">The desired height, in pixels, of the image. If this is zero, then the returned image will have the same height as the original hImage.</param>
            <param name="flags">This parameter can be one or more of the following values.</param>
            <returns>If the function succeeds, the return value is the handle to the newly created image. 
            If the function fails, the return value is NULL.</returns>
        </member>
        <member name="M:Syncfusion.WinForms.Core.NativeMethods.DrawState(System.IntPtr,System.IntPtr,Syncfusion.WinForms.Core.DrawStateProc,System.IntPtr,System.IntPtr,System.Int32,System.Int32,System.Int32,System.Int32,System.UInt32)">
            <summary>
             This function displays an image and applies a visual effect to indicate a state, such as a disabled or default state.
            </summary>
            <param name="hdc">A handle to the device context to draw in.</param>
            <param name="brushHandle">A handle to the brush used to draw the image, if the state specified by the fuFlags parameter is DSS_MONO. This parameter is ignored for other states.</param>
            <param name="outputFunc">A pointer to an application-defined callback function used to render the image. This parameter is required if the image type in fuFlags is DST_COMPLEX. It is optional and can be NULL if the image type is DST_TEXT. 
            For all other image types, this parameter is ignored. </param>
            <param name="data">Information about the image. The meaning of this parameter depends on the image type.</param>
            <param name="imageData">The Information about the image. The meaning of this parameter depends on the image type.</param>
            <param name="x">The horizontal location, in device units, at which to draw the image.</param>
            <param name="y">The vertical location, in device units, at which to draw the image.</param>
            <param name="width">The width of the image, in device units.</param>
            <param name="height">The height of the image, in device units.</param>
            <param name="flags">The image type and state. This parameter can be one of the following type values.</param>
            <returns>If the function fails, the return value is zero else return non zero value.</returns>
        </member>
        <member name="M:Syncfusion.WinForms.Core.NativeMethods.DestroyIcon(System.IntPtr)">
            <summary>
            Destroys an icon and frees any memory the icon occupied.
            </summary>
            <param name="hIcon">A handle to the icon to be destroyed. The icon must not be in use.</param>
            <returns>If the function succeeds, the return value is nonzero. If the function fails, the return value is zero. </returns>
        </member>
        <member name="M:Syncfusion.WinForms.Core.NativeMethods.GetClipBox(System.IntPtr,Syncfusion.WinForms.Core.NativePaint.RECT@)">
            <summary>
            This function retrieves the dimensions of the tightest bounding rectangle that can be drawn around the current visible area on the device.
            </summary>
            <param name="hDC">A handle to the Device Context.</param>
            <param name="rect">A pointer to a RECT structure that is to receive the rectangle dimensions, in logical units.</param>
            <returns>If the function succeeds, the return value specifies the clipping box's complexity and can be one of the following values.</returns>
        </member>
        <member name="M:Syncfusion.WinForms.Core.NativeMethods.IntersectClipRect(System.IntPtr,System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            This function creates a new clipping region from the intersection of the current clipping region and the specified rectangle.
            </summary>
            <param name="hDC">A handle to the Device Context.</param>
            <param name="x1">The x-coordinate, in logical units, of the upper-left corner of the rectangle.</param>
            <param name="y1">The y-coordinate, in logical units, of the upper-left corner of the rectangle.</param>
            <param name="x2">The x-coordinate, in logical units, of the lower-right corner of the rectangle.</param>
            <param name="y2">The y-coordinate, in logical units, of the lower-right corner of the rectangle.</param>
            <returns>The return value specifies the new clipping region's type and can be one of the following values.</returns>
        </member>
        <member name="M:Syncfusion.WinForms.Core.NativeMethods.ImageList_DrawEx(System.IntPtr,System.Int32,System.IntPtr,System.Int32,System.Int32,System.Int32,System.Int32,System.UInt32,System.UInt32,System.UInt32)">
            <summary>
            Draws an image list item in the specified device context. 
            The function uses the specified drawing style and blends the image with the specified color.
            </summary>
            <param name="himl">A handle to the image list</param>
            <param name="i">The index of the image to draw.</param>
            <param name="hdcDst">A handle to the destination device context.</param>
            <param name="x">The x-coordinate at which to draw within the specified device context.</param>
            <param name="y">The y-coordinate at which to draw within the specified device context.</param>
            <param name="dx">The width of the portion of the image to draw relative to the upper-left corner of the image. 
            If width and height parameters are zero, the function draws the entire image. 
            The function does not ensure that the parameters are valid.</param>
            <param name="dy">The height of the portion of the image to draw, relative to the upper-left corner of the image.
            If width and height parameters are zero, the function draws the entire image.
            The function does not ensure that the parameters are valid.</param>
            <param name="backgroundColor">The background color of the image.</param>
            <param name="foregroundColor">The foreground color of the image. </param>
            <param name="style">The drawing style and, optionally, the overlay image.</param>
            <returns>If the function fails, the return value is zero else return non zero value.</returns>
        </member>
        <member name="M:Syncfusion.WinForms.Core.NativeMethods.SelectClipRgn(System.IntPtr,System.IntPtr)">
            <summary>
            This function selects a region as the current clipping region for the specified device context.
            </summary>
            <param name="hDC">A handle to the device context.</param>
            <param name="hRgn">A handle to the region to be selected.</param>
            <returns>The return value specifies the region's complexity and can be one of the following values.</returns>
        </member>
        <member name="M:Syncfusion.WinForms.Core.NativeMethods.CreateCompatibleDC(System.IntPtr)">
            <summary>
            This function creates a memory device context (DC) compatible with the specified device.
            </summary>
            <param name="hDC">A handle to an existing DC. If this handle is NULL, the function creates a memory DC compatible with the application's current screen.</param>
            <returns>If the function succeeds, the return value is the handle to a memory DC. If the function fails, the return value is NULL.</returns>
        </member>
        <member name="M:Syncfusion.WinForms.Core.NativeMethods.GetWindowDC(System.IntPtr)">
            <summary>
            This function retrieves the device context (DC) for the entire window, including title bar, menus, and scroll bars. 
            A window device context permits painting anywhere in a window,
            because the origin of the device context is the upper-left corner of the window instead of the client area.
            </summary>
            <param name="hWnd">A handle to the window with a device context that is to be retrieved.</param>
            <returns>If the function succeeds, the return value is a handle to a device context for the specified window.
            If the function fails, the return value is NULL, indicating an error or an invalid windows handle parameter.</returns>
        </member>
        <member name="M:Syncfusion.WinForms.Core.NativeMethods.SendMessage(System.IntPtr,System.Int32,System.IntPtr,System.Int32)">
            <summary>
            Sends the specified message to a window or windows. 
            The SendMessage function calls the window procedure for the specified window and does not return until the window procedure has processed the message.
            </summary>
            <param name="hWnd">A handle to the window whose window procedure will receive the message.</param>
            <param name="msg">The message to be sent.</param>
            <param name="wParam">Additional message-specific information.</param>
            <param name="lParam">A Additional message-specific information.</param>
            <returns>The return value specifies the result of the message processing; it depends on the message sent.</returns>
        </member>
        <member name="M:Syncfusion.WinForms.Core.NativeMethods.SendMessage(System.IntPtr,System.Int32,System.IntPtr,System.IntPtr)">
            <summary>
            Sends the specified message to a window or windows. 
            The SendMessage function calls the window procedure for the specified window and does not return until the window procedure has processed the message.
            </summary>
            <param name="hWnd">A handle to the window whose window procedure will receive the message.</param>
            <param name="msg">The message to be sent.</param>
            <param name="wParam">Additional message-specific information.</param>
            <param name="lParam">A Additional message-specific information.</param>
            <returns>The return value specifies the result of the message processing; it depends on the message sent.</returns>
        </member>
        <member name="M:Syncfusion.WinForms.Core.NativeMethods.SendMessage(System.IntPtr,System.Int32,System.Int32,System.Int32)">
            <summary>
            Sends the specified message to a window or windows. 
            The SendMessage function calls the window procedure for the specified window and does not return until the window procedure has processed the message.
            </summary>
            <param name="hWnd">A handle to the window whose window procedure will receive the message.</param>
            <param name="msg">The message to be sent.</param>
            <param name="wParam">Additional message-specific information.</param>
            <param name="lParam">A Additional message-specific information.</param>
            <returns>The return value specifies the result of the message processing; it depends on the message sent.</returns>
        </member>
        <member name="M:Syncfusion.WinForms.Core.NativeMethods.CreateCompatibleBitmap(System.IntPtr,System.Int32,System.Int32)">
            <summary>
            This function creates a bitmap compatible with the device that is associated with the specified device context.
            </summary>
            <param name="hdc">A handle to a device context.</param>
            <param name="width">The bitmap width, in pixels.</param>
            <param name="height">The bitmap height, in pixels.</param>
            <returns>If the function succeeds, the return value is a handle to the compatible bitmap (DDB). 
            If the function fails, the return value is NULL.</returns>
        </member>
        <member name="M:Syncfusion.WinForms.Core.NativeMethods.PostMessage(System.IntPtr,System.Int32,System.IntPtr,System.IntPtr)">
            <summary>
            Places (posts) a message in the message queue associated with the thread that created
            the specified window and returns without waiting for the thread to process the message.
            </summary>
            <param name="hwnd">A handle to the window whose window procedure is to receive the message.</param>
            <param name="msg">The message to be posted.</param>
            <param name="wparam">Additional message-specific information.</param>
            <param name="lparam">A Additional message-specific information.</param>
            <returns>If the function succeeds, the return value is nonzero. If the function fails, the return value is zero.</returns>
        </member>
        <member name="M:Syncfusion.WinForms.Core.NativeMethods.SetTextColor(System.IntPtr,System.Int32)">
            <summary>
            This function sets the text color for the specified device context to the specified color.
            </summary>
            <param name="hdc">A handle to the device context.</param>
            <param name="color">The color of the text.</param>
            <returns>If the function succeeds, the return value is a color reference for the previous text color as a COLORREF value.
            If the function fails, the return value is CLR_INVALID.</returns>
        </member>
        <member name="M:Syncfusion.WinForms.Core.NativeMethods.SetBkMode(System.IntPtr,System.Int32)">
            <summary>
            This function sets the fore color for the specified device context to the specified color.
            </summary>
            <param name="hdc">A handle to the device context.</param>
            <param name="backgroundMode">The background mode.</param>
            <returns>If the function succeeds, the return value specifies the previous background mode.
            If the function fails, the return value is zero.</returns>
        </member>
        <member name="M:Syncfusion.WinForms.Core.NativeMethods.LoadLibrary(System.String)">
            <summary>
            Loads the specified module into the address space of the calling process. 
            The specified module may cause other modules to be loaded.
            </summary>
            <param name="fileName">The name of the module. 
            This can be either a library module or an executable module (an .exe file).</param>
            <returns>If the function succeeds, the return value is a handle to the module. 
            If the function fails, the return value is NULL.</returns>
        </member>
        <member name="M:Syncfusion.WinForms.Core.NativeMethods.LockWindowUpdate(System.IntPtr)">
            <summary>
            This function disables or enables drawing in the specified window. Only one window can be locked at a time.
            </summary>
            <param name="hWndLock">The window in which drawing will be disabled. If this parameter is NULL, drawing in the locked window is enabled.</param>
            <returns>
            If the function succeeds, the return value is nonzero.
            If the function fails, the return value is zero, indicating that an error occurred or another window was already locked.
            </returns>
        </member>
        <member name="M:Syncfusion.WinForms.Core.NativeMethods.TrackMouseEvent(Syncfusion.WinForms.Core.NativeMethods.TRACKMOUSEEVENT@)">
            <summary>
            This function posts messages when the mouse pointer leaves a window or hovers over a window for a specified amount of time.
            </summary>
            <param name="lpEventTrack">A pointer to a TRACKMOUSEEVENT structure that contains tracking information.</param>
            <returns>Returns zero if the function fails. Otherwise return non zero value</returns>
        </member>
        <member name="M:Syncfusion.WinForms.Core.NativeMethods.ExcludeClipRect(System.IntPtr,System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            This function creates a new clipping region that consists of the existing clipping region minus the specified rectangle.
            </summary>
            <param name="hdc">A handle to the device context.</param>
            <param name="nLeft">The x-coordinate, in logical units, of the upper-left corner of the rectangle.</param>
            <param name="nTop">The y-coordinate, in logical units, of the upper-left corner of the rectangle.</param>
            <param name="nRight">The x-coordinate, in logical units, of the lower-right corner of the rectangle.</param>
            <param name="nBottom">The y-coordinate, in logical units, of the lower-right corner of the rectangle.</param>
            <returns>The return value specifies the new clipping region's complexity</returns>
        </member>
        <member name="M:Syncfusion.WinForms.Core.NativeMethods.BitBlt(System.IntPtr,System.Int32,System.Int32,System.Int32,System.Int32,System.IntPtr,System.Int32,System.Int32,System.Int32)">
            <summary>
            This method performs a bit-block transfer of the color data corresponding to a rectangle of pixels from the specified source device context into a destination device context.
            </summary>
            <param name="hdcDest">A handle to the destination device context.</param>
            <param name="nXDest">The x-coordinate, in logical units, of the upper-left corner of the destination rectangle.</param>
            <param name="nYDest">The y-coordinate, in logical units, of the upper-left corner of the destination rectangle.</param>
            <param name="nWidth">The width, in logical units, of the source and destination rectangles.</param>
            <param name="nHeight">The height, in logical units, of the source and the destination rectangles.</param>
            <param name="hdcSrc">A handle to the source device context.</param>
            <param name="nXSrc">The x-coordinate, in logical units, of the upper-left corner of the source rectangle.</param>
            <param name="nYSrc">The y-coordinate, in logical units, of the upper-left corner of the source rectangle.</param>
            <param name="dwRop">A raster-operation code. These codes define how the color data for the source rectangle is to be combined with the color data for the destination rectangle to achieve the final color.</param>
            <returns>If the function succeeds the return value is nonzero, otherwise zero</returns>
        </member>
        <member name="M:Syncfusion.WinForms.Core.NativeMethods.CreateRectRgn(System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            This function creates a rectangular region.
            </summary>
            <param name="x1">Specifies the x-coordinate of the upper-left corner of the region.</param>
            <param name="y1">Specifies the y-coordinate of the upper-left corner of the region.</param>
            <param name="x2">Specifies the x-coordinate of the lower-right corner of the region.</param>
            <param name="y2">Specifies the y-coordinate of the lower-right corner of the region.</param>
            <returns>If the function succeeds, the return value is the handle to the region. 
            If the function fails, the return value is NULL. </returns>
        </member>
        <member name="M:Syncfusion.WinForms.Core.NativeMethods.SetWindowRgn(System.IntPtr,System.IntPtr,System.Boolean)">
            <summary>
            This method determines the area within the window where the system permits drawing.
            </summary>
            <param name="hWnd">A handle to the window whose window region is to be set.</param>
            <param name="hRgn">A handle to a region.The function sets the window region of the window to this region.</param>
            <param name="bRedraw">Specifies whether the system redraws the window after setting the window region.</param>
            <returns>
            If the function succeeds, the return value is the handle to the region.
            If the function fails, the return value is NULL.
            </returns>
        </member>
        <member name="M:Syncfusion.WinForms.Core.NativeMethods.DeleteDC(System.IntPtr)">
            <summary>
            The DeleteDC function deletes the specified device context (DC).
            </summary>
            <param name="hDC">A handle to the device context.</param>
            <returns>
            If the function succeeds, the return value is nonzero.
            If the function fails, the return value is zero.
            </returns>
        </member>
        <member name="M:Syncfusion.WinForms.Core.NativeMethods.RedrawWindow(System.IntPtr,System.IntPtr,System.IntPtr,System.UInt32)">
            <summary>
            The RedrawWindow function updates the specified rectangle or region in a window's client area.
            </summary>
            <param name="hwnd">A handle to the window to be redrawn. If this parameter is NULL, the desktop window is updated.</param>
            <param name="lprcUpdate">A pointer to a RECT structure containing the coordinates, in device units, of the update rectangle. This parameter is ignored if the region Update parameter identifies a region.</param>
            <param name="hrgnUpdate">A handle to the update region. If both the region Update and Update parameters are NULL, the entire client area is added to the update region.</param>
            <param name="flags">One or more redraw flags. This parameter can be used to invalidate or validate a window, control repainting, and control which windows are affected by RedrawWindow.</param>
            <returns>
            If the function succeeds, the return value is nonzero.
            If the function fails, the return value is zero.
            </returns>
        </member>
        <member name="M:Syncfusion.WinForms.Core.NativeMethods.OffsetRgn(System.IntPtr,System.Int32,System.Int32)">
            <summary>
            The Offset Region function moves a region by the specified offsets.
            </summary>
            <param name="hrgn">Handle to the region to be moved.</param>
            <param name="nXOffset">Specifies the number of logical units to move left or right.</param>
            <param name="nYOffset">Specifies the number of logical units to move up or down.</param>
            <returns>
            The return value specifies the new region's complexity.
            </returns>
        </member>
        <member name="M:Syncfusion.WinForms.Core.NativeMethods.CombineRgn(System.IntPtr,System.IntPtr,System.IntPtr,System.Int32)">
            <summary>
            The Combine region function combines two regions and stores the result in a third region. The two regions are combined according to the specified mode.
            </summary>
            <param name="hRgn">A handle to a new region with dimensions defined by combining two other regions.</param>
            <param name="hRgn1">A handle to the first of two regions to be combined.</param>
            <param name="hRgn2">A handle to the second of two regions to be combined.</param>
            <param name="nCombineMode">A mode indicating how the two regions will be combined. </param>
            <returns>The return value specifies the type of the resulting region.</returns>
        </member>
        <member name="M:Syncfusion.WinForms.Core.NativeMethods.AdjustWindowRectEx(Syncfusion.WinForms.Core.NativePaint.RECT@,System.Int32,System.Boolean,System.Int32)">
            <summary>
            Calculates the required size of the window rectangle.
            </summary>
            <param name="lpRect">A pointer to a RECT structure that contains the coordinates of the top-left and bottom-right corners of the desired client area.</param>
            <param name="dwStyle">The window style of the window whose required size is to be calculated.</param>
            <param name="bMenu">Indicates whether the window has a menu.</param>
            <param name="dwExStyle">The extended window style of the window whose required size is to be calculated.</param>
            <returns>If the function succeeds, the return value is nonzero.</returns>
        </member>
        <member name="T:Syncfusion.WinForms.Core.NativeMethods.HookProc">
            <summary>
            The hook process delegates.
            </summary>
            <param name="nCode">The code</param>
            <param name="wParam">The window parameter.</param>
            <param name="lParam">The handle parameter.</param>
            <returns>Returns the pointer.</returns>
        </member>
        <member name="T:Syncfusion.WinForms.Core.NativeMethods.BLENDFUNCTION">
            <summary>
            The BLENDFUNCTION structure controls blending by specifying the blending functions for source and destination bitmaps.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Core.NativeMethods.BLENDFUNCTION.BlendOp">
            <summary>
            The source blend operation.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Core.NativeMethods.BLENDFUNCTION.BlendFlags">
            <summary>
            Must be zero.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Core.NativeMethods.BLENDFUNCTION.SourceConstantAlpha">
            <summary>
            Specifies an alpha transparency value to be used on the entire source bitmap.
            The SourceConstantAlpha value is combined with any per-pixel alpha values in the source bitmap.
            If you set SourceConstantAlpha to 0, it is assumed that your image is transparent.
            Set the SourceConstantAlpha value to 255 (opaque) when you only want to use per-pixel alpha values.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Core.NativeMethods.BLENDFUNCTION.AlphaFormat">
            <summary>
            This member controls the way the source and destination bitmaps are interpreted.
            </summary>
        </member>
        <member name="T:Syncfusion.WinForms.Core.NativeMethods.TRACKMOUSEEVENT">
            <summary>
            Used by the TrackMouseEvent function to track when the mouse pointer leaves a window 
            or hovers over a window for a specified amount of time.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Core.NativeMethods.TRACKMOUSEEVENT.cbSize">
            <summary>
            The size of the TRACKMOUSEEVENT structure, in bytes.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Core.NativeMethods.TRACKMOUSEEVENT.dwFlags">
            <summary>
            The services requested.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Core.NativeMethods.TRACKMOUSEEVENT.hwndTrack">
            <summary>
            A handle to the window to track.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Core.NativeMethods.TRACKMOUSEEVENT.dwHoverTime">
            <summary>
            The hover time-out (if TME_HOVER was specified in dwFlags), in milliseconds. 
            Can be HOVER_DEFAULT, which means to use the system default hover time-out.
            </summary>
        </member>
        <member name="T:Syncfusion.WinForms.Core.NativeMethods.MSG">
            <summary>
            The Message.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Core.NativeMethods.MSG.hwnd">
            <summary>
            The handle.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Core.NativeMethods.MSG.message">
            <summary>
            The message.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Core.NativeMethods.MSG.wParam">
            <summary>
            The window parameter.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Core.NativeMethods.MSG.lParam">
            <summary>
            The handle parameter
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Core.NativeMethods.MSG.time">
            <summary>
            The time.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Core.NativeMethods.MSG.pt_x">
            <summary>
            The x position.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Core.NativeMethods.MSG.pt_y">
            <summary>
            The y position
            </summary>
        </member>
        <member name="T:Syncfusion.WinForms.Core.NativeMethods.WINDOWPOS">
            <summary>
            Contains information about the size and position of a window.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Core.NativeMethods.WINDOWPOS.hwnd">
            <summary>
            A handle to the window.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Core.NativeMethods.WINDOWPOS.hwndInsertAfter">
            <summary>
            he position of the window in Z order (front-to-back position). 
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Core.NativeMethods.WINDOWPOS.x">
            <summary>
            The position of the left edge of the window.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Core.NativeMethods.WINDOWPOS.y">
            <summary>
            The position of the top edge of the window.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Core.NativeMethods.WINDOWPOS.cx">
            <summary>
            The window width, in pixels.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Core.NativeMethods.WINDOWPOS.cy">
            <summary>
            The window height, in pixels.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Core.NativeMethods.WINDOWPOS.flags">
            <summary>
            The window position.
            </summary>
        </member>
        <member name="T:Syncfusion.WinForms.Core.DrawStateProc">
            <summary>
            This function is an application-defined callback function that renders a complex image for the DrawState function.
            </summary>
            <param name="hdc">A handle to the Device Context.</param>
            <param name="lData">Specifies information about the image, which the application passed to DrawState.</param>
            <param name="wData">This specifies information about the image, which the application passed to DrawState.</param>
            <param name="cx">The image width, in device units, as specified by the call to DrawState.</param>
            <param name="cy">The image height, in device units, as specified by the call to DrawState.</param>
            <returns>If the function succeeds, the return value is TRUE. If the function fails, the return value is FALSE.</returns>
        </member>
        <member name="T:Syncfusion.WinForms.Core.NativePaint">
            <summary>
            Represents a class that provides the native methods for Painting.
            </summary>
        </member>
        <member name="T:Syncfusion.WinForms.Core.NativePaint.DrawEdgeBorder">
            <summary>
            Defines the constants that specify the type of inner and outer edges to draw.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Core.NativePaint.DrawEdgeBorder.BDR_RAISEDOUTER">
            <summary>
            Raised outer edge.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Core.NativePaint.DrawEdgeBorder.BDR_SUNKENOUTER">
            <summary>
            Sunken outer edge.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Core.NativePaint.DrawEdgeBorder.BDR_RAISEDINNER">
            <summary>
            Raised inner edge.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Core.NativePaint.DrawEdgeBorder.BDR_SUNKENINNER">
            <summary>
            Sunken inner edge.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Core.NativePaint.DrawEdgeBorder.EDGE_BUMP">
            <summary>
            Combination of BDR_RAISEDOUTER and BDR_SUNKENINNER
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Core.NativePaint.DrawEdgeBorder.EDGE_ETCHED">
            <summary>
            Combination of BDR_SUNKENOUTER and BDR_RAISEDINNER
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Core.NativePaint.DrawEdgeBorder.BDR_RAISED">
            <summary>
            Combination of BDR_RAISEDOUTER and BDR_RAISEDINNER.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Core.NativePaint.DrawEdgeBorder.BDR_SUNKEN">
            <summary>
            Combination of BDR_SUNKENOUTER and BDR_SUNKENINNER.
            </summary>
        </member>
        <member name="T:Syncfusion.WinForms.Core.NativePaint.DrawEdgeFlags">
            <summary>
            Defines the constants that specify the type of border.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Core.NativePaint.DrawEdgeFlags.BF_LEFT">
            <summary>
            Left side of border rectangle.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Core.NativePaint.DrawEdgeFlags.BF_TOP">
            <summary>
            Top of border rectangle.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Core.NativePaint.DrawEdgeFlags.BF_RIGHT">
            <summary>
            Right side of border rectangle.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Core.NativePaint.DrawEdgeFlags.BF_BOTTOM">
            <summary>
            Bottom of border rectangle.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Core.NativePaint.DrawEdgeFlags.BF_ALL">
            <summary>
            Entire border rectangle.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Core.NativePaint.DrawEdgeFlags.BF_ADJUST">
            <summary>
            If this flag is passed, shrink the rectangle pointed to by the QRC parameter to exclude the edges that were drawn.
            If this flag is not passed, then do not change the rectangle pointed to by the QRC parameter.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Core.NativePaint.DrawEdgeFlags.BF_FLAT">
            <summary>
            Flat border.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Core.NativePaint.DrawEdgeFlags.BF_MIDDLE">
            <summary>
            Interior of rectangle to be filled.
            </summary>
        </member>
        <member name="T:Syncfusion.WinForms.Core.NativePaint.GRADIENT_FILL">
            <summary>
            Defines the constants that specify the types of fill options for gradient style.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Core.NativePaint.GRADIENT_FILL.RECT_H">
            <summary>
            In this mode, two endpoints describe a rectangle. The rectangle is defined to have a constant color (specified by the TRIVERTEX structure) for the left and right edges. 
            GDI interpolates the color from the left to right edge and fills the interior.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Core.NativePaint.GRADIENT_FILL.RECT_V">
            <summary>
            In this mode, two endpoints describe a rectangle. The rectangle is defined to have a constant color (specified by the TRIVERTEX structure) for the top and bottom edges. 
            GDI interpolates the color from the top to bottom edge and fills the interior.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Core.NativePaint.GRADIENT_FILL.TRIANGLE">
            <summary>
            In this mode, an array of TRIVERTEX structures is passed to GDI along with a list of array indexes that describe separate triangles. 
            GDI performs linear interpolation between triangle vertices and fills the interior. Drawing is done directly in 24- and 32-bpp modes. 
            Dithering is performed in 16-, 8-, 4-, and 1-bpp mode.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Core.NativePaint.GRADIENT_FILL.OP_FLAG">
            <summary>
            Optional flag.
            </summary>
        </member>
        <member name="T:Syncfusion.WinForms.Core.NativePaint.WindowMouseHandle">
            <summary>
            Defines the constants that specify the mouse handle types.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Core.NativePaint.WindowMouseHandle.JOURNALRECORD">
            <summary>
            The journal record.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Core.NativePaint.WindowMouseHandle.JOURNALPLAYBACK">
            <summary>
            The journal play back.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Core.NativePaint.WindowMouseHandle.KEYBOARD">
            <summary>
            The keyboard.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Core.NativePaint.WindowMouseHandle.GETMESSAGE">
            <summary>
            The get message.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Core.NativePaint.WindowMouseHandle.CALLWNDPROC">
            <summary>
            The call window process.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Core.NativePaint.WindowMouseHandle.CBT">
            <summary>
            The option
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Core.NativePaint.WindowMouseHandle.SYSMSGFILTER">
            <summary>
            System message filter.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Core.NativePaint.WindowMouseHandle.MOUSE">
            <summary>
            The mouse.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Core.NativePaint.WindowMouseHandle.HARDWARE">
            <summary>
            Hardware mode.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Core.NativePaint.WindowMouseHandle.DEBUG">
            <summary>
            Debug mode.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Core.NativePaint.WindowMouseHandle.SHELL">
            <summary>
            The shell mode.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Core.NativePaint.WindowMouseHandle.FOREGROUNDIDLE">
            <summary>
            The fore ground idle mode.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Core.NativePaint.WindowMouseHandle.CALLWNDPROCRET">
            <summary>
            Call window process.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Core.NativePaint.WindowMouseHandle.KEYBOARD_LL">
            <summary>
            Keyboard operations.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Core.NativePaint.WindowMouseHandle.MOUSE_LL">
            <summary>
            Mouse operations
            </summary>
        </member>
        <member name="T:Syncfusion.WinForms.Core.NativePaint.PAINTSTRUCT">
            <summary>
            Contains the information about the application and used to paint the client area of the window owned by that application.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Core.NativePaint.PAINTSTRUCT.Erase">
            <summary>
            Indicates whether the background must be erased. 
            This value is nonzero if the application should erase the background. 
            The application is responsible for erasing the background if a window class is created without a background brush. 
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Core.NativePaint.PAINTSTRUCT.LeftPaintRect">
            <summary>Left region of the rectangle.</summary>
        </member>
        <member name="F:Syncfusion.WinForms.Core.NativePaint.PAINTSTRUCT.TopPaintRect">
            <summary>Top region of the rectangle.</summary>
        </member>
        <member name="F:Syncfusion.WinForms.Core.NativePaint.PAINTSTRUCT.RightPaintRect">
            <summary>Right region of the rectangle.</summary>
        </member>
        <member name="F:Syncfusion.WinForms.Core.NativePaint.PAINTSTRUCT.BottomPaintRect">
            <summary>Bottom region of the rectangle.</summary>
        </member>
        <member name="F:Syncfusion.WinForms.Core.NativePaint.PAINTSTRUCT.Restore">
            <summary>
            Reserved; used internally by the system.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Core.NativePaint.PAINTSTRUCT.IncUpdate">
            <summary>
            Reserved; used internally by the system.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Core.NativePaint.PAINTSTRUCT.Reserved1">
            <summary>reserved value.</summary>
        </member>
        <member name="F:Syncfusion.WinForms.Core.NativePaint.PAINTSTRUCT.Reserved2">
            <summary>reserved value.</summary>
        </member>
        <member name="F:Syncfusion.WinForms.Core.NativePaint.PAINTSTRUCT.Reserved3">
            <summary>reserved value.</summary>
        </member>
        <member name="F:Syncfusion.WinForms.Core.NativePaint.PAINTSTRUCT.Reserved4">
            <summary>reserved value.</summary>
        </member>
        <member name="F:Syncfusion.WinForms.Core.NativePaint.PAINTSTRUCT.Reserved5">
            <summary>reserved value.</summary>
        </member>
        <member name="F:Syncfusion.WinForms.Core.NativePaint.PAINTSTRUCT.Reserved6">
            <summary>reserved value.</summary>
        </member>
        <member name="F:Syncfusion.WinForms.Core.NativePaint.PAINTSTRUCT.Reserved7">
            <summary>reserved value.</summary>
        </member>
        <member name="F:Syncfusion.WinForms.Core.NativePaint.PAINTSTRUCT.Reserved8">
            <summary>reserved value.</summary>
        </member>
        <member name="F:Syncfusion.WinForms.Core.NativePaint.PAINTSTRUCT.Hdc">
            <summary>
            A handle to the display DC to be used for painting.
            </summary>
        </member>
        <member name="T:Syncfusion.WinForms.Core.NativePaint.RECT">
            <summary>
            Defines the coordinates of the upper-left and lower-right corners of a rectangle.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Core.NativePaint.RECT.Left">
            <summary>
            The left coordinate of the rectangle.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Core.NativePaint.RECT.Top">
            <summary>
            The top coordinate of the rectangle.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Core.NativePaint.RECT.Right">
            <summary>
            The right coordinate of the rectangle.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Core.NativePaint.RECT.Bottom">
            <summary>
            The bottom location of the rectangle.
            </summary>
        </member>
        <member name="M:Syncfusion.WinForms.Core.NativePaint.RECT.#ctor(System.Drawing.Rectangle)">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.WinForms.Core.NativePaint.RECT"/> struct.
            </summary>
            <param name="rect">The Rectangle that need to convert to the RECT.</param>
        </member>
        <member name="M:Syncfusion.WinForms.Core.NativePaint.RECT.#ctor(System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.WinForms.Core.NativePaint.RECT"/> struct.
            </summary>
            <param name="left">The x-coordinate of the upper-left corner of the rectangle.</param>
            <param name="top">The y-coordinate of the upper-left corner of the rectangle.</param>
            <param name="right">The x-coordinate of the lower-right corner of the rectangle.</param>
            <param name="bottom">The y-coordinate of the lower-right corner of the rectangle.</param>
        </member>
        <member name="M:Syncfusion.WinForms.Core.NativePaint.RECT.op_Implicit(Syncfusion.WinForms.Core.NativePaint.RECT)~System.Drawing.Rectangle">
            <summary>
            Convert the RECT to System.Drawing.Rectangle structure.
            </summary>
            <param name="rect">The RECT region of the control.</param>
            <returns>Returns the rectangle.</returns>
        </member>
        <member name="M:Syncfusion.WinForms.Core.NativePaint.RECT.ToString">
            <summary>
            Return the co-ordinates of the rectangle in a string format.
            </summary>
            <returns>The string value of the rectangle region.</returns>
        </member>
        <member name="M:Syncfusion.WinForms.Core.NativePaint.RECT.FromXYWH(System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Returns the RECT from the given values.
            </summary>
            <param name="x">The x-coordinate of the upper-left corner of the rectangle.</param>
            <param name="y">The y-coordinate of the upper-left corner of the rectangle.</param>
            <param name="width">The width of the rectangle.</param>
            <param name="height">The height of the rectangle.</param>
            <returns>Returns the new RECT value based on the given values.</returns>
        </member>
        <member name="P:Syncfusion.WinForms.Core.NativePaint.RECT.Width">
            <summary>
            Gets the width of the RECT.
            </summary>
        </member>
        <member name="P:Syncfusion.WinForms.Core.NativePaint.RECT.Height">
            <summary>
            Gets the Height of the RECT.
            </summary>
        </member>
        <member name="T:Syncfusion.WinForms.Core.NativePaint.TRIVERTEX">
            <summary>
            Provides the color information and position information.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Core.NativePaint.TRIVERTEX.X">
            <summary>
            The x-coordinate, in logical units, of the upper-left corner of the rectangle.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Core.NativePaint.TRIVERTEX.Y">
            <summary>
            The y-coordinate, in logical units, of the upper-left corner of the rectangle.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Core.NativePaint.TRIVERTEX.Red">
            <summary>
            The color information at the point of x, y.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Core.NativePaint.TRIVERTEX.Green">
            <summary>
            The color information at the point of x, y.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Core.NativePaint.TRIVERTEX.Blue">
            <summary>
            The color information at the point of x, y.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Core.NativePaint.TRIVERTEX.Alpha">
            <summary>
            The color information at the point of x, y.
            </summary>
        </member>
        <member name="M:Syncfusion.WinForms.Core.NativePaint.TRIVERTEX.#ctor(System.Int32,System.Int32,System.Int16,System.Int16,System.Int16,System.Int16)">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.WinForms.Core.NativePaint.TRIVERTEX"/> struct.
            </summary>
            <param name="x">The X position.</param>
            <param name="y">The Y position.</param>
            <param name="red">The red color value.</param>
            <param name="green">The green color value.</param>
            <param name="blue">The blue color value.</param>
            <param name="alpha">The alpha color value.</param>
        </member>
        <member name="T:Syncfusion.WinForms.Core.NativePaint.GRADIENT_RECT">
            <summary>
            Specifies the index of two vertices in the pVertex array in the GradientFill function. 
            These two vertices form the upper-left and lower-right boundaries of a rectangle.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Core.NativePaint.GRADIENT_RECT.UpperLeft">
            <summary>
            The upper-left corner of a rectangle.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Core.NativePaint.GRADIENT_RECT.LowerRight">
            <summary>
            The lower-left corner of a rectangle.
            </summary>
        </member>
        <member name="M:Syncfusion.WinForms.Core.NativePaint.GRADIENT_RECT.#ctor(System.Int32,System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.WinForms.Core.NativePaint.GRADIENT_RECT"/> struct.
            </summary>
            <param name="topLeft">The top left position.</param>
            <param name="lowRight">The bottom right position.</param>
        </member>
        <member name="T:Syncfusion.WinForms.Core.NativePaint.LOGBRUSH">
            <summary>
            Defines the style, color, and pattern of a physical brush. It is used by the CreateBrushIndirect and ExtCreatePen functions.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Core.NativePaint.LOGBRUSH.LogBrushStyle">
            <summary>
            Specifies the brush style.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Core.NativePaint.LOGBRUSH.LogBrushColor">
            <summary>
            Specifies the color in which the brush is to be drawn. If LogBrushStyle is the BS_HOLLOW or BS_PATTERN style, 
            LogBrushColor is ignored. If LogBrushStyle is BS_DIBPATTERN or BS_DIBPATTERNBT, the low-order word of LogBrushColor specifies 
            whether the colors members of the BITMAPINFO structure contain explicit red, green, blue (RGB) 
            values or indices into the currently realized logical palette. 
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Core.NativePaint.LOGBRUSH.LogBrushHatch">
            <summary>
            Specifies a hatch style. The meaning depends on the brush style defined by  log brush Style.
            </summary>
        </member>
        <member name="T:Syncfusion.WinForms.Core.NativePaint.RGB">
            <summary>
            Selects a red, green, blue (RGB) color based on the arguments supplied and the color capabilities of the output device.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Core.NativePaint.RGB.r">
            <summary>
            The reserved fields.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Core.NativePaint.RGB.g">
            <summary>
            The reserved fields.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Core.NativePaint.RGB.b">
            <summary>
            The reserved fields.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Core.NativePaint.RGB.reserved">
            <summary>
            The reserved fields.
            </summary>
        </member>
        <member name="M:Syncfusion.WinForms.Core.NativePaint.RGB.#ctor(System.Drawing.Color)">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.WinForms.Core.NativePaint.RGB"/> struct.
            </summary>
            <param name="colorIn">The color value.</param>
        </member>
        <member name="M:Syncfusion.WinForms.Core.NativePaint.RGB.ToInt32">
            <summary>
            Convert the RGB color value to integer value.
            </summary>
            <returns>Returns the converted value.</returns>
        </member>
        <member name="T:Syncfusion.WinForms.Core.NativePaint.FORMATRANGE">
            <summary>
            Information that a rich edit control uses to format its output for a particular device.
            </summary>        
        </member>
        <member name="F:Syncfusion.WinForms.Core.NativePaint.FORMATRANGE.Hdc">
            <summary>
            A HDC for the device to render to, if EM_FORMATRANGE is being used to send the output to a device.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Core.NativePaint.FORMATRANGE.TargetHdc">
            <summary>
            An HDC for the target device to format for.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Core.NativePaint.FORMATRANGE.Rect">
            <summary>
            The area within the page rectangle to render to.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Core.NativePaint.FORMATRANGE.WholeRect">
            <summary>
            The entire area of a page on the rendering device.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Core.NativePaint.FORMATRANGE.CharRange">
            <summary>
            The range of characters to format.
            </summary>
        </member>
        <member name="T:Syncfusion.WinForms.Core.NativePaint.CHARRANGE">
            <summary>
            Specifies a range of characters in a rich edit control.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Core.NativePaint.CHARRANGE.MinRange">
            <summary>
            Character position index immediately preceding the first character in the range.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Core.NativePaint.CHARRANGE.MaxRange">
            <summary>
            Character position immediately following the last character in the range.
            </summary>
        </member>
        <member name="T:Syncfusion.WinForms.Core.NativePaint.MOUSEHOOKSTRUCT">
            <summary>
            Represents a mouse hook structure.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Core.NativePaint.MOUSEHOOKSTRUCT.PointX">
            <summary>
            The X point
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Core.NativePaint.MOUSEHOOKSTRUCT.PointY">
            <summary>
            The y point
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Core.NativePaint.MOUSEHOOKSTRUCT.WindowHandle">
            <summary>
            The pointer contains the window handle.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Core.NativePaint.MOUSEHOOKSTRUCT.HitTestCode">
            <summary>
            The hit test code.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Core.NativePaint.MOUSEHOOKSTRUCT.DwExtraInfo">
            <summary>
            The extra information.
            </summary>
        </member>
        <member name="T:Syncfusion.WinForms.Core.NativePaint.MOUSEHOOKSTRUCT_LL">
            <summary>
            The mouse hook structure.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Core.NativePaint.MOUSEHOOKSTRUCT_LL.PointX">
            <summary>
            The X position. 
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Core.NativePaint.MOUSEHOOKSTRUCT_LL.PointY">
            <summary>
            The Y position.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Core.NativePaint.MOUSEHOOKSTRUCT_LL.MouseData">
            <summary>
            The mouse data.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Core.NativePaint.MOUSEHOOKSTRUCT_LL.Flags">
            <summary>
            The flags.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Core.NativePaint.MOUSEHOOKSTRUCT_LL.Time">
            <summary>
            The time
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Core.NativePaint.MOUSEHOOKSTRUCT_LL.DwExtraInfo">
            <summary>
            The extra information.
            </summary>
        </member>
        <member name="T:Syncfusion.WinForms.Core.NativeScroll">
            <summary>
            Represents a class that provides the native methods for scrolling.
            </summary>
        </member>
        <member name="T:Syncfusion.WinForms.Core.NativeScroll.SIF">
            <summary>
            Defines the constant that used to specifies the scrollbar parameters.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Core.NativeScroll.SIF.RANGE">
            <summary>
            The range of the scrollbar.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Core.NativeScroll.SIF.PAGE">
            <summary>
            Page information.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Core.NativeScroll.SIF.POS">
            <summary>
            Scroll position.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Core.NativeScroll.SIF.DISABLENOSCROLL">
            <summary>
            Returns or sets a value that determines whether scroll bars in the RichTextBox control are disabled.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Core.NativeScroll.SIF.TRACKPOS">
            <summary>
            Returns the position of the scrollbar thumb.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Core.NativeScroll.SIF.ALL">
            <summary>
            Specifies all the scrollbar information.
            </summary>
        </member>
        <member name="T:Syncfusion.WinForms.Core.NativeScroll.StateSystem">
            <summary>
            Defines the constants that used to specify the state of objects in an application UI.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Core.NativeScroll.StateSystem.STATE_SYSTEM_INVISIBLE">
            <summary>
            For the scroll bar itself, indicates the specified vertical or horizontal scroll bar does not exist.
            For the page up or page down regions, indicates the thumb is positioned such that the region does not exist.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Core.NativeScroll.StateSystem.STATE_SYSTEM_OFFSCREEN">
            <summary>
            For the scroll bar itself, indicates the window is sized such that the specified vertical or horizontal scroll bar is not currently displayed.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Core.NativeScroll.StateSystem.STATE_SYSTEM_PRESSED">
            <summary>
            The arrow button or page region is pressed.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Core.NativeScroll.StateSystem.STATE_SYSTEM_UNAVAILABLE">
            <summary>
            The component is disabled.
            </summary> 
        </member>
        <member name="T:Syncfusion.WinForms.Core.NativeScroll.SCROLLBARINFO">
            <summary>
            Contains the information about the scroll bar component.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Core.NativeScroll.SCROLLBARINFO.CbSize">
            <summary>
            Specifies the size of the structure.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Core.NativeScroll.SCROLLBARINFO.RcScrollBar">
            <summary>
            Coordinates of the scroll bar as specified in a RECT structure.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Core.NativeScroll.SCROLLBARINFO.DxyLineButton">
            <summary>
            Height or width of the thumb.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Core.NativeScroll.SCROLLBARINFO.XyThumbTop">
            <summary>
            Top/Left position of the thumb.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Core.NativeScroll.SCROLLBARINFO.XyThumbBottom">
            <summary>
            Indicates the bottom/right position of the thumb.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Core.NativeScroll.SCROLLBARINFO.Reserved">
            <summary>
            Reserved variable.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Core.NativeScroll.SCROLLBARINFO.Rgstate">
            <summary>
            An array of DWORD elements. Each element indicates the state of a scroll bar component. 
            </summary>
        </member>
        <member name="T:Syncfusion.WinForms.Core.NativeScroll.SCROLLINFO">
            <summary>
            Contains the information about the scrollbar parameters that are set by using SetScrollInfo method.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Core.NativeScroll.SCROLLINFO.CbSize">
            <summary>
            The size of the scroll info.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Core.NativeScroll.SCROLLINFO.FMask">
            <summary>
            The mask value of the scroll info.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Core.NativeScroll.SCROLLINFO.NMin">
            <summary>
            Specifies the minimum scrolling position.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Core.NativeScroll.SCROLLINFO.NMax">
            <summary>
            Specifies the maximum scrolling position.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Core.NativeScroll.SCROLLINFO.NPage">
            <summary>
            The nPage member contains the page size for a proportional scroll bar.    
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Core.NativeScroll.SCROLLINFO.NPos">
            <summary>
            This contains the scroll box position, which is not updated while the user drags the scroll box.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Core.NativeScroll.SCROLLINFO.NTrackPos">
            <summary>
            This contains the current position of the scroll box while the user is dragging it.
            </summary>
        </member>
        <member name="T:Syncfusion.WinForms.Core.NativeScroll.RegionCracker">
            <summary>
            Gets the rectangle region for the given offset. 
            </summary>
        </member>
        <member name="M:Syncfusion.WinForms.Core.NativeScroll.RegionCracker.CrackRegionData(System.IntPtr)">
            <summary>
            Cracks the region.
            </summary>
            <param name="hRgn">The pointer to the region.</param>
            <returns>Returns the RECT array.</returns>
        </member>
        <member name="M:Syncfusion.WinForms.Core.NativeScroll.RegionCracker.GetRects(System.Byte[],System.Int32,System.Int32)">
            <summary>
            Gets the rectangle region.
            </summary>
            <param name="buffer">The buffer.</param>
            <param name="header">The header value.</param>
            <param name="count">The count.</param>
            <returns>Returns the RECT array.</returns>
        </member>
        <member name="M:Syncfusion.WinForms.Core.NativeScroll.RegionCracker.ToInt(System.Byte[],System.Int32)">
            <summary>
            Converts the value to integer.
            </summary>
            <param name="buffer">The byte array.</param>
            <param name="offset">The offset value.</param>
            <returns>Returns the integer value.</returns>
        </member>
        <member name="T:Syncfusion.WinForms.Core.NativeTouch">
            <summary>
            Represents a class that provides native methods for Touch support.
            </summary>
        </member>
        <member name="T:Syncfusion.WinForms.Core.NativeTouch.GESTUREINFO">
            <summary>
            Stores the information about the gesture.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Core.NativeTouch.GESTUREINFO.CbSize">
            <summary>
            The size of the structure, in bytes. The caller must set this to sizeof(GESTUREINFO).   
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Core.NativeTouch.GESTUREINFO.DwFlags">
            <summary>
            The state of the gesture.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Core.NativeTouch.GESTUREINFO.DwID">
            <summary>
            The identifier of the gesture command.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Core.NativeTouch.GESTUREINFO.HwndTarget">
            <summary>
            handle to window targeted by this gesture.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Core.NativeTouch.GESTUREINFO.PtsLocation">
            <summary>
            Current location of this gesture. These coordinates are always relative to the origin of the screen.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Core.NativeTouch.GESTUREINFO.DwInstanceID">
            <summary>
            Internally used identifier for structure.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Core.NativeTouch.GESTUREINFO.DwSequenceID">
            <summary>
            Internally used identifier for sequence.
            </summary> 
        </member>
        <member name="F:Syncfusion.WinForms.Core.NativeTouch.GESTUREINFO.UllArguments">
            <summary>
             Arguments for gestures whose arguments fit in 8 BYTES.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Core.NativeTouch.GESTUREINFO.CbExtraArgs">
            <summary>
            The size, in bytes, of extra arguments that accompany this gesture.
            </summary>            
        </member>
        <member name="T:Syncfusion.WinForms.Core.NativeTouch.POINTS">
            <summary>
            Represents an ordered pair of integer x- and y-coordinates that defines a point in a two-dimensional plane.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Core.NativeTouch.POINTS.X">
            <summary>
            Gets or sets the x-coordinate of this Point.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Core.NativeTouch.POINTS.Y">
            <summary>
            Gets or sets the Y-coordinate value of this Point.
            </summary>
        </member>
        <member name="M:Syncfusion.WinForms.Core.NativeTouch.POINTS.ToPoint">
            <summary>
            Converts the x and y coordinate values to the point.
            </summary>
            <returns>Returns the point value.</returns>
        </member>
        <member name="T:Syncfusion.WinForms.Core.NativeTouch.GESTURECONFIG">
            <summary>
            Gets and sets the configuration for enabling gesture messages and the type of this configuration.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Core.NativeTouch.GESTURECONFIG.DwID">
            <summary>
            The identifier for the type of configuration that will have messages enabled or disabled.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Core.NativeTouch.GESTURECONFIG.DwWant">
            <summary>
            Settings related to gesture ID that are to be turned on.
            </summary>            
        </member>
        <member name="F:Syncfusion.WinForms.Core.NativeTouch.GESTURECONFIG.DwBlock">
            <summary>
            Settings related to gesture ID that are to be turned off.
            </summary>
        </member>
        <member name="T:Syncfusion.WinForms.Core.NativeTouch.GESTURENOTIFYSTRUCT">
            <summary>
            Gets and sets the gesture notification information for enable the gesture.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Core.NativeTouch.GESTURENOTIFYSTRUCT.CbSize">
            <summary>
            The size of the structure.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Core.NativeTouch.GESTURENOTIFYSTRUCT.DwFlags">
            <summary>
            Reserved for future use.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Core.NativeTouch.GESTURENOTIFYSTRUCT.HwndTarget">
            <summary>
            The target window for the gesture notification.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Core.NativeTouch.GESTURENOTIFYSTRUCT.PtsLocation">
            <summary>
            The location of the gesture in physical screen coordinates.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Core.NativeTouch.GESTURENOTIFYSTRUCT.DwInstanceID">
            <summary>
            A specific gesture instance with gesture messages starting with GID_BEGIN and ending with GID_END.
            </summary>
        </member>
        <member name="T:Syncfusion.WinForms.Core.WindowMessages">
            <summary>
            Represents a class that provides the list of window messages that are used in window process callback function. 
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Core.WindowMessages.UllArgumentsBitMask">
            <summary>
            One of the fields in GESTUREINFO structure is type of <see cref="T:System.Int64"/> (8 bytes).
            The relevant gesture information is stored in lower 4 bytes. This
            bit mask is used to get 4 lower bytes from this argument.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Core.WindowMessages.WM_GESTURENOTIFY">
            <summary>
            Provides the chance for configure the gestures.
            <remarks>
            Handling the WM_GESTURENOTIFY message will change the gesture configuration for the lifetime of the Window, not just for the next gesture.
            </remarks>
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Core.WindowMessages.WM_GESTURE">
            <summary>
            Passes the information about the gesture.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Core.WindowMessages.GC_ALLGESTURES">
            <summary>
            Indicates all the gestures. 
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Core.WindowMessages.GID_BEGIN">
            <summary>
            Indicates generic gesture is begin.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Core.WindowMessages.GID_END">
            <summary>
            Indicates generic gesture is end.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Core.WindowMessages.GID_ZOOM">
            <summary>
            Indicates zoom start, zoom move, or zoom stop. 
            The first GID_ZOOM command message begins a zoom but does not cause any zooming. 
            The second GID_ZOOM command triggers a zoom relative to the state contained in the first GID_ZOOM.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Core.WindowMessages.GID_PAN">
            <summary>
            Indicates pan move or pan start. 
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Core.WindowMessages.GID_ROTATE">
            <summary>
            Indicates rotate move or rotate start.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Core.WindowMessages.GID_TWOFINGERTAP">
            <summary>
            Indicates the two finger tap gesture.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Core.WindowMessages.GID_PRESSANDTAP">
            <summary>
            Indicates the press and tap gesture.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Core.WindowMessages.GfBegin">
            <summary>
            A gesture is starting.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Core.WindowMessages.GfInertia">
            <summary>
            Set the gesture is triggered inertia. 
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Core.WindowMessages.GfEnd">
            <summary>
            A gesture is finished.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Core.WindowMessages.GcPan">
            <summary>
            Indicates all pan gesture.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Core.WindowMessages.GcPanWithSingleFingerVertically">
            <summary>
            Indicates the vertical panning with single finger.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Core.WindowMessages.GcPanWithSingleFingerHorizontally">
            <summary>
            Indicates the horizontal panning with single finger.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Core.WindowMessages.GcPanWithGutter">
            <summary>
            Limits perpendicular movement to primary direction until a threshold is reached to break out of the gutter.
            </summary>        
        </member>
        <member name="F:Syncfusion.WinForms.Core.WindowMessages.GcPanWithIntertia">
            <summary>
            Indicates panning with inertia to smoothly slow when pan gestures stop.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Core.WindowMessages.WM_PAINT">
            <summary>
            Indicates the window request for the paint.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Core.WindowMessages.WM_PAINTCLIPBOARD">
            <summary>
            Sent to the clipboard owner by a clipboard viewer window when the clipboard contains data in the CF_OWNERDISPLAY format and the clipboard viewer's client area needs repainting.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Core.WindowMessages.WM_PAINTICON">
            <summary>
            The WM_PAINTICON message is sent to a minimized window when the icon is to be painted but only if the application is written for Windows 3.x. 
            A window receives this message only if a class icon is defined for the window; otherwise, WM_PAINT is sent instead.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Core.WindowMessages.WM_NCPAINT">
            <summary>
            Indicates that the frame must need a paint.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Core.WindowMessages.WM_SETREDRAW">
            <summary>
            Indicates the window requests to the redrawn.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Core.WindowMessages.RDW_INVALIDATE">
            <summary>
            Indicates the invalidate.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Core.WindowMessages.RDW_INTERNALPAINT">
            <summary>
            Causes a WM_PAINT message to be posted to the window regardless of whether the window contains an invalid region.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Core.WindowMessages.RDW_ERASE">
            <summary>
            Causes the window to receive a WM_ERASEBKGND message when the window is repainted. The RDW_INVALIDATE flag must also be specified; otherwise RDW_ERASE has no effect.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Core.WindowMessages.RDW_VALIDATE">
            <summary>
            Occurs while validating the entire window. This flag does not affect internal WM_PAINT messages.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Core.WindowMessages.RDW_NOINTERNALPAINT">
            <summary>
            Suppresses any pending internal WM_PAINT messages. This flag does not affect WM_PAINT messages resulting from invalid areas.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Core.WindowMessages.RDW_NOERASE">
            <summary>
            Suppress the pending WM_ERASEBKGND  messages.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Core.WindowMessages.RDW_NOCHILDREN">
            <summary>
            Excludes child windows, if any, from the repainting operation
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Core.WindowMessages.RDW_ALLCHILDREN">
            <summary>
            Includes the child windows in the repainting operation.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Core.WindowMessages.RDW_UPDATENOW">
            <summary>
            Causes the affected windows (as specified by the RDW_ALLCHILDREN and RDW_NOCHILDREN flags) to receive WM_NCPAINT, WM_ERASEBKGND, and WM_PAINT messages, if necessary, before the function returns.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Core.WindowMessages.RDW_ERASENOW">
            <summary>
            Causes the affected windows (as specified by the RDW_ALLCHILDREN and RDW_NOCHILDREN flags) to receive WM_NCPAINT and WM_ERASEBKGND messages, if necessary, before the function returns. 
            WM_PAINT messages are received at the ordinary time.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Core.WindowMessages.RDW_FRAME">
            <summary>
            Causes any part of the non-client area of the window that intersects the update region to receive a WM_NCPAINT message. 
            The RDW_INVALIDATE flag must also be specified; otherwise, RDW_FRAME has no effect. 
            The WM_NCPAINT message is typically not sent during the execution of RedrawWindow unless either RDW_UPDATENOW or RDW_ERASENOW is specified.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Core.WindowMessages.RDW_NOFRAME">
            <summary>
            Causes the window to receive a WM_ERASEBKGND message when the window is repainted. 
            The RDW_INVALIDATE flag must also be specified; otherwise, RDW_ERASE has no effect.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Core.WindowMessages.DT_TOP">
            <summary>
            Justifies the text to the top of the rectangle
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Core.WindowMessages.DT_LEFT">
            <summary>
            Aligns text to the left.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Core.WindowMessages.DT_CENTER">
            <summary>
            Centers text horizontally in the rectangle.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Core.WindowMessages.DT_RIGHT">
            <summary>
            Aligns text to the right.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Core.WindowMessages.DT_VCENTER">
            <summary>
            Centers text vertically. This value is used only with the DT_SINGLELINE value.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Core.WindowMessages.DT_BOTTOM">
            <summary>
            Justifies the text to the bottom of the rectangle. This value is used only with the DT_SINGLELINE value.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Core.WindowMessages.DT_WORDBREAK">
            <summary>
            Breaks words. Lines are automatically broken between words if a word would extend past the edge of the 
            rectangle specified by the rectangle parameter. A carriage return-line feed sequence also breaks the line.
            If this is not specified, output is on one line.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Core.WindowMessages.DT_SINGLELINE">
            <summary>
            Displays text on a single line only. Carriage returns and line feeds do not break the line.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Core.WindowMessages.DT_EXPANDTABS">
            <summary>
            Expands tab characters. The default number of characters per tab is eight. The DT_WORD_ELLIPSIS, DT_PATH_ELLIPSIS, and DT_END_ELLIPSIS values cannot be used with the DT_EXPANDTABS value.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Core.WindowMessages.DT_TABSTOP">
            <summary>
            Sets tab stops. Bits 15-8 (high-order byte of the low-order word) of the uFormat parameter specify the number of characters for each tab. The default number of characters per tab is eight. The DT_CALCRECT, DT_EXTERNALLEADING, DT_INTERNAL, DT_NOCLIP, and DT_NOPREFIX values cannot be used with the DT_TABSTOP value.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Core.WindowMessages.DT_NOCLIP">
            <summary>
            Draws without clipping. DrawText is somewhat faster when DT_NOCLIP is used.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Core.WindowMessages.DT_EXTERNALLEADING">
            <summary>
            Includes the font external leading in line height. Normally, external leading is not included in the height of a line of text.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Core.WindowMessages.DT_CALCRECT">
            <summary>
            Determines the width and height of the rectangle. If there are multiple lines of text,
             DrawText uses the width of the rectangle pointed to by the lpRect parameter and extends the base of the rectangle to bound the last line of text. If the largest word is wider than the rectangle, the width is expanded. If the text is less than the width of the rectangle, the width is reduced. If there is only one line of text, DrawText modifies the right side of the rectangle so that it bounds the last character in the line. In either case, DrawText returns the height of the formatted text but does not draw the text.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Core.WindowMessages.DT_NOPREFIX">
            <summary>
            Turns off processing of prefix characters. Normally, DrawText interprets the mnemonic-prefix character as a directive to underscore the character that follows, and the mnemonic-prefix characters as a directive to print a single. By specifying DT_NOPREFIX, this processing is turned off.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Core.WindowMessages.DT_INTERNAL">
            <summary>
            Uses the system font to calculate text metrics.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Core.WindowMessages.DT_EDITCONTROL">
            <summary>
            Duplicates the text-displaying characteristics of a multi line edit control. Specifically, the average character width is calculated in the same manner as for an edit control, and the function does not display a partially visible last line.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Core.WindowMessages.DT_PATH_ELLIPSIS">
            <summary>
            For displayed text, replaces characters in the middle of the string with ellipses so that the result fits in the specified rectangle. If the string contains backslash (\) characters, DT_PATH_ELLIPSIS preserves as much as possible of the text after the last backslash.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Core.WindowMessages.DT_END_ELLIPSIS">
            <summary>
            For displayed text, if the end of a string does not fit in the rectangle, it is truncated and ellipses are added. If a word that is not at the end of the string goes beyond the limits of the rectangle, it is truncated without ellipses.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Core.WindowMessages.DT_MODIFYSTRING">
            <summary>
            Modifies the specified string to match the displayed text. This value has no effect unless DT_END_ELLIPSIS or DT_PATH_ELLIPSIS is specified.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Core.WindowMessages.DT_RTLREADING">
            <summary>
            Layout in right-to-left reading order for bidirectional text when the font selected into the hdc is a Hebrew or Arabic font. The default reading order for all text is left-to-right.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Core.WindowMessages.DT_WORD_ELLIPSIS">
            <summary>
            Truncates any word that does not fit in the rectangle and adds ellipses.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Core.WindowMessages.DT_NOFULLWIDTHCHARBREAK">
            <summary>
            Prevents a line break at a DBCS (double-wide character string), so that the line breaking rule is equivalent to SBCS strings. For example, this can be used in Korean windows, for more readability of icon labels. This value has no effect unless DT_WORDBREAK is specified.   
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Core.WindowMessages.DT_HIDEPREFIX">
            <summary>
            Ignores the ampersand prefix character in the text. The letter that follows will not be underlined, but other mnemonic-prefix characters are still processed.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Core.WindowMessages.DT_PREFIXONLY">
            <summary>
            Draws only an underline at the position of the character following the ampersand prefix character. Does not draw any other characters in the string.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Core.WindowMessages.WM_HSCROLL">
            <summary>
            Occurs when the horizontal scrolling is made on the control or scrollbar.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Core.WindowMessages.WM_VSCROLL">
            <summary>
            Occurs when the window scroll event is occur on the vertical scrollbar.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Core.WindowMessages.WM_HSCROLLCLIPBOARD">
            <summary>
            Sent to the clipboard owner by a clipboard viewer window when the clipboard contains data in the CF_OWNERDISPLAY format and an event occurs in the clipboard viewer's horizontal scroll bar. The owner should scroll the clipboard image and update the scroll bar values.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Core.WindowMessages.WM_VSCROLLCLIPBOARD">
            <summary>
            Sent to the clipboard owner by a clipboard viewer window when the clipboard contains data in the CF_OWNERDISPLAY format and an event occurs in the clipboard viewer's vertical scroll bar. The owner should scroll the clipboard image and update the scroll bar values.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Core.WindowMessages.WM_CTLCOLORSCROLLBAR">
            <summary>
            Occurs while the scroll bar is drawn. by handling this message user can customize the background color of the scrollbar.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Core.WindowMessages.SBM_ENABLE_ARROWS">
            <summary>
            Occurs while enable or disable both arrows in scrollbar.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Core.WindowMessages.SBM_GETPOS">
            <summary>
            Occurs when GridScrollPos is called.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Core.WindowMessages.SBM_GETRANGE">
            <summary>
            Occurs when GetSCrollRange function is called. 
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Core.WindowMessages.SBM_GETSCROLLINFO">
            <summary>
            Sent by an application to retrieve information about the specified scroll bar.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Core.WindowMessages.SBM_SETPOS">
            <summary>
            Occurs when SetScrollPos is called.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Core.WindowMessages.SBM_SETRANGE">
            <summary>
            Occurs while setting the min and maximum range of the scroll control.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Core.WindowMessages.SBM_SETRANGEREDRAW">
            <summary>
            Occurs while setting the minimum and maximum position values and to redraw the control.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Core.WindowMessages.SBM_SETSCROLLINFO">
            <summary>
            Occurs while setting the scroll info.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Core.WindowMessages.SW_ERASE">
            <summary>
            Erases the newly invalidated region by sending a WM_ERASEBKGND message to the window when specified with the SW_INVALIDATE flag.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Core.WindowMessages.SW_INVALIDATE">
            <summary>
            Invalidates the region identified by the hrgnUpdate parameter after scrolling.
            </summary> 
        </member>
        <member name="F:Syncfusion.WinForms.Core.WindowMessages.SW_SCROLLCHILDREN">
            <summary>
            Scrolls all child windows that intersect the rectangle pointed to by the prcScroll parameter. The child windows are scrolled by the number of pixels specified by the dx and dy parameters. The system sends a WM_MOVE message to all child windows that intersect the prcScroll rectangle, even if they do not move.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Core.WindowMessages.SW_SMOOTHSCROLL">
            <summary>
            Scrolls using smooth scrolling. Use the HIWORD portion of the flags parameter to indicate how much time, in milliseconds, the smooth-scrolling operation should take.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Core.WindowMessages.OBJID_VSCROLL">
            <summary>
            The window's vertical scroll bar.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Core.WindowMessages.OBJID_HSCROLL">
            <summary>
            The window's Horizontal scroll bar.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Core.WindowMessages.SB_CTL">
            <summary>
            A scroll bar control
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Core.WindowMessages.SB_HORZ">
            <summary>
            The horizontal scroll bar of the specified window.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Core.WindowMessages.SB_THUMBPOSITION">
            <summary>
            The Thumb position of the scroll bar.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Core.WindowMessages.SB_VERT">
            <summary>
            The vertical scroll bar of the specified window.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Core.WindowMessages.ESB_DISABLE_DOWN">
            <summary>
            Disables the bottom arrow on a vertical scroll bar.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Core.WindowMessages.ESB_DISABLE_LEFT">
            <summary>
            Disables the left arrow on a horizontal scroll bar.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Core.WindowMessages.ESB_DISABLE_RIGHT">
            <summary>
            Disables the right arrow on a horizontal scroll bar.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Core.WindowMessages.ESB_DISABLE_UP">
            <summary>
            Disables the top arrow on a vertical scroll bar.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Core.WindowMessages.LVM_FIRST">
            <summary>
            Sets the list-view control first item.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Core.WindowMessages.LVM_SCROLL">
            <summary>
            Scrolls the content of a list-view control. 
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Core.WindowMessages.SW_SHOWMINIMIZED">
            <summary>
            Activates the window and displays it as a minimized window.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Core.WindowMessages.SW_SHOWMAXIMIZED">
            <summary>
            Activates the window and displays it as a maximized window.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Core.WindowMessages.SW_HIDE">
            <summary>
            Hides the window and activates another window.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Core.WindowMessages.SW_SHOWNORMAL">
            <summary>
            Activates and displays a window. If the window is minimized or maximized, the system restores it to its original size and position. An application should specify this flag when displaying the window for the first time.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Core.WindowMessages.WM_REFLECT">
            <summary>
            Represents the reflect window message.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Core.WindowMessages.WM_ACTIVATE">
            <summary>
            Sent to both the window being activated and the window being deactivated. If the windows use the same input queue, the message is sent synchronously, first to the window procedure of the top-level window being deactivated, then to the window procedure of the top-level window being activated. If the windows use different input queues, the message is sent asynchronously, so the window is activated immediately.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Core.WindowMessages.WM_ACTIVATEAPP">
            <summary>
            Sent when a window belonging to a different application than the active window is about to be activated. The message is sent to the application whose window is being activated and to the application whose window is being deactivated.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Core.WindowMessages.WM_AFXFIRST">
            <summary>
            Represents the window message Affix first.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Core.WindowMessages.WM_AFXLAST">
            <summary>
            Represents the window message Affix last.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Core.WindowMessages.WM_APP">
            <summary>
            Used to define private messages, usually of the form WM_APP+x, where x is an integer value.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Core.WindowMessages.WM_ASKCBFORMATNAME">
            <summary>
            Sent to the clipboard owner by a clipboard viewer window to request the name of a CF_OWNERDISPLAY clipboard format.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Core.WindowMessages.WM_CANCELJOURNAL">
            <summary>
            Posted to an application when a user cancels the application's journaling activities. The message is posted with a NULL window handle.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Core.WindowMessages.WM_CANCELMODE">
            <summary>
            Sent to cancel certain modes, such as mouse capture. For example, the system sends this message to the active window when a dialog box or message box is displayed. Certain functions also send this message explicitly to the specified window regardless of whether it is the active window. For example, the EnableWindow function sends this message when disabling the specified window.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Core.WindowMessages.WM_CAPTURECHANGED">
            <summary>
            Sent to the window that is losing the mouse capture.    
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Core.WindowMessages.WM_CHANGECBCHAIN">
            <summary>
            Sent to the first window in the clipboard viewer chain when a window is being removed from the chain.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Core.WindowMessages.WM_CHANGEUISTATE">
            <summary>
            An application sends the WM_CHANGEUISTATE message to indicate that the UI state should be changed.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Core.WindowMessages.WM_CHAR">
            <summary>
            Posted to the window with the keyboard focus when a WM_KEYDOWN message is translated by the TranslateMessage function. The WM_CHAR message contains the character code of the key that was pressed.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Core.WindowMessages.WM_CHARTOITEM">
            <summary>
            Sent by a list box with the LBS_WANTKEYBOARDINPUT style to its owner in response to a WM_CHAR message.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Core.WindowMessages.WM_CHILDACTIVATE">
            <summary>
            Sent to a child window when the user clicks the window's title bar or when the window is activated, moved, or sized.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Core.WindowMessages.WM_CHOOSEFONT_GETLOGFONT">
            <summary>
            An application sends the WM_CHOOSEFONT_GETLOGFONT message to a Font dialog box to retrieve information about the user's current font selections.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Core.WindowMessages.WM_CLEAR">
            <summary>
            An application sends a WM_CLEAR message to an edit control or combo box to delete (clear) the current selection, if any, from the edit control.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Core.WindowMessages.WM_CLOSE">
            <summary>
            Sent as a signal that a window or an application should terminate.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Core.WindowMessages.WM_COMMAND">
            <summary>
            Sent when the user selects a command item from a menu, when a control sends a notification message to its parent window, or when an accelerator keystroke is translated.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Core.WindowMessages.WM_COMMNOTIFY">
            <summary>
            Represents the common action is performed.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Core.WindowMessages.WM_COMPACTING">
            <summary>
            Sent to all top-level windows when the system detects more than 12.5 percent of system time over a 30- to 60-second interval is being spent compacting memory. This indicates that system memory is low.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Core.WindowMessages.WM_COMPAREITEM">
            <summary>
            Sent to determine the relative position of a new item in the sorted list of an owner-drawn combo box or list box. Whenever the application adds a new item, the system sends this message to the owner of a combo box or list box created with the CBS_SORT or LBS_SORT style.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Core.WindowMessages.WM_CONTEXTMENU">
            <summary>
            Notifies a window that the user clicked the right mouse button (right-clicked) in the window.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Core.WindowMessages.WM_COPY">
            <summary>
            An application sends the WM_COPY message to an edit control or combo box to copy the current selection to the clipboard in CF_TEXT format.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Core.WindowMessages.WM_COPYDATA">
            <summary>
            An application sends the WM_COPYDATA message to pass data to another application.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Core.WindowMessages.WM_CREATE">
            <summary>
            Sent when an application requests that a window be created by calling the CreateWindowEx or CreateWindow function. (The message is sent before the function returns.) The window procedure of the new window receives this message after the window is created, but before the window becomes visible.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Core.WindowMessages.WM_CTLCOLORBTN">
            <summary>
            The WM_CTLCOLORBTN message is sent to the parent window of a button before drawing the button. The parent window can change the button's text and background colors. However, only owner-drawn buttons respond to the parent window processing this message.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Core.WindowMessages.WM_CTLCOLORDLG">
            <summary>
            Sent to a dialog box before the system draws the dialog box. By responding to this message, the dialog box can set its text and background colors using the specified display device context handle.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Core.WindowMessages.WM_CTLCOLOREDIT">
            <summary>
            An edit control that is not read-only or disabled sends the WM_CTLCOLOREDIT message to its parent window when the control is about to be drawn. By responding to this message, the parent window can use the specified device context handle to set the text and background colors of the edit control.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Core.WindowMessages.WM_CTLCOLORLISTBOX">
            <summary>
            Sent to the parent window of a list box before the system draws the list box. By responding to this message, the parent window can set the text and background colors of the list box by using the specified display device context handle.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Core.WindowMessages.WM_CTLCOLORMSGBOX">
            <summary>
            Send to owner window before draws the MessageBox.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Core.WindowMessages.WM_CTLCOLORSTATIC">
            <summary>
            A static control, or an edit control that is read-only or disabled, sends the WM_CTLCOLORSTATIC message to its parent window when the control is about to be drawn. By responding to this message, the parent window can use the specified device context handle to set the text foreground and background colors of the static control.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Core.WindowMessages.WM_CUT">
            <summary>
            An application sends a WM_CUT message to an edit control or combo box to delete (cut) the current selection, if any, in the edit control and copy the deleted text to the clipboard in CF_TEXT format.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Core.WindowMessages.WM_DDE_ACK">
            <summary>
            The WM_DDE_ACK message notifies a Dynamic Data Exchange (DDE) application of the receipt and processing of the following messages: WM_DDE_POKE, WM_DDE_EXECUTE, WM_DDE_DATA, WM_DDE_ADVISE, WM_DDE_UNADVISE, WM_DDE_INITIATE, or WM_DDE_REQUEST (in some cases).
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Core.WindowMessages.WM_DDE_ADVISE">
            <summary>
            A Dynamic Data Exchange (DDE) client application posts the WM_DDE_ADVISE message to a DDE server application to request the server to supply an update for a data item whenever the item changes.
            To post this message, call the PostMessage function with the following parameters.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Core.WindowMessages.WM_DDE_DATA">
            <summary>
            A Dynamic Data Exchange (DDE) server application posts a WM_DDE_DATA message to a DDE client application to pass a data item to the client or to notify the client of the availability of a data item.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Core.WindowMessages.WM_DDE_EXECUTE">
            <summary>
            A Dynamic Data Exchange (DDE) client application posts a WM_DDE_EXECUTE message to a DDE server application to send a string to the server to be processed as a series of commands. The server application is expected to post a WM_DDE_ACK message in response.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Core.WindowMessages.WM_DDE_FIRST">
            <summary>
            A Dynamic Data Exchange (DDE) client application posts a WM_DDE_FIRST message to a DDE server application to send a string to the server to be processed as a series of commands. The server application is expected to post a WM_DDE_ACK message in response.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Core.WindowMessages.WM_DDE_INITIATE">
            <summary>
            A Dynamic Data Exchange (DDE) client application sends a WM_DDE_INITIATE message to initiate a conversation with a server application responding to the specified application and topic names. Upon receiving this message, all server applications with names that match the specified application and that support the specified topic are expected to acknowledge it. 
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Core.WindowMessages.WM_DDE_LAST">
            <summary>
            A Dynamic Data Exchange (DDE) client application posts a WM_DDE_LAST message to a DDE server application.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Core.WindowMessages.WM_DDE_POKE">
            <summary>
            A Dynamic Data Exchange (DDE) client application posts a WM_DDE_POKE message to a DDE server application. A client uses this message to request the server to accept an unsolicited data item. The server is expected to reply with a WM_DDE_ACK message indicating whether it accepted the data item.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Core.WindowMessages.WM_DDE_REQUEST">
            <summary>
            A Dynamic Data Exchange (DDE) client application posts a WM_DDE_REQUEST message to a DDE server application to request the value of a data item.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Core.WindowMessages.WM_DDE_TERMINATE">
            <summary>
            A Dynamic Data Exchange (DDE) application (client or server) posts a WM_DDE_TERMINATE message to terminate a conversation.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Core.WindowMessages.WM_DDE_UNADVISE">
            <summary>
            A Dynamic Data Exchange (DDE) client application posts a WM_DDE_UNADVISE message to inform a DDE server application that the specified item or a particular clipboard format for the item should no longer be updated. This terminates the warm or hot data link for the specified item.    
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Core.WindowMessages.WM_DEADCHAR">
            <summary>
            Posted to the window with the keyboard focus when a WM_KEYUP message is translated by the TranslateMessage function. WM_DEADCHAR specifies a character code generated by a dead key. A dead key is a key that generates a character, such as the umlaut (double-dot), that is combined with another character to form a composite character. For example, the umlaut-O character (Ö) is generated by typing the dead key for the umlaut character, and then typing the O key.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Core.WindowMessages.WM_DELETEITEM">
            <summary>
            Sent to the owner of a list box or combo box when the list box or combo box is destroyed or when items are removed by the LB_DELETESTRING, LB_RESETCONTENT, CB_DELETESTRING, or CB_RESETCONTENT message. The system sends a WM_DELETEITEM message for each deleted item. The system sends the WM_DELETEITEM message for any deleted list box or combo box item with nonzero item data.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Core.WindowMessages.WM_DESTROY">
            <summary>
            Sent when a window is being destroyed. It is sent to the window procedure of the window being destroyed after the window is removed from the screen.
            This message is sent first to the window being destroyed and then to the child windows (if any) as they are destroyed. During the processing of the message, it can be assumed that all child windows still exist.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Core.WindowMessages.WM_DESTROYCLIPBOARD">
            <summary>
            Sent to the clipboard owner when a call to the EmptyClipboard function empties the clipboard.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Core.WindowMessages.WM_DEVICECHANGE">
            <summary>
            Notifies an application of a change to the hardware configuration of a device or the computer.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Core.WindowMessages.WM_DEVMODECHANGE">
            <summary>
            The WM_DEVMODECHANGE message is sent to all top-level windows whenever the user changes device-mode settings.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Core.WindowMessages.WM_DISPLAYCHANGE">
            <summary>
            The WM_DISPLAYCHANGE message is sent to all windows when the display resolution has changed.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Core.WindowMessages.WM_DRAWCLIPBOARD">
            <summary>
            Sent to the first window in the clipboard viewer chain when the content of the clipboard changes. This enables a clipboard viewer window to display the new content of the clipboard.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Core.WindowMessages.WM_DRAWITEM">
            <summary>
            Sent to the parent window of an owner-drawn button, combo box, list box, or menu when a visual aspect of the button, combo box, list box, or menu has changed.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Core.WindowMessages.WM_DROPFILES">
            <summary>
            Sent when the user drops a file on the window of an application that has registered itself as a recipient of dropped files.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Core.WindowMessages.WM_ENABLE">
            <summary>
            Sent when an application changes the enabled state of a window. It is sent to the window whose enabled state is changing. This message is sent before the EnableWindow function returns, but after the enabled state (WS_DISABLED style bit) of the window has changed.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Core.WindowMessages.WM_ENDSESSION">
            <summary>
            The WM_ENDSESSION message is sent to an application after the system processes the results of the WM_QUERYENDSESSION message. The WM_ENDSESSION message informs the application whether the session is ending.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Core.WindowMessages.WM_ENTERIDLE">
            <summary>
            Sent to the owner window of a modal dialog box or menu that is entering an idle state. A modal dialog box or menu enters an idle state when no messages are waiting in its queue after it has processed one or more previous messages.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Core.WindowMessages.WM_ENTERMENULOOP">
            <summary>
            Notifies an application's main window procedure that a menu modal loop has been entered.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Core.WindowMessages.WM_ENTERSIZEMOVE">
            <summary>
            Sent one time to a window after it enters the moving or sizing modal loop. The window enters the moving or sizing modal loop when the user clicks the window's title bar or sizing border, or when the window passes the WM_SYSCOMMAND message to the DefWindowProc function and the wParam parameter of the message specifies the SC_MOVE or SC_SIZE value. The operation is complete when DefWindowProc returns.
            The system sends the WM_ENTERSIZEMOVE message regardless of whether the dragging of full windows is enabled.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Core.WindowMessages.WM_ERASEBKGND">
            <summary>
            Sent when the window background must be erased (for example, when a window is resized). The message is sent to prepare an invalidated portion of a window for painting.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Core.WindowMessages.WM_EXITMENULOOP">
            <summary>
            Notifies an application's main window procedure that a menu modal loop has been exited.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Core.WindowMessages.WM_EXITSIZEMOVE">
            <summary>
            Sent one time to a window, after it has exited the moving or sizing modal loop. The window enters the moving or sizing modal loop when the user clicks the window's title bar or sizing border, or when the window passes the WM_SYSCOMMAND message to the DefWindowProc function and the wParam parameter of the message specifies the SC_MOVE or SC_SIZE value. The operation is complete when DefWindowProc returns.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Core.WindowMessages.WM_FONTCHANGE">
            <summary>
            An application sends the WM_FONTCHANGE message to all top-level windows in the system after changing the pool of font resources.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Core.WindowMessages.WM_GETDLGCODE">
            <summary>
            Sent to the window procedure associated with a control. By default, the system handles all keyboard input to the control; the system interprets certain types of keyboard input as dialog box navigation keys. To override this default behavior, the control can respond to the WM_GETDLGCODE message to indicate the types of input it wants to process itself.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Core.WindowMessages.WM_GETFONT">
            <summary>
            Retrieves the font with which the control is currently drawing its text.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Core.WindowMessages.WM_GETHOTKEY">
            <summary>
            Sent to determine the hot key associated with a window.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Core.WindowMessages.WM_GETICON">
            <summary>
            Sent to a window to retrieve a handle to the large or small icon associated with a window. The system displays the large icon in the ALT+TAB dialog, and the small icon in the window caption.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Core.WindowMessages.WM_GETMINMAXINFO">
            <summary>
            Sent to a window when the size or position of the window is about to change. An application can use this message to override the window's default maximized size and position, or its default minimum or maximum tracking size.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Core.WindowMessages.WM_GETOBJECT">
            <summary>
            Sent by both Microsoft Active Accessibility and Microsoft UI Automation to obtain information about an accessible object contained in a server application.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Core.WindowMessages.WM_GETTEXT">
            <summary>
            Copies the text that corresponds to a window into a buffer provided by the caller.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Core.WindowMessages.WM_GETTEXTLENGTH">
            <summary>
            Determines the length, in characters, of the text associated with a window.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Core.WindowMessages.WM_HANDHELDFIRST">
            <summary>
            Represents the window message that handled first.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Core.WindowMessages.WM_HANDHELDLAST">
            <summary>
            Represents the window message that handled last.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Core.WindowMessages.WM_HELP">
            <summary>
            Indicates that the user pressed the F1 key. If a menu is active when F1 is pressed, WM_HELP is sent to the window associated with the menu; otherwise, WM_HELP is sent to the window that has the keyboard focus. If no window has the keyboard focus, WM_HELP is sent to the currently active window.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Core.WindowMessages.WM_HOTKEY">
            <summary>
            Posted when the user presses a hot key registered by the RegisterHotKey function. The message is placed at the top of the message queue associated with the thread that registered the hot key.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Core.WindowMessages.WM_ICONERASEBKGND">
            <summary>
            This message is sent to a minimized window when the background of the icon must be filled before painting the icon. A window receives this message only if a class icon is defined for the window; otherwise, WM_ERASEBKGND is sent.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Core.WindowMessages.WM_IME_CHAR">
            <summary>
            Sent to an application when the IME gets a character of the conversion result.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Core.WindowMessages.WM_IME_COMPOSITION">
            <summary>
            Sent to an application when the IME changes composition status as a result of a keystroke. A window receives this message through its WindowProc function.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Core.WindowMessages.WM_IME_COMPOSITIONFULL">
            <summary>
            Sent to an application when the IME window finds no space to extend the area for the composition window.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Core.WindowMessages.WM_IME_CONTROL">
            <summary>
            Sent by an application to direct the IME window to carry out the requested command. The application uses this message to control the IME window that it has created. To send this message, the application calls the SendMessage function with the following parameters.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Core.WindowMessages.WM_IME_ENDCOMPOSITION">
            <summary>
            Sent to an application when the IME ends composition. A window receives this message through its WindowProc function.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Core.WindowMessages.WM_IME_KEYDOWN">
            <summary>
            Sent to an application by the IME to notify the application of a key press and to keep message order. 
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Core.WindowMessages.WM_IME_KEYLAST">
            <summary>
             Sent to an application by the IME to notify the application of a key last and to keep message order. 
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Core.WindowMessages.WM_IME_KEYUP">
            <summary>
            Sent to an application by the IME to notify the application of a key release and to keep message order
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Core.WindowMessages.WM_IME_NOTIFY">
            <summary>
            Sent to an application to notify it of changes to the IME window. 
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Core.WindowMessages.WM_IME_SELECT">
            <summary>
            Sent to an application when the operating system is about to change the current IME. 
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Core.WindowMessages.WM_IME_SETCONTEXT">
            <summary>
            Sent to an application when a window is activated.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Core.WindowMessages.WM_IME_STARTCOMPOSITION">
            <summary>
            Sent immediately before the IME generates the composition string as a result of a keystroke.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Core.WindowMessages.WM_INITDIALOG">
            <summary>
            Sent to the dialog box procedure immediately before a dialog box is displayed. Dialog box procedures typically use this message to initialize controls and carry out any other initialization tasks that affect the appearance of the dialog box.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Core.WindowMessages.WM_INITMENU">
            <summary>
            Sent when a menu is about to become active. It occurs when the user clicks an item on the menu bar or presses a menu key. This allows the application to modify the menu before it is displayed.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Core.WindowMessages.WM_INITMENUPOPUP">
            <summary>
            Sent when a drop-down menu or submenu is about to become active. This allows an application to modify the menu before it is displayed, without changing the entire menu.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Core.WindowMessages.WM_INPUTLANGCHANGE">
            <summary>
            Sent to the topmost affected window after an application's input language has been changed. You should make any application-specific settings and pass the message to the DefWindowProc function, which passes the message to all first-level child windows. These child windows can pass the message to DefWindowProc to have it pass the message to their child windows, and so on.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Core.WindowMessages.WM_INPUTLANGCHANGEREQUEST">
            <summary>
            Posted to the window with the focus when the user chooses a new input language, either with the hotkey (specified in the Keyboard control panel application) or from the indicator on the system taskbar. An application can accept the change by passing the message to the DefWindowProc function or reject the change (and prevent it from taking place) by returning immediately.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Core.WindowMessages.WM_KEYDOWN">
            <summary>
            Posted to the window with the keyboard focus when a nonsystem key is pressed. A nonsystem key is a key that is pressed when the ALT key is not pressed.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Core.WindowMessages.WM_KEYFIRST">
            <summary>
            This message filters for keyboard messages.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Core.WindowMessages.WM_KEYLAST">
            <summary>
            This message filters for keyboard messages.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Core.WindowMessages.WM_KEYUP">
            <summary>
            Posted to the window with the keyboard focus when a nonsystem key is released. A nonsystem key is a key that is pressed when the ALT key is not pressed, or a keyboard key that is pressed when a window has the keyboard focus.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Core.WindowMessages.WM_KILLFOCUS">
            <summary>
            Sent to a window immediately before it loses the keyboard focus.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Core.WindowMessages.WM_LBUTTONDBLCLK">
            <summary>
            Posted when the user double-clicks the left mouse button while the cursor is in the client area of a window. If the mouse is not captured, the message is posted to the window beneath the cursor. Otherwise, the message is posted to the window that has captured the mouse.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Core.WindowMessages.WM_LBUTTONDOWN">
            <summary>
            Posted when the user presses the left mouse button while the cursor is in the client area of a window. If the mouse is not captured, the message is posted to the window beneath the cursor. Otherwise, the message is posted to the window that has captured the mouse.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Core.WindowMessages.WM_LBUTTONUP">
            <summary>
            Posted when the user releases the left mouse button while the cursor is in the client area of a window. If the mouse is not captured, the message is posted to the window beneath the cursor. Otherwise, the message is posted to the window that has captured the mouse.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Core.WindowMessages.WM_MBUTTONDBLCLK">
            <summary>
            Posted when the user double-clicks the middle mouse button while the cursor is in the client area of a window. If the mouse is not captured, the message is posted to the window beneath the cursor. Otherwise, the message is posted to the window that has captured the mouse.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Core.WindowMessages.WM_MBUTTONDOWN">
            <summary>
            Posted when the user presses the middle mouse button while the cursor is in the client area of a window. If the mouse is not captured, the message is posted to the window beneath the cursor. Otherwise, the message is posted to the window that has captured the mouse.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Core.WindowMessages.WM_MBUTTONUP">
            <summary>
            Posted when the user releases the middle mouse button while the cursor is in the client area of a window. If the mouse is not captured, the message is posted to the window beneath the cursor. Otherwise, the message is posted to the window that has captured the mouse.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Core.WindowMessages.WM_MDIACTIVATE">
            <summary>
            An application sends the WM_MDIACTIVATE message to a multiple-document interface (MDI) client window to instruct the client window to activate a different MDI child window.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Core.WindowMessages.WM_MDICASCADE">
            <summary>
            An application sends the WM_MDICASCADE message to a multiple-document interface (MDI) client window to arrange all its child windows in a cascade format.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Core.WindowMessages.WM_MDICREATE">
            <summary>
            An application sends the WM_MDICREATE message to a multiple-document interface (MDI) client window to create an MDI child window.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Core.WindowMessages.WM_MDIDESTROY">
            <summary>
            An application sends the WM_MDIDESTROY message to a multiple-document interface (MDI) client window to close an MDI child window.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Core.WindowMessages.WM_MDIGETACTIVE">
            <summary>
            An application sends the WM_MDIGETACTIVE message to a multiple-document interface (MDI) client window to retrieve the handle to the active MDI child window.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Core.WindowMessages.WM_MDIICONARRANGE">
            <summary>
            An application sends the WM_MDIICONARRANGE message to a multiple-document interface (MDI) client window to arrange all minimized MDI child windows. It does not affect child windows that are not minimized.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Core.WindowMessages.WM_MDIMAXIMIZE">
            <summary>
            An application sends the WM_MDIMAXIMIZE message to a multiple-document interface (MDI) client window to maximize an MDI child window. The system resizes the child window to make its client area fill the client window. The system places the child window's window menu icon in the rightmost position of the frame window's menu bar, and places the child window's restore icon in the leftmost position. 
            The system also appends the title bar text of the child window to that of the frame window.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Core.WindowMessages.WM_MDINEXT">
            <summary>
            An application sends the WM_MDINEXT message to a multiple-document interface (MDI) client window to activate the next or previous child window.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Core.WindowMessages.WM_MDIREFRESHMENU">
            <summary>
            An application sends the WM_MDIREFRESHMENU message to a multiple-document interface (MDI) client window to refresh the window menu of the MDI frame window.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Core.WindowMessages.WM_MDIRESTORE">
            <summary>
            An application sends the WM_MDIRESTORE message to a multiple-document interface (MDI) client window to restore an MDI child window from maximized or minimized size.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Core.WindowMessages.WM_MDISETMENU">
            <summary>
            An application sends the WM_MDISETMENU message to a multiple-document interface (MDI) client window to replace the entire menu of an MDI frame window, to replace the window menu of the frame window, or both.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Core.WindowMessages.WM_MDITILE">
            <summary>
            An application sends the WM_MDITILE message to a multiple-document interface (MDI) client window to arrange all of its MDI child windows in a tile format.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Core.WindowMessages.WM_MEASUREITEM">
            <summary>
            Sent to the owner window of a combo box, list box, list-view control, or menu item when the control or menu is created.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Core.WindowMessages.WM_MENUCHAR">
            <summary>
            Sent when a menu is active and the user presses a key that does not correspond to any mnemonic or accelerator key. This message is sent to the window that owns the menu.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Core.WindowMessages.WM_MENUSELECT">
            <summary>
            Sent to a menu's owner window when the user selects a menu item.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Core.WindowMessages.WM_MOUSEACTIVATE">
            <summary>
            Sent when the cursor is in an inactive window and the user presses a mouse button. The parent window receives this message only if the child window passes it to the DefWindowProc function.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Core.WindowMessages.WM_MOUSEFIRST">
            <summary>
            Specify the first mouse message.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Core.WindowMessages.WM_MOUSEHOVER">
            <summary>
            Posted to a window when the cursor hovers over the client area of the window for the period of time specified in a prior call to TrackMouseEvent.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Core.WindowMessages.WM_MOUSELAST">
            <summary>
            Posted to a window to get the last mouse position.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Core.WindowMessages.WM_MOUSELEAVE">
            <summary>
            Posted to a window when the cursor leaves the client area of the window specified in a prior call to TrackMouseEvent.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Core.WindowMessages.WM_MOUSEMOVE">
            <summary>
            Posted to a window when the cursor moves. If the mouse is not captured, the message is posted to the window that contains the cursor. Otherwise, the message is posted to the window that has captured the mouse.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Core.WindowMessages.WM_MOUSEWHEEL">
            <summary>
            Sent to the focus window when the mouse wheel is rotated. The DefWindowProc function propagates the message to the window's parent. There should be no internal forwarding of the message, since DefWindowProc propagates it up the parent chain until it finds a window that processes it.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Core.WindowMessages.WM_MOVE">
            <summary>
            Sent after a window has been moved.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Core.WindowMessages.WM_MOVING">
            <summary>
            Sent while window is in moving.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Core.WindowMessages.WM_NCACTIVATE">
            <summary>
            Sent to a window when its non client area needs to be changed to indicate an active or inactive state.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Core.WindowMessages.WM_NCCALCSIZE">
            <summary>
            Sent when the size and position of a window's client area must be calculated. By processing this message, an application can control the content of the window's client area when the size or position of the window changes.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Core.WindowMessages.WM_NCCREATE">
            <summary>
            Sent prior to the WM_CREATE message when a window is first created.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Core.WindowMessages.WM_NCDESTROY">
            <summary>
            Notifies a window that its non client area is being destroyed. The DestroyWindow function sends the WM_NCDESTROY message to the window following the WM_DESTROY message.WM_DESTROY is used to free the allocated memory object associated with the window.
            The WM_NCDESTROY message is sent after the child windows have been destroyed. In contrast, WM_DESTROY is sent before the child windows are destroyed.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Core.WindowMessages.WM_NCHITTEST">
            <summary>
            Sent to a window in order to determine what part of the window corresponds to a particular screen coordinate. This can happen, for example, when the cursor moves, when a mouse button is pressed or released, or in response to a call to a function such as WindowFromPoint. If the mouse is not captured, the message is sent to the window beneath the cursor. Otherwise, the message is sent to the window that has captured the mouse.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Core.WindowMessages.WM_NCLBUTTONDBLCLK">
            <summary>
            Posted when the user double-clicks the left mouse button while the cursor is within the non-client area of a window. This message is posted to the window that contains the cursor. If a window has captured the mouse, this message is not posted.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Core.WindowMessages.WM_NCLBUTTONDOWN">
            <summary>
            Posted when the user presses the left mouse button while the cursor is within the non-client area of a window. This message is posted to the window that contains the cursor. If a window has captured the mouse, this message is not posted.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Core.WindowMessages.WM_NCLBUTTONUP">
            <summary>
            Posted when the user releases the left mouse button while the cursor is within the non-client area of a window. This message is posted to the window that contains the cursor. If a window has captured the mouse, this message is not posted.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Core.WindowMessages.WM_NCMBUTTONDBLCLK">
            <summary>
            Posted when the user double-clicks the middle mouse button while the cursor is within the non-client area of a window. This message is posted to the window that contains the cursor. If a window has captured the mouse, this message is not posted.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Core.WindowMessages.WM_NCMBUTTONDOWN">
            <summary>
            Posted when the user presses the middle mouse button while the cursor is within the non-client area of a window. This message is posted to the window that contains the cursor. If a window has captured the mouse, this message is not posted.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Core.WindowMessages.WM_NCMBUTTONUP">
            <summary>
            Posted when the user releases the middle mouse button while the cursor is within the non-client area of a window. This message is posted to the window that contains the cursor. If a window has captured the mouse, this message is not posted.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Core.WindowMessages.WM_NCMOUSEHOVER">
            <summary>
            Posted to a window when the cursor hovers over the non-client area of the window for the period of time specified in a prior call to TrackMouseEvent.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Core.WindowMessages.WM_NCMOUSELEAVE">
            <summary>
            Posted to a window when the cursor leaves the non-client area of the window specified in a prior call to TrackMouseEvent.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Core.WindowMessages.WM_NCMOUSEMOVE">
            <summary>
            Posted to a window when the cursor is moved within the non-client area of the window. This message is posted to the window that contains the cursor. If a window has captured the mouse, this message is not posted.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Core.WindowMessages.WM_NCRBUTTONDBLCLK">
            <summary>
            Posted when the user double-clicks the right mouse button while the cursor is within the non-client area of a window. This message is posted to the window that contains the cursor. If a window has captured the mouse, this message is not posted.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Core.WindowMessages.WM_NCRBUTTONDOWN">
            <summary>
            Posted when the user presses the right mouse button while the cursor is within the non-client area of a window. This message is posted to the window that contains the cursor. If a window has captured the mouse, this message is not posted.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Core.WindowMessages.WM_NCRBUTTONUP">
            <summary>
            Posted when the user releases the right mouse button while the cursor is within the non-client area of a window. This message is posted to the window that contains the cursor. If a window has captured the mouse, this message is not posted.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Core.WindowMessages.WM_NEXTDLGCTL">
            <summary>
            Sent to a dialog box procedure to set the keyboard focus to a different control in the dialog box.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Core.WindowMessages.WM_NEXTMENU">
            <summary>
            Sent to an application when the right or left arrow key is used to switch between the menu bar and the system menu.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Core.WindowMessages.WM_NOTIFY">
            <summary>
            Sent by a common control to its parent window when an event has occurred or the control requires some information.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Core.WindowMessages.WM_NOTIFYFORMAT">
            <summary>
            Determines if a window accepts ANSI or Unicode structures in the WM_NOTIFY notification message. WM_NOTIFYFORMAT messages are sent from a common control to its parent window and from the parent window to the common control.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Core.WindowMessages.WM_NULL">
            <summary>
            Performs no operation. An application sends the WM_NULL message if it wants to post a message that the recipient window will ignore.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Core.WindowMessages.WM_PALETTECHANGED">
            <summary>
            The WM_PALETTECHANGED message is sent to all top-level and overlapped windows after the window with the keyboard focus has realized its logical palette, thereby changing the system palette. This message enables a window that uses a color palette but does not have the keyboard focus to realize its logical palette and update its client area.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Core.WindowMessages.WM_PALETTEISCHANGING">
            <summary>
            The WM_PALETTEISCHANGING message informs applications that an application is going to realize its logical palette.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Core.WindowMessages.WM_PARENTNOTIFY">
            <summary>
            Sent to a window when a significant action occurs on a descendant window. This message is now extended to include the WM_POINTERDOWN event. When the child window is being created, the system sends WM_PARENTNOTIFY just before the CreateWindow or CreateWindowEx function that creates the window returns. When the child window is being destroyed, the system sends the message before any processing to destroy the window takes place.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Core.WindowMessages.WM_PASTE">
            <summary>    
            An application sends a WM_PASTE message to an edit control or combo box to copy the current content of the clipboard to the edit control at the current caret position. Data is inserted only if the clipboard contains data in CF_TEXT format.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Core.WindowMessages.WM_PENWINFIRST">
            <summary>
            The pend that creates first for the drawing.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Core.WindowMessages.WM_PENWINLAST">
            <summary>
            The pend that creates last for the drawing.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Core.WindowMessages.WM_POWER">
            <summary>
            Notifies applications that the system, typically a battery-powered personal computer, is about to enter a suspended mode.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Core.WindowMessages.WM_POWERBROADCAST">
            <summary>
            Notifies applications that a power-management event has occurred.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Core.WindowMessages.WM_PRINT">
            <summary>
            The WM_PRINT message is sent to a window to request that it draw itself in the specified device context, most commonly in a printer device context.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Core.WindowMessages.WM_PRINTCLIENT">
            <summary>
            The WM_PRINTCLIENT message is sent to a window to request that it draw its client area in the specified device context, most commonly in a printer device context.
            Unlike WM_PRINT, WM_PRINTCLIENT is not processed by DefWindowProc. A window should process the WM_PRINTCLIENT message through an application-defined WindowProc function for it to be used properly.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Core.WindowMessages.WM_PSD_ENVSTAMPRECT">
            <summary>
            Notifies the hook procedure of a Page Setup dialog box, PagePaintHook, that the dialog box is about to draw the envelope-stamp rectangle of the sample page.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Core.WindowMessages.WM_PSD_FULLPAGERECT">
            <summary>
            Notifies a PagePaintHook hook procedure of the coordinates of the sample page rectangle in the Page Setup dialog box. The dialog box sends this message when it is about to draw the contents of the sample page.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Core.WindowMessages.WM_PSD_GREEKTEXTRECT">
            <summary>
            Notifies the hook procedure of a Page Setup dialog box, PagePaintHook, that the dialog box is about to draw Greek text inside the margin rectangle of the sample page.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Core.WindowMessages.WM_PSD_MARGINRECT">
            <summary>
            Notifies the hook procedure of a Page Setup dialog box, PagePaintHook, that the dialog box is about to draw the margin rectangle of the sample page.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Core.WindowMessages.WM_PSD_MINMARGINRECT">
            <summary>
            Notifies a PagePaintHook hook procedure of the coordinates of the margin rectangle in the sample page. A Page Setup dialog box sends this message when it is about to draw the contents of the sample page.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Core.WindowMessages.WM_PSD_PAGESETUPDLG">
            <summary>
            Notifies a PagePaintHook hook procedure that the Page Setup dialog box is about to draw the contents of the sample page. The hook procedure can use this message to carry out initialization tasks related to drawing the contents of the sample page.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Core.WindowMessages.WM_PSD_YAFULLPAGERECT">
            <summary>
            Notifies the hook procedure of a Page Setup dialog box, PagePaintHook, that the dialog box is about to draw the return address portion of an envelope sample page.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Core.WindowMessages.WM_QUERYDRAGICON">
            <summary>
            Sent to a minimized (iconic) window. The window is about to be dragged by the user but does not have an icon defined for its class. An application can return a handle to an icon or cursor. The system displays this cursor or icon while the user drags the icon.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Core.WindowMessages.WM_QUERYENDSESSION">
            <summary>
            The WM_QUERYENDSESSION message is sent when the user chooses to end the session or when an application calls one of the system shutdown functions. If any application returns zero, the session is not ended. The system stops sending WM_QUERYENDSESSION messages as soon as one application returns zero.
            After processing this message, the system sends the WM_ENDSESSION message with the wParam parameter set to the results of the WM_QUERYENDSESSION message.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Core.WindowMessages.WM_QUERYNEWPALETTE">
            <summary>
            The WM_QUERYNEWPALETTE message informs a window that it is about to receive the keyboard focus, giving the window the opportunity to realize its logical palette when it receives the focus.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Core.WindowMessages.WM_QUERYOPEN">
            <summary>
            Sent to an icon when the user requests that the window be restored to its previous size and position.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Core.WindowMessages.WM_QUERYUISTATE">
            <summary>
            An application sends the WM_QUERYUISTATE message to retrieve the UI state for a window.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Core.WindowMessages.WM_QUEUESYNC">
            <summary>
            Sent by a computer-based training (CBT) application to separate user-input messages from other messages sent through the WH_JOURNALPLAYBACK procedure.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Core.WindowMessages.WM_QUIT">
            <summary>
            Indicates a request to terminate an application, and is generated when the application calls the PostQuitMessage function. This message causes the GetMessage function to return zero.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Core.WindowMessages.WM_RBUTTONDBLCLK">
            <summary>
            Posted when the user double-clicks the right mouse button while the cursor is in the client area of a window. If the mouse is not captured, the message is posted to the window beneath the cursor. Otherwise, the message is posted to the window that has captured the mouse. 
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Core.WindowMessages.WM_RBUTTONDOWN">
            <summary>
            Posted when the user presses the right mouse button while the cursor is in the client area of a window. If the mouse is not captured, the message is posted to the window beneath the cursor. Otherwise, the message is posted to the window that has captured the mouse.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Core.WindowMessages.WM_RBUTTONUP">
            <summary>
            Posted when the user releases the right mouse button while the cursor is in the client area of a window. If the mouse is not captured, the message is posted to the window beneath the cursor. Otherwise, the message is posted to the window that has captured the mouse.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Core.WindowMessages.WM_RENDERALLFORMATS">
            <summary>
            Sent to the clipboard owner before it is destroyed, if the clipboard owner has delayed rendering one or more clipboard formats. For the content of the clipboard to remain available to other applications, the clipboard owner must render data in all the formats it is capable of generating, and place the data on the clipboard by calling the SetClipboardData function.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Core.WindowMessages.WM_RENDERFORMAT">
            <summary>
            Sent to the clipboard owner if it has delayed rendering a specific clipboard format and if an application has requested data in that format. The clipboard owner must render data in the specified format and place it on the clipboard by calling the SetClipboardData function.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Core.WindowMessages.WM_SETCURSOR">
            <summary>
            Sent to a window if the mouse causes the cursor to move within a window and mouse input is not captured.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Core.WindowMessages.WM_SETFOCUS">
            <summary>
            Sent to a window after it has gained the keyboard focus.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Core.WindowMessages.WM_SETFONT">
            <summary>
            Sets the font that a control is to use when drawing text.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Core.WindowMessages.WM_SETHOTKEY">
            <summary>
            Sent to a window to associate a hot key with the window. When the user presses the hot key, the system activates the window.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Core.WindowMessages.WM_SETICON">
            <summary>
            Associates a new large or small icon with a window. The system displays the large icon in the ALT+TAB dialog box, and the small icon in the window caption.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Core.WindowMessages.WM_SETTEXT">
            <summary>
            Sets the text of a window.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Core.WindowMessages.WM_SETTINGCHANGE">
            <summary>
            A message that is sent to all top-level windows when the SystemParametersInfo function changes a system-wide setting or when policy settings have changed.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Core.WindowMessages.WM_SHOWWINDOW">
            <summary>
            Sent to a window when the window is about to be hidden or shown.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Core.WindowMessages.WM_SIZE">
            <summary>
            Sent to a window after its size has changed.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Core.WindowMessages.WM_SIZECLIPBOARD">
            <summary>
            Sent to the clipboard owner by a clipboard viewer window when the clipboard contains data in the CF_OWNERDISPLAY format and the clipboard viewer's client area has changed size.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Core.WindowMessages.WM_SIZING">
            <summary>
            Sent to a window that the user is resizing. By processing this message, an application can monitor the size and position of the drag rectangle and, if needed, change its size or position.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Core.WindowMessages.WM_SPOOLERSTATUS">
            <summary>
            The WM_SPOOLERSTATUS message is sent from Print Manager whenever a job is added to or removed from the Print Manager queue.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Core.WindowMessages.WM_STYLECHANGED">
            <summary>
            Sent to a window after the SetWindowLong function has changed one or more of the window's styles.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Core.WindowMessages.WM_STYLECHANGING">
            <summary>
            Sent to a window when the SetWindowLong function is about to change one or more of the window's styles.
            </summary>      
        </member>
        <member name="F:Syncfusion.WinForms.Core.WindowMessages.WM_SYSCHAR">
            <summary>
            Posted to the window with the keyboard focus when a WM_SYSKEYDOWN message is translated by the TranslateMessage function. It specifies the character code of a system character key — that is, a character key that is pressed while the ALT key is down.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Core.WindowMessages.WM_SYSCOLORCHANGE">
            <summary>
            The WM_SYSCOLORCHANGE message is sent to all top-level windows when a change is made to a system color setting.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Core.WindowMessages.WM_SYSCOMMAND">
            <summary>
            A window receives this message when the user chooses a command from the Window menu (formerly known as the system or control menu) or when the user chooses the maximize button, minimize button, restore button, or close button.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Core.WindowMessages.WM_SYSDEADCHAR">
            <summary>
            Sent to the window with the keyboard focus when a WM_SYSKEYDOWN message is translated by the TranslateMessage function. WM_SYSDEADCHAR specifies the character code of a system dead key — that is, a dead key that is pressed while holding down the ALT key.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Core.WindowMessages.WM_SYSKEYDOWN">
            <summary>
            Posted to the window with the keyboard focus when the user presses the F10 key (which activates the menu bar) or holds down the ALT key and then presses another key. It also occurs when no window currently has the keyboard focus; in this case, the WM_SYSKEYDOWN message is sent to the active window. The window that receives the message can distinguish between these two contexts by checking the context code in the lParam parameter.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Core.WindowMessages.WM_SYSKEYUP">
            <summary>
            Posted to the window with the keyboard focus when the user releases a key that was pressed while the ALT key was held down. It also occurs when no window currently has the keyboard focus; in this case, the WM_SYSKEYUP message is sent to the active window. The window that receives the message can distinguish between these two contexts by checking the context code in the lParam parameter.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Core.WindowMessages.WM_TCARD">
            <summary>
            Sent to an application that has initiated a training card with Windows Help. The message informs the application when the user clicks an authorable button. An application initiates a training card by specifying the HELP_TCARD command in a call to the WinHelp function.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Core.WindowMessages.WM_TIMECHANGE">
            <summary>
            A message that is sent whenever there is a change in the system time.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Core.WindowMessages.WM_TIMER">
            <summary>
            Posted to the installing thread's message queue when a timer expires. The message is posted by the GetMessage or PeekMessage function.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Core.WindowMessages.WM_UNDO">
            <summary>
            An application sends a WM_UNDO message to an edit control to undo the last operation. When this message is sent to an edit control, the previously deleted text is restored or the previously added text is deleted.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Core.WindowMessages.WM_UPDATEUISTATE">
            <summary>
            An application sends the WM_UPDATEUISTATE message to change the UI state for the specified window and all its child windows.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Core.WindowMessages.WM_USER">
            <summary>
            Used to define private messages for use by private window classes, usually of the form WM_USER+x, where x is an integer value.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Core.WindowMessages.WM_USERCHANGED">
            <summary>
            Sent to all windows after the user has logged on or off. When the user logs on or off, the system updates the user-specific settings. The system sends this message immediately after updating the settings.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Core.WindowMessages.WM_VKEYTOITEM">
            <summary>
            Sent by a list box with the LBS_WANTKEYBOARDINPUT style to its owner in response to a WM_KEYDOWN message.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Core.WindowMessages.WM_WINDOWPOSCHANGED">
            <summary>
            Sent to a window whose size, position, or place in the Z order has changed as a result of a call to the SetWindowPos function or another window-management function.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Core.WindowMessages.WM_WINDOWPOSCHANGING">
            <summary>
            Sent to a window whose size, position, or place in the Z order is about to change as a result of a call to the SetWindowPos function or another window-management function.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Core.WindowMessages.WM_WININICHANGE">
            <summary>
            An application sends the WM_WININICHANGE message to all top-level windows after making a change to the WIN.INI file. The SystemParametersInfo function sends this message after an application uses the function to change a setting in WIN.INI.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Core.WindowMessages.WS_OVERLAPPED">
            <summary>
            The window is an overlapped window. An overlapped window has a title bar and a border. Same as the WS_TILED style.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Core.WindowMessages.WS_POPUP">
            <summary>
            The windows is a pop-up window. This style cannot be used with the WS_CHILD style.
            </summary>      
        </member>
        <member name="F:Syncfusion.WinForms.Core.WindowMessages.WS_CHILD">
            <summary>
            The window is a child window. A window with this style cannot have a menu bar. This style cannot be used with the WS_POPUP style.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Core.WindowMessages.WS_MINIMIZE">
            <summary>
            The window is initially minimized. Same as the WS_ICONIC style.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Core.WindowMessages.WS_VISIBLE">
            <summary>
            The window is initially visible.
            This style can be turned on and off by using the ShowWindow or SetWindowPos function.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Core.WindowMessages.WS_DISABLED">
            <summary>
            The window is initially disabled. A disabled window cannot receive input from the user. To change this after a window has been created, use the EnableWindow function.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Core.WindowMessages.WS_CLIPSIBLINGS">
            <summary>
            Clips child windows relative to each other; that is, when a particular child window receives a WM_PAINT message, the WS_CLIPSIBLINGS style clips all other overlapping child windows out of the region of the child window to be updated. If WS_CLIPSIBLINGS is not specified and child windows overlap, it is possible, when drawing within the client area of a child window, to draw within the client area of a neighboring child window.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Core.WindowMessages.WS_CLIPCHILDREN">
            <summary>
            Excludes the area occupied by child windows when drawing occurs within the parent window. This style is used when creating the parent window.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Core.WindowMessages.WS_MAXIMIZE">
            <summary>
            The window is initially maximized.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Core.WindowMessages.WS_CAPTION">
            <summary>
            The window has a title bar (includes the WS_BORDER style).
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Core.WindowMessages.WS_BORDER">
            <summary>
            The window has a thin-line border.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Core.WindowMessages.WS_DLGFRAME">
            <summary>
            The window has a border of a style typically used with dialog boxes. A window with this style cannot have a title bar.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Core.WindowMessages.WS_VSCROLL">
            <summary>
            The window has a vertical scroll bar.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Core.WindowMessages.WS_HSCROLL">
            <summary>
            The window has a horizontal scroll bar.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Core.WindowMessages.WS_SYSMENU">
            <summary>
            The window has a window menu on its title bar. The WS_CAPTION style must also be specified.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Core.WindowMessages.WS_THICKFRAME">
            <summary>
            The window has a sizing border. Same as the WS_SIZEBOX style.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Core.WindowMessages.WS_TABSTOP">
            <summary>
            The window is a control that can receive the keyboard focus when the user presses the TAB key. Pressing the TAB key changes the keyboard focus to the next control with the WS_TABSTOP style.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Core.WindowMessages.WS_MINIMIZEBOX">
            <summary>
            The window has a minimize button. Cannot be combined with the WS_EX_CONTEXTHELP style. The WS_SYSMENU style must also be specified.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Core.WindowMessages.WS_MAXIMIZEBOX">
            <summary>
            The window has a maximize button. Cannot be combined with the WS_EX_CONTEXTHELP style. The WS_SYSMENU style must also be specified.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Core.WindowMessages.WS_EX_DLGMODALFRAME">
            <summary>
            The window has a double border; the window can, optionally, be created with a title bar by specifying the WS_CAPTION style in the dwStyle parameter.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Core.WindowMessages.WS_EX_MDICHILD">
            <summary>
            The window is a MDI child window.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Core.WindowMessages.WS_EX_TOOLWINDOW">
            <summary>
            The window is intended to be used as a floating toolbar. A tool window has a title bar that is shorter than a normal title bar, and the window title is drawn using a smaller font. A tool window does not appear in the taskbar or in the dialog that appears when the user presses ALT+TAB. If a tool window has a system menu, its icon is not displayed on the title bar. However, you can display the system menu by right-clicking or by typing ALT+SPACE.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Core.WindowMessages.WS_EX_CLIENTEDGE">
            <summary>
            The window has a border with a sunken edge.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Core.WindowMessages.WS_EX_CONTEXTHELP">
            <summary>
            The title bar of the window includes a question mark. When the user clicks the question mark, the cursor changes to a question mark with a pointer. If the user then clicks a child window, the child receives a WM_HELP message. The child window should pass the message to the parent window procedure, which should call the WinHelp function using the HELP_WM_HELP command. The Help application displays a pop-up window that typically contains help for the child window.
            WS_EX_CONTEXTHELP cannot be used with the WS_MAXIMIZEBOX or WS_MINIMIZEBOX styles. 
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Core.WindowMessages.WS_EX_RIGHT">
            <summary>      
            The window has generic "right-aligned" properties. This depends on the window class. This style has an effect only if the shell language is Hebrew, Arabic, or another language that supports reading-order alignment; otherwise, the style is ignored.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Core.WindowMessages.WS_EX_LEFT">
            <summary>
            The window has generic left-aligned properties. This is the default.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Core.WindowMessages.WS_EX_RTLREADING">
            <summary>
            If the shell language is Hebrew, Arabic, or another language that supports reading-order alignment, the window text is displayed using right-to-left reading-order properties. For other languages, the style is ignored.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Core.WindowMessages.WS_EX_LEFTSCROLLBAR">
            <summary>
            If the shell language is Hebrew, Arabic, or another language that supports reading order alignment, the vertical scroll bar (if present) is to the left of the client area. For other languages, the style is ignored.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Core.WindowMessages.WS_EX_CONTROLPARENT">
            <summary>
            The window itself contains child windows that should take part in dialog box navigation. If this style is specified, the dialog manager recursive into children of this window when performing navigation operations such as handling the TAB key, an arrow key, or a keyboard mnemonic.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Core.WindowMessages.WS_EX_STATICEDGE">
            <summary>
            The window has a three-dimensional border style intended to be used for items that do not accept user input.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Core.WindowMessages.WS_EX_APPWINDOW">
            <summary>
            Forces a top-level window onto the task-bar when the window is visible.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Core.WindowMessages.WS_EX_LAYERED">
            <summary>
            The window is a layered window. This style cannot be used if the window has a class style of either CS_OWNDC or CS_CLASSDC.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Core.WindowMessages.WS_EX_TOPMOST">
            <summary>
            The window should be placed above all non-topmost windows and should stay above them, even when the window is deactivated. To add or remove this style, use the SetWindowPos function.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Core.WindowMessages.WS_EX_WINDOWEDGE">
            <summary>
            The window has a border with a raised edge.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Core.WindowMessages.WS_EX_NOINHERITLAYOUT">
            <summary>
            The window has a border with a raised edge.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Core.WindowMessages.WS_EX_LAYOUTRTL">
            <summary>
            If the shell language is Hebrew, Arabic, or another language that supports reading order alignment, the horizontal origin of the window is on the right edge. Increasing horizontal values advance to the left.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Core.WindowMessages.SC_SIZE">
            <summary>
            Sizes the window.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Core.WindowMessages.SC_MOVE">
            <summary>
            Moves the window.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Core.WindowMessages.SC_MINIMIZE">
            <summary>
            Minimizes the window.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Core.WindowMessages.SC_MAXIMIZE">
            <summary>
            Maximizes the window.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Core.WindowMessages.SC_CLOSE">
            <summary>
            Closes the window.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Core.WindowMessages.SC_MOUSEMENU">
            <summary>
            Retrieves the window menu as a result of a mouse click.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Core.WindowMessages.SC_KEYMENU">
            <summary>
            Retrieves the window menu as a result of a keystroke. For more information, see the Remarks section.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Core.WindowMessages.SC_RESTORE">
            <summary>
            Restores the window to its normal position and size.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Core.WindowMessages.SC_CONTEXTHELP">
            <summary>
            Changes the cursor to a question mark with a pointer. If the user then clicks a control in the dialog box, the control receives a WM_HELP message.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Core.WindowMessages.SC_DEFAULT">
            <summary>
            Selects the default item; the user double-clicked the window menu.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Core.WindowMessages.SC_HOTKEY">
            <summary>
            Activates the window associated with the application-specified hot key. The lParam parameter identifies the window to activate.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Core.WindowMessages.BFFM_ENABLEOK">
            <summary>
            This message enables or disables the OK button for the Browse For Folder dialog box.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Core.WindowMessages.BFFM_SETSELECTION">
            <summary>
            This message indicates that the selection in the dialog box changed.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Core.WindowMessages.BFFM_SETSTATUSTEXTW">
            <summary>
            This message sets the status text in the Browse For Folder dialog box.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Core.WindowMessages.BFFM_SETOKTEXT">
            <summary>
            Sets the text that is displayed on the dialog box's OK button.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Core.WindowMessages.BFFM_SETEXPANDED">
            <summary>
            Specifies the path of a folder to expand in the Browse dialog box. The path can be specified as a Unicode string or a PIDL.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Core.WindowMessages.BFFM_INITIALIZED">
            <summary>
            The dialog box has finished initializing.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Core.WindowMessages.BFFM_SELCHANGED">
            <summary>
            This message indicates that the selection in the dialog box changed.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Core.WindowMessages.BFFM_VALIDATEFAILEDW">
            <summary>
            The user typed an invalid name into the dialog's edit box. A nonexistent folder is considered an invalid name.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Core.WindowMessages.BFFM_IUNKNOWN">
            <summary>
            An IUnknown interface is available to the dialog box.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Core.WindowMessages.GW_HWNDFIRST">
            <summary>
            The retrieved handle identifies the window of the same type that is highest in the Z order.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Core.WindowMessages.GW_HWNDLAST">
            <summary>
            The retrieved handle identifies the window of the same type that is lowest in the Z order.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Core.WindowMessages.GW_HWNDNEXT">
            <summary>
            The retrieved handle identifies the window below the specified window in the Z order.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Core.WindowMessages.GW_HWNDPREV">
            <summary>
            The retrieved handle identifies the window above the specified window in the Z order.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Core.WindowMessages.GW_OWNER">
            <summary>
            The retrieved handle identifies the specified window's owner window, if any. For more information, see Owned Windows.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Core.WindowMessages.GW_CHILD">
            <summary>    
            The retrieved handle identifies the child window at the top of the Z order, if the specified window is a parent window; otherwise, the retrieved handle is NULL. The function examines only child windows of the specified window. It does not examine descendant windows.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Core.WindowMessages.GW_ENABLEDPOPUP">
            <summary>
            The retrieved handle identifies the enabled popup window owned by the specified window (the search uses the first such window found using GW_HWNDNEXT); otherwise, if there are no enabled popup windows, the retrieved handle is that of the specified window.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Core.WindowMessages.GWL_WNDPROC">
            <summary>
            Sets a new address for the window procedure.
            You cannot change this attribute if the window does not belong to the same process as the calling thread.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Core.WindowMessages.GWL_HWNDPARENT">
            <summary>
            Index to change the parent of a child window.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Core.WindowMessages.GWL_STYLE">
            <summary>
            Sets a new window style. 
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Core.WindowMessages.GWL_EXSTYLE">
            <summary>
            Sets a new extended window style.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Core.WindowMessages.GWL_ID">
            <summary>
            Sets a new identifier of the child window. The window cannot be a top-level window.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Core.WindowMessages.CS_DROPSHADOW">
            <summary>
            Enables the drop shadow effect on a window. 
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Core.WindowMessages.SRCCOPY">
            <summary>
            Copies the source rectangle directly to the destination rectangle.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Core.WindowMessages.DCX_WINDOW">
            <summary>
            Returns a DC that corresponds to the window rectangle rather than the client rectangle.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Core.WindowMessages.DCX_CACHE">
            <summary>
            Returns a DC from the cache, rather than the OWNDC or CLASSDC window. Essentially overrides CS_OWNDC and CS_CLASSDC.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Core.WindowMessages.DCX_INTERSECTRGN">
            <summary>
            The clipping region identified by hrgnClip is intersected with the visible region of the returned DC.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Core.WindowMessages.DCX_LOCKWINDOWUPDATE">
            <summary>
            Allows drawing even if there is a LockWindowUpdate call in effect that would otherwise exclude this window. Used for drawing during tracking.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Core.WindowMessages.DCX_PARENTCLIP">
            <summary>
            Uses the visible region of the parent window. The parent's WS_CLIPCHILDREN and CS_PARENTDC style bits are ignored. The origin is set to the upper-left corner of the window identified by hWnd.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Core.WindowMessages.DCX_CLIPSIBLINGS">
            <summary>
            Excludes the visible regions of all sibling windows above the window identified by hWnd.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Core.WindowMessages.DCX_CLIPCHILDREN">
            <summary>
            Excludes the visible regions of all child windows below the window identified by hWnd.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Core.WindowMessages.DCX_EXCLUDERGN">
            <summary>
            The clipping region identified by hrgnClip is excluded from the visible region of the returned DC.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Core.WindowMessages.RGN_AND">
            <summary>
            Creates the intersection of the two combined regions.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Core.WindowMessages.RGN_OR">
            <summary>
            Creates the union of two combined regions.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Core.WindowMessages.RGN_XOR">
            <summary>
            Creates the union of two combined regions except for any overlapping areas.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Core.WindowMessages.RGN_DIFF">
            <summary>
            Combines the parts of hrgnSrc1 that are not part of hrgnSrc2.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Core.WindowMessages.RGN_COPY">
            <summary>
            Creates a copy of the region identified by hrgnSrc1.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Core.WindowMessages.EM_GETRECT">
            <summary>
            Gets the formatting rectangle of an edit control. 
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Core.WindowMessages.EM_CHARFROMPOS">
            <summary>
            Gets information about the character closest to a specified point in the client area of an edit control.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Core.WindowMessages.QS_KEY">
            <summary>
            A WM_KEYUP, WM_KEYDOWN, WM_SYSKEYUP, or WM_SYSKEYDOWN message is in the queue.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Core.WindowMessages.QS_MOUSEMOVE">
            <summary>
            A WM_MOUSEMOVE message is in Queue.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Core.WindowMessages.QS_MOUSEBUTTON">
            <summary>
             A mouse-button message (WM_LBUTTONUP, WM_RBUTTONDOWN, and so on).
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Core.WindowMessages.QS_POSTMESSAGE">
            <summary>
            A posted message (other than those listed here) is in the queue.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Core.WindowMessages.QS_TIMER">
            <summary>
            A WM_TIMER message is in the queue.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Core.WindowMessages.QS_PAINT">
            <summary>
            A WM_PAINT message is in the queue.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Core.WindowMessages.QS_SENDMESSAGE">
            <summary>
            A message sent by another thread or application is in the queue.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Core.WindowMessages.QS_HOTKEY">
            <summary>
            A WM_HOTKEY message is in the queue.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Core.WindowMessages.QS_ALLPOSTMESSAGE">
            <summary>
            A posted message (other than those listed here) is in the queue.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Core.WindowMessages.QS_RAWINPUT">
            <summary>
            A raw input message is in the queue. For more information, see Raw Input.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Core.WindowMessages.QS_MOUSE">
            <summary>
            A WM_MOUSEMOVE message or mouse-button message (WM_LBUTTONUP, WM_RBUTTONDOWN, and so on).
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Core.WindowMessages.QS_INPUT">
            <summary>
            An input message is in the queue.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Core.WindowMessages.QS_ALLEVENTS">
            <summary>
            An input, WM_TIMER, WM_PAINT, WM_HOTKEY, or posted message is in the queue.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Core.WindowMessages.QS_ALLINPUT">
            <summary>
            Any message is in the queue.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Core.WindowMessages.WAIT_OBJECT_0">
            <summary>
            The state of the specified object is signaled.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Core.WindowMessages.WAIT_TIMEOUT">
            <summary>
            The time-out interval elapsed, and the object's state is non-signaled.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Core.WindowMessages.INFINITE">
            <summary>
            A constant used to specify an infinite waiting period, for threading methods that accept an Int32 parameter.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Core.WindowMessages.SWP_NOSIZE">
            <summary>
            Retains the current size (ignores the cx and cy parameters).
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Core.WindowMessages.SWP_NOMOVE">
            <summary>
            Retains the current position (ignores X and Y parameters).
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Core.WindowMessages.SWP_NOZORDER">
            <summary>
            Retains the current Z order (ignores the hWndInsertAfter parameter).
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Core.WindowMessages.SWP_NOREDRAW">
            <summary>
            Does not redraw changes. If this flag is set, no repainting of any kind occurs. This applies to the client area, the non-client area (including the title bar and scroll bars), and any part of the parent window uncovered as a result of the window being moved. When this flag is set, the application must explicitly invalidate or redraw any parts of the window and parent window that need redrawing.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Core.WindowMessages.SWP_NOACTIVATE">
            <summary>
            Does not activate the window. If this flag is not set, the window is activated and moved to the top of either the topmost or non-topmost group (depending on the setting of the hWndInsertAfter parameter).
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Core.WindowMessages.SWP_FRAMECHANGED">
            <summary>
            Applies new frame styles set using the SetWindowLong function. Sends a WM_NCCALCSIZE message to the window, even if the window's size is not being changed. If this flag is not specified, WM_NCCALCSIZE is sent only when the window's size is being changed.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Core.WindowMessages.SWP_SHOWWINDOW">
            <summary>
            Displays the window.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Core.WindowMessages.SWP_HIDEWINDOW">
            <summary>
            Hides the window.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Core.WindowMessages.SWP_NOCOPYBITS">
            <summary>
            Discards the entire contents of the client area. If this flag is not specified, the valid contents of the client area are saved and copied back into the client area after the window is sized or repositioned.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Core.WindowMessages.SWP_NOOWNERZORDER">
            <summary>
            Does not change the owner window's position in the Z order.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Core.WindowMessages.SWP_NOSENDCHANGING">
            <summary>
            Prevents the window from receiving the WM_WINDOWPOSCHANGING message.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Core.WindowMessages.ABM_GETTASKBARPOS">
            <summary>
            Retrieves the bounding rectangle of the Windows task bar.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Core.WindowMessages.SPI_GETWORKAREA">
            <summary>
            Retrieves the size of the work area on the primary display monitor. 
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Core.WindowMessages.ABE_BOTTOM">
            <summary>
            Bottom edge.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Core.WindowMessages.ABE_LEFT">
            <summary>
            Left edge.
            </summary>        
        </member>
        <member name="F:Syncfusion.WinForms.Core.WindowMessages.ABE_RIGHT">
            <summary>     
            Right edge.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Core.WindowMessages.ABE_TOP">
            <summary>
            Top edge.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Core.WindowMessages.DVASPECT_CONTENT">
            <summary>
            Provides a representation of an object so it can be displayed as an embedded object inside of a container. 
            This value is typically specified for compound document objects. 
            The presentation can be provided for the screen or printer.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Core.WindowMessages.DVASPECT_TRANSPARENT">
            <summary>
            Represents the transparent or irregular parts of on object, typically parts that are expensive or impossible to clip out. 
            Objects may or may not support this aspect.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Core.WindowMessages.DVASPECT_OPAQUE">
            <summary>
            Represents the opaque, easy to clip parts of an object. Objects may or may not support this aspect.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Core.WindowMessages.BITSPIXEL">
            <summary>
            Represents the bits per pixel.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Core.WindowMessages.LOGPIXELSX">
            <summary>
            Represents the adding of pixel in horizontal.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Core.WindowMessages.LOGPIXELSY">
            <summary>
             Represents the adding of pixel in vertical.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Core.WindowMessages.PLANES">
            <summary>
             Represents the planes.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Core.WindowMessages.MA_ACTIVATE">
            <summary>
            Activates the window, and does not discard the mouse message.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Core.WindowMessages.MA_ACTIVATEANDEAT">
            <summary>
            Activates the window, and discards the mouse message.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Core.WindowMessages.MA_NOACTIVATE">
            <summary>
            Does not activate the window, and does not discard the mouse message.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Core.WindowMessages.MA_NOACTIVATEANDEAT">
            <summary>
            Does not activate the window, but discards the mouse message.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Core.WindowMessages.HTERROR">
            <summary>
            On the screen background or on a dividing line between windows (same as HTNOWHERE, except that the DefWindowProc function produces a system beep to indicate an error).
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Core.WindowMessages.HTNOWHERE">
            <summary>
            On the screen background or on a dividing line between windows.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Core.WindowMessages.HTCLIENT">
            <summary>
            In a client area.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Core.WindowMessages.HTCAPTION">
            <summary>
            In a title bar.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Core.WindowMessages.HTSYSMENU">
            <summary>
            In a window menu or in a Close button in a child window.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Core.WindowMessages.HTGROWBOX">
            <summary>
            In a size box (same as HTSIZE).
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Core.WindowMessages.HTMENU">
            <summary>
            In a menu.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Core.WindowMessages.HTMINBUTTON">
            <summary>
            In a Minimize button.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Core.WindowMessages.HTMAXBUTTON">
            <summary>
            In a Maximize button.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Core.WindowMessages.HTBOTTOMLEFT">
            <summary>
            In the lower-left corner of a border of a re-sizable window (the user can click the mouse to resize the window diagonally).
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Core.WindowMessages.HTBOTTOMRIGHT">
            <summary>
            In the lower-right corner of a border of a re-sizable window (the user can click the mouse to resize the window diagonally).
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Core.WindowMessages.HTBOTTOM">
            <summary>
            In the lower corner of a border of a re-sizable window (the user can click the mouse to resize the window diagonally).
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Core.WindowMessages.HTRIGHT">
            <summary>
            In the right corner of a border of a re-sizable window (the user can click the mouse to resize the window diagonally).
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Core.WindowMessages.HTTOP">
            <summary>
            In the top corner of a border of a re-sizable window (the user can click the mouse to resize the window diagonally).
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Core.WindowMessages.HTTOPLEFT">
            <summary>
            In the top-left corner of a border of a re-sizable window (the user can click the mouse to resize the window diagonally).
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Core.WindowMessages.HTTOPRIGHT">
            <summary>
            In the top-right corner of a border of a re-sizable window (the user can click the mouse to resize the window diagonally).
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Core.WindowMessages.HTLEFT">
            <summary>
            In the left corner of a border of a re-sizable window (the user can click the mouse to resize the window diagonally).
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Core.WindowMessages.HTBORDER">
            <summary>
            In the border of a window that does not have a sizing border.
            </summary>        
        </member>
        <member name="F:Syncfusion.WinForms.Core.WindowMessages.HTCLOSE">
            <summary>
            In a Close button.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Core.WindowMessages.HTHELP">
            <summary>
            In a Help button.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Core.WindowMessages.HWND_TOP">
            <summary>
            Places the window at the top of the Z order.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Core.WindowMessages.HWND_BOTTOM">
            <summary>
            Places the window at the bottom of the Z order. If the hWnd parameter identifies a topmost window, the window loses its topmost status and is placed at the bottom of all other windows.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Core.WindowMessages.HWND_TOPMOST">
            <summary>
            Places the window above all non-topmost windows. The window maintains its topmost position even when it is deactivated.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Core.WindowMessages.HWND_NOTOPMOST">
            <summary>
            Places the window above all non-topmost windows (that is, behind all topmost windows). This flag has no effect if the window is already a non-topmost window.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Core.WindowMessages.MK_LBUTTON">
            <summary>
            The left mouse button is down.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Core.WindowMessages.MK_RBUTTON">
            <summary>
            The right mouse button is down.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Core.WindowMessages.MK_SHIFT">
            <summary>
            The middle mouse button is down.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Core.WindowMessages.MK_CONTROL">
            <summary>
            The CTRL key is down.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Core.WindowMessages.MK_MBUTTON">
            <summary>
            The middle mouse button is down.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Core.WindowMessages.WA_INACTIVE">
            <summary>
            Indicates the deactivated.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Core.WindowMessages.WA_ACTIVE">
            <summary>
            Activated by some method other than a mouse click (for example, by a call to the SetActiveWindow function or by use of the keyboard interface to select the window).
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Core.WindowMessages.WA_CLICKACTIVE">
            <summary>
            Activated by a mouse click. 
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Core.WindowMessages.TME_LEAVE">
            <summary>
            A Notification is delivered as a WM_MOUSELEAVE message. 
            If the mouse is not over the specified window or area, 
            a leave notification is generated immediately and no further tracking is performed.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Core.WindowMessages.TME_NONCLIENT">
            <summary>
            If the mouse is hover on or leave from the non client areas 
            a notification is delivered as WM_NCMOUSEHOVER and WM_NCMOUSELEAVE messages.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Core.WindowMessages.SM_CXVSCROLL">
            <summary>
            The constant value for scroll.
            </summary>
        </member>
        <member name="T:Syncfusion.WinForms.Core.Utils.DpiAware">
            <summary>
            Represents a class that provides support to get the current DPI value and calculate the values based on the current DPI values.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Core.Utils.DpiAware.graphics">
            <summary>
            The <see cref="T:System.Drawing.Graphics"/> which is used to calculate the DPI value.
            </summary>
        </member>
        <member name="M:Syncfusion.WinForms.Core.Utils.DpiAware.GetImage(System.Reflection.Assembly,System.String,System.String)">
            <summary>
            Gets the image file from given assembly based on the DPI scaling factor.
            If the DPI scaling is greater than 175 then returns the high DPI image, otherwise returns the default image.
            </summary>
            <param name="assembly">The <see cref="T:System.Reflection.Assembly"/> used to read the image file.</param>
            <param name="folderPath">The string contains the folder path.</param>
            <param name="imageName">The string value represents the name of the image file. 
            The imageName must contains the extension like AddNewRowIcon.png or AddNewRowIcon.bmp </param>
            <returns>Returns the image file from specified folder path.</returns>
        </member>
        <member name="M:Syncfusion.WinForms.Core.Utils.DpiAware.LogicalToDeviceUnits(System.Single)">
            <summary>
            Converts a logical DPI value to it's equivalent device unit DPI value.
            </summary>
            <param name="value">The logical value to convert.</param>
            <returns>Returns the equivalent device unit DPI value.</returns>
        </member>
        <member name="M:Syncfusion.WinForms.Core.Utils.DpiAware.GetCurrentDpi">
            <summary>
            Gets the current DPI value of the device.
            </summary>
            <returns>Returns the current DPI value of the device.</returns>
        </member>
        <member name="P:Syncfusion.WinForms.Core.Utils.DpiAware.Graphics">
            <summary>
            Gets the <see cref="P:Syncfusion.WinForms.Core.Utils.DpiAware.Graphics"/> used to calculate the DPI value of the device.
            </summary>
        </member>
        <member name="T:Syncfusion.WinForms.Core.Utils.TouchHelper">
            <summary>
            A helper class that provides various options to enable or disable the touch gestures for the control.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Core.Utils.TouchHelper.GestureConfigSize">
            <summary>
            Indicates the size of the GESTURECONFIG structure.
            </summary>
        </member>
        <member name="M:Syncfusion.WinForms.Core.Utils.TouchHelper.GetTouchPosition(System.Windows.Forms.Message,System.Windows.Forms.Control)">
            <summary>
            Gets the touch position of control when WM_GESTURENOTIFY message raises.
            </summary>
            <param name="message">The touch message.</param>
            <param name="control">The Control.</param>
            <returns>Returns the touch position.</returns>
        </member>
        <member name="M:Syncfusion.WinForms.Core.Utils.TouchHelper.DisableGestures(System.Windows.Forms.Control)">
            <summary>
            Disables the all touch gestures for the control.
            </summary>
            <param name="control">The control which need to disable the gesture.</param>
            <returns>Returns true when properly disabled all gestures, otherwise returns false.</returns>
        </member>
        <member name="M:Syncfusion.WinForms.Core.Utils.TouchHelper.DisableGestures(System.Windows.Forms.Control,Syncfusion.WinForms.Core.Enums.GestureOptions)">
            <summary>
            Disables the gestures for control based on the <see cref="T:Syncfusion.WinForms.Core.Enums.GestureOptions"/> information.
            </summary>
            <param name="control">The control which need to disable the gesture.</param>
            <param name="options">The gesture options.</param>
            <returns>Returns true when properly disabled the gestures mentioned in gesture options, otherwise returns false.</returns>
        </member>
        <member name="M:Syncfusion.WinForms.Core.Utils.TouchHelper.DisableGestures(System.Windows.Forms.Control,Syncfusion.WinForms.Core.Enums.GestureOptions,Syncfusion.WinForms.Core.Enums.PanningOptions)">
            <summary>
            Disables the gestures for control based on the <see cref="T:Syncfusion.WinForms.Core.Enums.GestureOptions"/> and <see cref="T:Syncfusion.WinForms.Core.Enums.PanningOptions"/> information.
            </summary>
            <param name="control">The control which need to disable the gesture.</param>
            <param name="options">The touch options.</param>
            <param name="panOptions">The panning options.</param>
            <returns>Returns true when properly disabled the gestures mentioned in touch options, otherwise returns false.</returns>
        </member>
        <member name="M:Syncfusion.WinForms.Core.Utils.TouchHelper.EnableGestures(System.Windows.Forms.Control)">
            <summary>
            Enables all the gestures for the given control.
            </summary>
            <param name="control">The control which need to enable the gesture.</param>
            <returns>Returns true when properly enabled the all gestures, otherwise returns false.</returns>
        </member>
        <member name="M:Syncfusion.WinForms.Core.Utils.TouchHelper.EnableGestures(System.Windows.Forms.Control,Syncfusion.WinForms.Core.Enums.GestureOptions)">
            <summary>
            Enables the gestures for control based on the <see cref="T:Syncfusion.WinForms.Core.Enums.GestureOptions"/> information.
            </summary>
            <param name="control">The control which need to enable the gesture.</param>
            <param name="options">The gesture options.</param>
            <returns>Returns true when properly enabled the gestures mentioned in gesture options, otherwise returns false.</returns>
        </member>
        <member name="M:Syncfusion.WinForms.Core.Utils.TouchHelper.EnableGestures(System.Windows.Forms.Control,Syncfusion.WinForms.Core.Enums.GestureOptions,Syncfusion.WinForms.Core.Enums.PanningOptions)">
            <summary>
            Enables the gestures for control based on the <see cref="T:Syncfusion.WinForms.Core.Enums.GestureOptions"/> and <see cref="T:Syncfusion.WinForms.Core.Enums.PanningOptions"/> information.
            </summary>
            <param name="control">The control which need to enable the gesture.</param>
            <param name="gestureOptions">The gesture options.</param>
            <param name="panOptions">The panning options.</param>
            <returns>Returns true when properly enabled the gestures mentioned in gesture options, otherwise returns false.</returns>
        </member>
        <member name="M:Syncfusion.WinForms.Core.Utils.TouchHelper.GetPanGestureConfig(System.Boolean)">
            <summary>
            Gets the gesture configuration information for panning gesture.
            </summary>
            <param name="enableGesture">The boolean values contains enable or disabled.</param>
            <returns>Returns the gesture configuration value for panning.</returns>
        </member>
        <member name="M:Syncfusion.WinForms.Core.Utils.TouchHelper.GetPanGestureConfig(Syncfusion.WinForms.Core.Enums.PanningOptions,System.Boolean)">
            <summary>
            Gets the gesture configuration information for panning gesture.
            </summary>
            <param name="panOptions">The panning options.</param>
            <param name="enableGesture">A value indicates the gesture configuration for enable or disable gesture.</param>
            <returns>Returns the gesture configuration information.</returns>
        </member>
        <member name="M:Syncfusion.WinForms.Core.Utils.TouchHelper.GetZoomGestureConfig(System.Boolean)">
            <summary>
            Gets the gesture configuration for the zooming gesture.
            </summary>
            <param name="enableGesture">A value indicates the gesture configuration for enable or disable gesture.</param>
            <returns>Returns the gesture configuration information.</returns>
        </member>
        <member name="M:Syncfusion.WinForms.Core.Utils.TouchHelper.GetRotateGestureConfig(System.Boolean)">
            <summary>
            Gets the gesture configuration for the rotate gesture.
            </summary>
            <param name="enableGesture">A value indicates the gesture configuration for enable or disable gesture.</param>
            <returns>Returns the gesture configuration information.</returns>
        </member>
        <member name="M:Syncfusion.WinForms.Core.Utils.TouchHelper.GetTwoFingerTapGestureConfig(System.Boolean)">
            <summary>
            Gets the gesture configuration for the two finger tap gesture.
            </summary>
            <param name="enableGesture">A value indicates the gesture configuration for enable or disable gesture.</param>
            <returns>Returns the gesture configuration information.</returns>
        </member>
        <member name="M:Syncfusion.WinForms.Core.Utils.TouchHelper.GetPressAndTapGestureConfig(System.Boolean)">
            <summary>
            Gets the gesture configuration for the press and tap gesture.
            </summary>
            <param name="enableGesture">A value indicates the gesture configuration for enable or disable gesture.</param>
            <returns>Returns the gesture configuration information.</returns>
        </member>
        <member name="T:Syncfusion.WinForms.Core.Resources.Syncfusion_Core_WinForms">
            <summary>
              A strongly-typed resource class, for looking up localized strings, etc.
            </summary>
        </member>
        <member name="P:Syncfusion.WinForms.Core.Resources.Syncfusion_Core_WinForms.ResourceManager">
            <summary>
              Returns the cached ResourceManager instance used by this class.
            </summary>
        </member>
        <member name="P:Syncfusion.WinForms.Core.Resources.Syncfusion_Core_WinForms.Culture">
            <summary>
              Overrides the current thread's CurrentUICulture property for all
              resource lookups using this strongly typed resource class.
            </summary>
        </member>
        <member name="P:Syncfusion.WinForms.Core.Resources.Syncfusion_Core_WinForms.ScrollBar_Bottom">
            <summary>
              Looks up a localized string similar to Bottom.
            </summary>
        </member>
        <member name="P:Syncfusion.WinForms.Core.Resources.Syncfusion_Core_WinForms.ScrollBar_LeftEdge">
            <summary>
              Looks up a localized string similar to LeftEdge.
            </summary>
        </member>
        <member name="P:Syncfusion.WinForms.Core.Resources.Syncfusion_Core_WinForms.ScrollBar_PageDown">
            <summary>
              Looks up a localized string similar to PageDown.
            </summary>
        </member>
        <member name="P:Syncfusion.WinForms.Core.Resources.Syncfusion_Core_WinForms.ScrollBar_PageLeft">
            <summary>
              Looks up a localized string similar to PageLeft.
            </summary>
        </member>
        <member name="P:Syncfusion.WinForms.Core.Resources.Syncfusion_Core_WinForms.ScrollBar_PageRight">
            <summary>
              Looks up a localized string similar to Page.
            </summary>
        </member>
        <member name="P:Syncfusion.WinForms.Core.Resources.Syncfusion_Core_WinForms.ScrollBar_PageUp">
            <summary>
              Looks up a localized string similar to PageUp.
            </summary>
        </member>
        <member name="P:Syncfusion.WinForms.Core.Resources.Syncfusion_Core_WinForms.ScrollBar_RightEdge">
            <summary>
              Looks up a localized string similar to RightEdge.
            </summary>
        </member>
        <member name="P:Syncfusion.WinForms.Core.Resources.Syncfusion_Core_WinForms.ScrollBar_ScrollDown">
            <summary>
              Looks up a localized string similar to ScrollDown.
            </summary>
        </member>
        <member name="P:Syncfusion.WinForms.Core.Resources.Syncfusion_Core_WinForms.ScrollBar_ScrollHere">
            <summary>
              Looks up a localized string similar to ScrollHere.
            </summary>
        </member>
        <member name="P:Syncfusion.WinForms.Core.Resources.Syncfusion_Core_WinForms.ScrollBar_ScrollLeft">
            <summary>
              Looks up a localized string similar to LeftScroll.
            </summary>
        </member>
        <member name="P:Syncfusion.WinForms.Core.Resources.Syncfusion_Core_WinForms.ScrollBar_ScrollRight">
            <summary>
              Looks up a localized string similar to RightScroll.
            </summary>
        </member>
        <member name="P:Syncfusion.WinForms.Core.Resources.Syncfusion_Core_WinForms.ScrollBar_ScrollUp">
            <summary>
              Looks up a localized string similar to ScrollUp.
            </summary>
        </member>
        <member name="P:Syncfusion.WinForms.Core.Resources.Syncfusion_Core_WinForms.ScrollBar_Top">
            <summary>
              Looks up a localized string similar to Top.
            </summary>
        </member>
        <member name="T:Syncfusion.WinForms.Core.Styles.CheckBoxStyleInfoBase">
            <summary>
            Represents a class that contains the properties for customizing the styles of the check box.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Core.Styles.CheckBoxStyleInfoBase.Empty">
            <summary>
            Maintains the default style of the currentcell to read.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Core.Styles.CheckBoxStyleInfoBase.defaultStyle">
            <summary>
            Maintains the default style of the CurrentCellStyleInfo.
            </summary>
        </member>
        <member name="M:Syncfusion.WinForms.Core.Styles.CheckBoxStyleInfoBase.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.WinForms.Core.Styles.CheckBoxStyleInfoBase"/> class.
            </summary>
        </member>
        <member name="M:Syncfusion.WinForms.Core.Styles.CheckBoxStyleInfoBase.#ctor(Syncfusion.WinForms.Core.Styles.CheckBoxStyleInfoBase)">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.WinForms.Core.Styles.CheckBoxStyleInfoBase"/> class.
            </summary>
            <param name="style">The <see cref="T:Syncfusion.WinForms.Core.Styles.CheckBoxStyleInfoBase"/> that need to be initialized.</param>
        </member>
        <member name="M:Syncfusion.WinForms.Core.Styles.CheckBoxStyleInfoBase.#ctor(Syncfusion.WinForms.Core.Styles.CheckBoxStyleInfoStore)">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.WinForms.Core.Styles.CheckBoxStyleInfoBase"/> class.
            </summary>
            <param name="store">The <see cref="!:Syncfusion.WinForms.Core.Styles.CheckBoxCellStyleInfoBaseStore"/>.</param>
        </member>
        <member name="M:Syncfusion.WinForms.Core.Styles.CheckBoxStyleInfoBase.#ctor(Syncfusion.WinForms.Core.Styles.StyleInfoSubObjectIdentity)">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.WinForms.Core.Styles.CheckBoxStyleInfoBase"/> class.
            </summary>
            <param name="identity"><see cref="!:Syncfusion.Core.WinForms.Styles.StyleInfoIdentityBase"/>.</param>
        </member>
        <member name="M:Syncfusion.WinForms.Core.Styles.CheckBoxStyleInfoBase.#ctor(Syncfusion.WinForms.Core.Styles.StyleInfoSubObjectIdentity,Syncfusion.WinForms.Core.Styles.CheckBoxStyleInfoStore)">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.WinForms.Core.Styles.CheckBoxStyleInfoBase"/> class.
            </summary>
            <param name="identity"><see cref="!:Syncfusion.Core.WinForms.Styles.StyleInfoIdentityBase"/>.</param>
            <param name="store">The <see cref="T:Syncfusion.WinForms.Core.Styles.CheckBoxStyleInfoBase"/>.</param>
        </member>
        <member name="M:Syncfusion.WinForms.Core.Styles.CheckBoxStyleInfoBase.MakeCopy(Syncfusion.WinForms.Core.Styles.StyleInfoBase,Syncfusion.WinForms.Core.Styles.StyleInfoProperty)">
            <summary>
            Makes an exact copy of the current object.
            </summary>
            <param name="newOwner">The new owner style object for the copied object.</param>
            <param name="sip">The identifier for this object.</param>
            <returns>A copy of the current object registered with the new owner style object.</returns>
        </member>
        <member name="M:Syncfusion.WinForms.Core.Styles.CheckBoxStyleInfoBase.GetDefaultStyle">
            <summary>
            Retrieves the default style of the current cell.
            </summary>
            <returns>Returns the default style of the current cell.</returns>
        </member>
        <member name="M:Syncfusion.WinForms.Core.Styles.CheckBoxStyleInfoBase.ShouldSerializeSize">
            <summary>
            Determines a value indicating whether to serialize <see cref="P:Syncfusion.WinForms.Core.Styles.CheckBoxStyleInfoBase.Size"/> property.
            </summary>
            <returns><b>True</b> if the property was modified; Otherwise <b>False</b>.</returns>
        </member>
        <member name="P:Syncfusion.WinForms.Core.Styles.CheckBoxStyleInfoBase.Default">
            <summary>
            Gets the default style of the <see cref="T:Syncfusion.WinForms.Core.Styles.CheckBoxStyleInfoBase"/>.
            </summary>
        </member>
        <member name="P:Syncfusion.WinForms.Core.Styles.CheckBoxStyleInfoBase.Size">
            <summary>
            Gets or sets the size of the check box.
            </summary>
        </member>
        <member name="P:Syncfusion.WinForms.Core.Styles.CheckBoxStyleInfoBase.UncheckedBorderColor">
            <summary>
            Gets or sets the border color of the unchecked state check box.
            </summary>
        </member>
        <member name="P:Syncfusion.WinForms.Core.Styles.CheckBoxStyleInfoBase.UncheckedBackColor">
            <summary>
            Gets or sets the back color of the unchecked state check box.
            </summary>
        </member>
        <member name="P:Syncfusion.WinForms.Core.Styles.CheckBoxStyleInfoBase.CheckedBackColor">
            <summary>
            Gets or sets the back color of the checked state check box.
            </summary>
        </member>
        <member name="P:Syncfusion.WinForms.Core.Styles.CheckBoxStyleInfoBase.CheckedBorderColor">
            <summary>
            Gets or sets the border color of the checked state check box.
            </summary>
        </member>
        <member name="P:Syncfusion.WinForms.Core.Styles.CheckBoxStyleInfoBase.CheckedTickColor">
            <summary>
            Gets or sets the tick color of the checked state check box.
            </summary>
        </member>
        <member name="P:Syncfusion.WinForms.Core.Styles.CheckBoxStyleInfoBase.IndeterminateColor">
            <summary>
            Gets or sets the color of the indeterminate state check box.
            </summary>
        </member>
        <member name="P:Syncfusion.WinForms.Core.Styles.CheckBoxStyleInfoBase.IndeterminateBorderColor">
            <summary>
            Gets or sets the border color of the indeterminate state check box.
            </summary>
        </member>
        <member name="P:Syncfusion.WinForms.Core.Styles.CheckBoxStyleInfoBase.IndeterminateBackColor">
            <summary>
            Gets or sets the back color of the indeterminate state check box.
            </summary>
        </member>
        <member name="P:Syncfusion.WinForms.Core.Styles.CheckBoxStyleInfoBase.Alignment">
            <summary>
            Gets or sets a value indicating the alignment of the check box.
            </summary>
        </member>
        <member name="P:Syncfusion.WinForms.Core.Styles.CheckBoxStyleInfoBase.HasSize">
            <summary>
            Gets a value indicating whether padding has been initialized for the <see cref="T:Syncfusion.WinForms.Controls.SfButton"/> control.
            </summary>
        </member>
        <member name="T:Syncfusion.WinForms.Core.Styles.CheckBoxStyleInfoStore">
            <summary>
            Implements the data store for the <see cref="T:Syncfusion.WinForms.Core.Styles.CheckBoxStyleInfoBase"/> object.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Core.Styles.CheckBoxStyleInfoStore.UncheckedBorderColorProperty">
            <summary>
            Provides information about the <see cref="P:Syncfusion.WinForms.Core.Styles.CheckBoxStyleInfoBase.UncheckedBorderColor"/> property. 
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Core.Styles.CheckBoxStyleInfoStore.UncheckedBackColorProperty">
            <summary>
            Provides information about the <see cref="P:Syncfusion.WinForms.Core.Styles.CheckBoxStyleInfoBase.UncheckedBackColor"/> property. 
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Core.Styles.CheckBoxStyleInfoStore.CheckedBorderColorProperty">
            <summary>
            Provides information about the <see cref="P:Syncfusion.WinForms.Core.Styles.CheckBoxStyleInfoBase.CheckedBorderColor"/> property. 
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Core.Styles.CheckBoxStyleInfoStore.CheckedBackColorProperty">
            <summary>
            Provides information about the <see cref="P:Syncfusion.WinForms.Core.Styles.CheckBoxStyleInfoBase.CheckedBackColor"/> property. 
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Core.Styles.CheckBoxStyleInfoStore.CheckedTickColorProperty">
            <summary>
            Provides information about the <see cref="P:Syncfusion.WinForms.Core.Styles.CheckBoxStyleInfoBase.CheckedTickColor"/> property. 
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Core.Styles.CheckBoxStyleInfoStore.IndeterminateBorderColorProperty">
            <summary>
            Provides information about the <see cref="P:Syncfusion.WinForms.Core.Styles.CheckBoxStyleInfoBase.IndeterminateBorderColor"/> property. 
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Core.Styles.CheckBoxStyleInfoStore.IndeterminateBackColorProperty">
            <summary>
            Provides information about the <see cref="P:Syncfusion.WinForms.Core.Styles.CheckBoxStyleInfoBase.IndeterminateBackColor"/> property. 
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Core.Styles.CheckBoxStyleInfoStore.IndeterminateColorProperty">
            <summary>
            Provides information about the <see cref="P:Syncfusion.WinForms.Core.Styles.CheckBoxStyleInfoBase.IndeterminateColor"/> property. 
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Core.Styles.CheckBoxStyleInfoStore.AlignmentProperty">
            <summary>
            Provides information about the <see cref="P:Syncfusion.WinForms.Core.Styles.CheckBoxStyleInfoBase.Alignment"/> property. 
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Core.Styles.CheckBoxStyleInfoStore.SizeProperty">
            <summary>
            Provides information about the <see cref="!:Syncfusion.WinForms.ListView.CheckBoxStyleInfo.UncheckedBorderColor"/> property.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Core.Styles.CheckBoxStyleInfoStore.sd">
            <summary>
            Maintains the static data for the CheckBoxCellStyleInfo.
            </summary>
        </member>
        <member name="M:Syncfusion.WinForms.Core.Styles.CheckBoxStyleInfoStore.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.WinForms.Core.Styles.CheckBoxStyleInfoStore"/> class.
            </summary>
        </member>
        <member name="M:Syncfusion.WinForms.Core.Styles.CheckBoxStyleInfoStore.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.WinForms.Core.Styles.CheckBoxStyleInfoStore"/> class.
            </summary>
            <param name="info">Populates the SerializationInfo store with the name, type, and value of each piece of information it wants to serialize</param>
            <param name="context">Describes the source and destination of a given serialized stream, and provides an additional caller-defined context.</param>
        </member>
        <member name="M:Syncfusion.WinForms.Core.Styles.CheckBoxStyleInfoStore.Clone">
            <summary>
            Overridden to create the exact copy of the current instance.
            </summary>
            <returns>Returns the copied object.</returns>
        </member>
        <member name="M:Syncfusion.WinForms.Core.Styles.CheckBoxStyleInfoStore.GetStaticData">
            <summary>
            Initializes the <see cref="!:Syncfusion.WinForms.Core.Styles.CheckBoxCellStyleInfoBaseStore.sd"/>, if<see cref="F:Syncfusion.WinForms.Core.Styles.CheckBoxStyleInfoStore.sd"/> is null.
            </summary>
            <returns><see cref="!:Syncfusion.WinForms.Core.Styles.CheckBoxCellStyleInfoBaseStore.sd"/></returns>
        </member>
        <member name="P:Syncfusion.WinForms.Core.Styles.CheckBoxStyleInfoStore.StaticDataStore">
            <summary>
            Overridden to gets the static data.
            </summary>
        </member>
        <member name="T:Syncfusion.WinForms.Core.Styles.FrugalMapIterationCallback">
            <summary>
            The FrugalMapIterationCallback delegate.
            </summary>
            <param name="list">The list value.</param>
            <param name="key">The integer value contains the key.</param>
            <param name="value">The object value.</param>
        </member>
        <member name="T:Syncfusion.WinForms.Core.Styles.FrugalMapStoreState">
            <summary>
            Defines the constants that specify the growth to successively more complex storage models
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Core.Styles.FrugalMapStoreState.Success">
            <summary>
            The success.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Core.Styles.FrugalMapStoreState.ThreeObjectMap">
            <summary>
            The three object map.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Core.Styles.FrugalMapStoreState.SixObjectMap">
            <summary>
            The six object map.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Core.Styles.FrugalMapStoreState.Array">
            <summary>
            The array.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Core.Styles.FrugalMapStoreState.SortedArray">
            <summary>
            The sorted array.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Core.Styles.FrugalMapStoreState.Hashtable">
            <summary>
            The hash table.
            </summary>
        </member>
        <member name="T:Syncfusion.WinForms.Core.Styles.FrugalMap">
            <summary>
            Represents a class to provide frugal storage model for key/value pair data structures.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Core.Styles.FrugalMap.MapStore">
            <summary>
            The map store value.
            </summary>
        </member>
        <member name="M:Syncfusion.WinForms.Core.Styles.FrugalMap.Sort">
            <summary>
            Sorts the items in the storage.
            </summary>
        </member>
        <member name="M:Syncfusion.WinForms.Core.Styles.FrugalMap.GetKeyValuePair(System.Int32,System.Int32@,System.Object@)">
            <summary>
            Overridden to get the key value pair.
            </summary>
            <param name="index">An index of the item.</param>
            <param name="key">A key value.</param>
            <param name="value">The searched object.</param>
        </member>
        <member name="M:Syncfusion.WinForms.Core.Styles.FrugalMap.Iterate(System.Collections.ArrayList,Syncfusion.WinForms.Core.Styles.FrugalMapIterationCallback)">
            <summary>
            Overridden to iterate the items.
            </summary>
            <param name="list">List of items.</param>
            <param name="callback">The call back.</param>
        </member>
        <member name="P:Syncfusion.WinForms.Core.Styles.FrugalMap.Count">
            <summary>
            Gets the Size of this data store 
            </summary>
        </member>
        <member name="P:Syncfusion.WinForms.Core.Styles.FrugalMap.Item(System.Int32)">
            <summary>
            Gets or sets the value of the frugal map storage.
            </summary>
            <param name="key">A key value of the item.</param>
            <returns>The object.</returns>
        </member>
        <member name="T:Syncfusion.WinForms.Core.Styles.InsertionSortMap">
            <summary>
            This is a variant of FrugalMap that always uses an array as the underlying store.
            This avoids the virtual method calls that are present when the store morphs through
            the size efficient store classes normally used. It is appropriate only when we know the
            store will always be populated and individual elements will be accessed in a tight loop.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Core.Styles.InsertionSortMap.MapStore">
            <summary>
            The map store value.
            </summary>
        </member>
        <member name="M:Syncfusion.WinForms.Core.Styles.InsertionSortMap.Sort">
            <summary>
            Sorts the items in the storage.
            </summary>
        </member>
        <member name="M:Syncfusion.WinForms.Core.Styles.InsertionSortMap.GetKeyValuePair(System.Int32,System.Int32@,System.Object@)">
            <summary>
            Overridden to get the key value pair.
            </summary>
            <param name="index">An index of the item.</param>
            <param name="key">A key value.</param>
            <param name="value">The searched object.</param>
        </member>
        <member name="M:Syncfusion.WinForms.Core.Styles.InsertionSortMap.Iterate(System.Collections.ArrayList,Syncfusion.WinForms.Core.Styles.FrugalMapIterationCallback)">
            <summary>
            Overridden to iterate the items.
            </summary>
            <param name="list">List of items.</param>
            <param name="callback">The call back.</param>
        </member>
        <member name="P:Syncfusion.WinForms.Core.Styles.InsertionSortMap.Count">
            <summary>
            Gets the Size of this data store 
            </summary>
        </member>
        <member name="P:Syncfusion.WinForms.Core.Styles.InsertionSortMap.Item(System.Int32)">
            <summary>
            Gets or sets the value of the frugal map storage.
            </summary>
            <param name="key">A key value of the item.</param>
            <returns>The object.</returns>
        </member>
        <member name="T:Syncfusion.WinForms.Core.Styles.DependencyProperty">
            <summary>
            Represents a class to hold the unset values.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Core.Styles.DependencyProperty.UnsetValue">
            <summary>
            Returns the unset value.
            </summary>
        </member>
        <member name="T:Syncfusion.WinForms.Core.Styles.FrugalMapBase">
            <summary>
            Represents a base class to provide frugal storage model for key/value pair data structures.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Core.Styles.FrugalMapBase.Invalidkey">
            <summary>
            The invalid key.
            </summary>
        </member>
        <member name="M:Syncfusion.WinForms.Core.Styles.FrugalMapBase.InsertEntry(System.Int32,System.Object)">
            <summary>
            Inserts a new entry into the list.
            </summary>
            <param name="key">The key value to insert.</param>
            <param name="value">The object value to insert.</param>
            <returns>Returns the FrugalMapStoreState value.</returns>
        </member>
        <member name="M:Syncfusion.WinForms.Core.Styles.FrugalMapBase.RemoveEntry(System.Int32)">
            <summary>
            Removes the entry in the list.
            </summary>
            <param name="key">The key value to remove.</param>
        </member>
        <member name="M:Syncfusion.WinForms.Core.Styles.FrugalMapBase.Search(System.Int32)">
            <summary>
            Looks for an entry that contains the given key, null is returned if the
            key is not found. 
            </summary>
            <param name="key">The integer value used to search.</param>
            <returns>Returns the object value in given key value.</returns>
        </member>
        <member name="M:Syncfusion.WinForms.Core.Styles.FrugalMapBase.Sort">
            <summary> 
            A routine used by enumerators that need a sorted map
            </summary>
        </member>
        <member name="M:Syncfusion.WinForms.Core.Styles.FrugalMapBase.GetKeyValuePair(System.Int32,System.Int32@,System.Object@)">
            <summary>
            A routine used by enumerators to iterate through the map 
            </summary> 
            <param name="index">The index value.</param>
            <param name="key">The key value.</param>
            <param name="value">The object value.</param>
        </member>
        <member name="M:Syncfusion.WinForms.Core.Styles.FrugalMapBase.Iterate(System.Collections.ArrayList,Syncfusion.WinForms.Core.Styles.FrugalMapIterationCallback)">
            <summary>
            A routine used to iterate through all the entries in the map
            </summary>
            <param name="list">The list value.</param>
            <param name="callback">The callback value.</param>
        </member>
        <member name="M:Syncfusion.WinForms.Core.Styles.FrugalMapBase.Promote(Syncfusion.WinForms.Core.Styles.FrugalMapBase)">
            <summary> 
            Promotes the key/value pairs in the current collection to the next larger 
            and more complex storage model.
            </summary> 
            <param name="newMap">The FrugalMapBase value.</param>
        </member>
        <member name="P:Syncfusion.WinForms.Core.Styles.FrugalMapBase.Count">
            <summary>
            Gets a size of this data store 
            </summary>
        </member>
        <member name="T:Syncfusion.WinForms.Core.Styles.FrugalMapBase.Entry">
            <summary>
            Represents the property information of Key/Value pair data structure.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Core.Styles.FrugalMapBase.Entry.Key">
            <summary>
            The key value.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Core.Styles.FrugalMapBase.Entry.Value">
            <summary>
            The object value.
            </summary>
        </member>
        <member name="T:Syncfusion.WinForms.Core.Styles.SingleObjectMap">
            <summary>
            A simple class to handle a single key/value pair
            </summary> 
        </member>
        <member name="F:Syncfusion.WinForms.Core.Styles.SingleObjectMap.loneEntry">
            <summary>
            The entry value.
            </summary>
        </member>
        <member name="M:Syncfusion.WinForms.Core.Styles.SingleObjectMap.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.WinForms.Core.Styles.SingleObjectMap"/> class.
            </summary>
        </member>
        <member name="M:Syncfusion.WinForms.Core.Styles.SingleObjectMap.InsertEntry(System.Int32,System.Object)">
            <summary>
            Overridden to insert the Key/Value pair.
            </summary>
            <param name="key">A key value.</param>
            <param name="value">The value.</param>
            <returns>A <see cref="T:Syncfusion.WinForms.Core.Styles.FrugalMapStoreState"/>.</returns>
        </member>
        <member name="M:Syncfusion.WinForms.Core.Styles.SingleObjectMap.RemoveEntry(System.Int32)">
            <summary>
            Overridden to remove the value from the storage.
            </summary>
            <param name="key">A key value to be removed.</param>
        </member>
        <member name="M:Syncfusion.WinForms.Core.Styles.SingleObjectMap.Search(System.Int32)">
            <summary>
            Overridden to search the value from the storage based on the key.
            </summary>
            <param name="key">A key value to be searched.</param>
            <returns>The searched value based on the key.</returns>
        </member>
        <member name="M:Syncfusion.WinForms.Core.Styles.SingleObjectMap.Sort">
            <summary>
            Sorts the items in the storage.
            </summary>
        </member>
        <member name="M:Syncfusion.WinForms.Core.Styles.SingleObjectMap.GetKeyValuePair(System.Int32,System.Int32@,System.Object@)">
            <summary>
            Overridden to get the key value pair.
            </summary>
            <param name="index">An index of the item.</param>
            <param name="key">A key value.</param>
            <param name="value">The searched object.</param>
        </member>
        <member name="M:Syncfusion.WinForms.Core.Styles.SingleObjectMap.Iterate(System.Collections.ArrayList,Syncfusion.WinForms.Core.Styles.FrugalMapIterationCallback)">
            <summary>
            Overridden to iterate the items.
            </summary>
            <param name="list">List of items.</param>
            <param name="callback">The call back.</param>
        </member>
        <member name="M:Syncfusion.WinForms.Core.Styles.SingleObjectMap.Promote(Syncfusion.WinForms.Core.Styles.FrugalMapBase)">
            <summary>
            Overridden to check whether inserting of entry is success or not.
            </summary>
            <param name="newMap">The <see cref="T:Syncfusion.WinForms.Core.Styles.FrugalMapBase"/>.</param>
        </member>
        <member name="P:Syncfusion.WinForms.Core.Styles.SingleObjectMap.Count">
            <summary>
            Gets the Size of this data store 
            </summary>
        </member>
        <member name="T:Syncfusion.WinForms.Core.Styles.ThreeObjectMap">
            <summary>
            A simple class to handle a single object with 3 key/value pairs.  The pairs are stored unsorted 
            and uses a linear search.  Performance analysis showed that this yielded better memory locality and
            performance than an object and an array. 
            </summary> 
            <remarks>
            This map inserts at the last position.  Any time we add to the map we set _sorted to false. If you need 
            to iterate through the map in sorted order you must call Sort before using GetKeyValuePair.
            </remarks>
        </member>
        <member name="F:Syncfusion.WinForms.Core.Styles.ThreeObjectMap.SIZE">
            <summary>
            The constant value of size.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Core.Styles.ThreeObjectMap.count">
            <summary>
            The number of items in the map.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Core.Styles.ThreeObjectMap.sorted">
            <summary>
            The boolean value indicates the sorted or not.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Core.Styles.ThreeObjectMap.entry0">
            <summary>
            The entry value.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Core.Styles.ThreeObjectMap.entry1">
            <summary>
            The entry value.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Core.Styles.ThreeObjectMap.entry2">
            <summary>
            The entry value.
            </summary>
        </member>
        <member name="M:Syncfusion.WinForms.Core.Styles.ThreeObjectMap.InsertEntry(System.Int32,System.Object)">
            <summary>
            Overridden to insert the Key/Value pair.
            </summary>
            <param name="key">A key value.</param>
            <param name="value">The value.</param>
            <returns>A <see cref="T:Syncfusion.WinForms.Core.Styles.FrugalMapStoreState"/>.</returns>
        </member>
        <member name="M:Syncfusion.WinForms.Core.Styles.ThreeObjectMap.RemoveEntry(System.Int32)">
            <summary>
            Overridden to remove the value from the storage.
            </summary>
            <param name="key">A key value to be removed.</param>
        </member>
        <member name="M:Syncfusion.WinForms.Core.Styles.ThreeObjectMap.Search(System.Int32)">
            <summary>
            Overridden to search the value from the storage based on the key.
            </summary>
            <param name="key">A key value to be searched.</param>
            <returns>The searched value based on the key.</returns>
        </member>
        <member name="M:Syncfusion.WinForms.Core.Styles.ThreeObjectMap.Sort">
            <summary>
            Sorts the items in the storage.
            </summary>
        </member>
        <member name="M:Syncfusion.WinForms.Core.Styles.ThreeObjectMap.GetKeyValuePair(System.Int32,System.Int32@,System.Object@)">
            <summary>
            Overridden to get the key value pair.
            </summary>
            <param name="index">An index of the item.</param>
            <param name="key">A key value.</param>
            <param name="value">The searched object.</param>
        </member>
        <member name="M:Syncfusion.WinForms.Core.Styles.ThreeObjectMap.Iterate(System.Collections.ArrayList,Syncfusion.WinForms.Core.Styles.FrugalMapIterationCallback)">
            <summary>
            Overridden to iterate the items.
            </summary>
            <param name="list">List of items.</param>
            <param name="callback">The call back.</param>
        </member>
        <member name="M:Syncfusion.WinForms.Core.Styles.ThreeObjectMap.Promote(Syncfusion.WinForms.Core.Styles.FrugalMapBase)">
            <summary>
            Overridden to check whether inserting of entry is success or not.
            </summary>
            <param name="newMap">The <see cref="T:Syncfusion.WinForms.Core.Styles.FrugalMapBase"/>.</param>
        </member>
        <member name="P:Syncfusion.WinForms.Core.Styles.ThreeObjectMap.Count">
            <summary>
            Gets the Size of this data store 
            </summary>
        </member>
        <member name="T:Syncfusion.WinForms.Core.Styles.SixObjectMap">
            <summary>
            A simple class to handle a single object with 6 key/value pairs.  The pairs are stored unsorted 
            and uses a linear search.  Performance analysis showed that this yielded better memory locality and
            performance than an object and an array.
            </summary>
            <remarks> 
            This map inserts at the last position.  Any time we add to the map we set _sorted to false. If you need
            to iterate through the map in sorted order you must call Sort before using GetKeyValuePair. 
            </remarks> 
        </member>
        <member name="F:Syncfusion.WinForms.Core.Styles.SixObjectMap.SIZE">
            <summary>
            The size.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Core.Styles.SixObjectMap.count">
            <summary>
            The number of items in the map.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Core.Styles.SixObjectMap.sorted">
            <summary>
            The boolean value.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Core.Styles.SixObjectMap.entry0">
            <summary>
            The entry value.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Core.Styles.SixObjectMap.entry1">
            <summary>
            The entry value.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Core.Styles.SixObjectMap.entry2">
            <summary>
            The entry value.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Core.Styles.SixObjectMap.entry3">
            <summary>
            The entry value.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Core.Styles.SixObjectMap.entry4">
            <summary>
            The entry value.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Core.Styles.SixObjectMap.entry5">
            <summary>
            The entry value.
            </summary>
        </member>
        <member name="M:Syncfusion.WinForms.Core.Styles.SixObjectMap.InsertEntry(System.Int32,System.Object)">
            <summary>
            Overridden to insert the Key/Value pair.
            </summary>
            <param name="key">A key value.</param>
            <param name="value">The value.</param>
            <returns>A <see cref="T:Syncfusion.WinForms.Core.Styles.FrugalMapStoreState"/>.</returns>
        </member>
        <member name="M:Syncfusion.WinForms.Core.Styles.SixObjectMap.RemoveEntry(System.Int32)">
            <summary>
            Overridden to remove the value from the storage.
            </summary>
            <param name="key">A key value to be removed.</param>
        </member>
        <member name="M:Syncfusion.WinForms.Core.Styles.SixObjectMap.Search(System.Int32)">
            <summary>
            Looks for an entry that contains the given key, null is returned if the
            key is not found. 
            </summary>
            <param name="key">The integer value used to search.</param>
            <returns>Returns the object value in given key value.</returns>
        </member>
        <member name="M:Syncfusion.WinForms.Core.Styles.SixObjectMap.Sort">
            <summary>
            Sorts the items in the storage.
            </summary>
        </member>
        <member name="M:Syncfusion.WinForms.Core.Styles.SixObjectMap.GetKeyValuePair(System.Int32,System.Int32@,System.Object@)">
            <summary>
            Overridden to get the key value pair.
            </summary>
            <param name="index">An index of the item.</param>
            <param name="key">A key value.</param>
            <param name="value">The searched object.</param>
        </member>
        <member name="M:Syncfusion.WinForms.Core.Styles.SixObjectMap.Iterate(System.Collections.ArrayList,Syncfusion.WinForms.Core.Styles.FrugalMapIterationCallback)">
            <summary>
            Overridden to iterate the items.
            </summary>
            <param name="list">List of items.</param>
            <param name="callback">The call back.</param>
        </member>
        <member name="M:Syncfusion.WinForms.Core.Styles.SixObjectMap.Promote(Syncfusion.WinForms.Core.Styles.FrugalMapBase)">
            <summary>
            Overridden to check whether inserting of entry is success or not.
            </summary>
            <param name="newMap">The <see cref="T:Syncfusion.WinForms.Core.Styles.FrugalMapBase"/>.</param>
        </member>
        <member name="P:Syncfusion.WinForms.Core.Styles.SixObjectMap.Count">
            <summary>
            Gets the Size of this data store 
            </summary>
        </member>
        <member name="T:Syncfusion.WinForms.Core.Styles.ArrayObjectMap">
            <summary>
            A simple class to handle an array of between 6 and 12 key/value pairs.  It is unsorted 
            and uses a linear search.  Performance analysis showed that this was the optimal size for both 
            memory and performance.  The values may need to be adjusted as the CLR and Avalon evolve.
            </summary> 
        </member>
        <member name="F:Syncfusion.WinForms.Core.Styles.ArrayObjectMap.MINSIZE">
            <summary>
            MINSIZE and GROWTH chosen to minimize memory footprint.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Core.Styles.ArrayObjectMap.MAXSIZE">
            <summary>
            MINSIZE and GROWTH chosen to minimize memory footprint.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Core.Styles.ArrayObjectMap.GROWTH">
            <summary>
            MINSIZE and GROWTH chosen to minimize memory footprint
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Core.Styles.ArrayObjectMap.count">
            <summary>
            The number of items in the map.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Core.Styles.ArrayObjectMap.sorted">
            <summary>
            The boolean value.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Core.Styles.ArrayObjectMap.entries">
            <summary>
            The collection of Entry.
            </summary>
        </member>
        <member name="M:Syncfusion.WinForms.Core.Styles.ArrayObjectMap.InsertEntry(System.Int32,System.Object)">
            <summary>
            Overridden to insert the Key/Value pair.
            </summary>
            <param name="key">A key value.</param>
            <param name="value">The value.</param>
            <returns>A <see cref="T:Syncfusion.WinForms.Core.Styles.FrugalMapStoreState"/>.</returns>
        </member>
        <member name="M:Syncfusion.WinForms.Core.Styles.ArrayObjectMap.RemoveEntry(System.Int32)">
            <summary>
            Overridden to remove the value from the storage.
            </summary>
            <param name="key">A key value to be removed.</param>
        </member>
        <member name="M:Syncfusion.WinForms.Core.Styles.ArrayObjectMap.Search(System.Int32)">
            <summary>
            Overridden to search the value from the storage based on the key.
            </summary>
            <param name="key">A key value to be searched.</param>
            <returns>The searched value based on the key.</returns>
        </member>
        <member name="M:Syncfusion.WinForms.Core.Styles.ArrayObjectMap.Sort">
            <summary>
            Sorts the items in the storage.
            </summary>
        </member>
        <member name="M:Syncfusion.WinForms.Core.Styles.ArrayObjectMap.GetKeyValuePair(System.Int32,System.Int32@,System.Object@)">
            <summary>
            Overridden to get the key value pair.
            </summary>
            <param name="index">An index of the item.</param>
            <param name="key">A key value.</param>
            <param name="value">The searched object.</param>
        </member>
        <member name="M:Syncfusion.WinForms.Core.Styles.ArrayObjectMap.Iterate(System.Collections.ArrayList,Syncfusion.WinForms.Core.Styles.FrugalMapIterationCallback)">
            <summary>
            Overridden to iterate the items.
            </summary>
            <param name="list">List of items.</param>
            <param name="callback">The call back.</param>
        </member>
        <member name="M:Syncfusion.WinForms.Core.Styles.ArrayObjectMap.Promote(Syncfusion.WinForms.Core.Styles.FrugalMapBase)">
            <summary>
            Overridden to check whether inserting of entry is success or not.
            </summary>
            <param name="newMap">The <see cref="T:Syncfusion.WinForms.Core.Styles.FrugalMapBase"/>.</param>
        </member>
        <member name="M:Syncfusion.WinForms.Core.Styles.ArrayObjectMap.Compare(System.Int32,System.Int32)">
            <summary>
            Compares two Entry nodes in the _entries array 
            </summary>
            <param name="left">The left index of an item.</param>
            <param name="right">The right index of an item.</param>
            <returns>Returns am integer value of comparison.</returns>
        </member>
        <member name="M:Syncfusion.WinForms.Core.Styles.ArrayObjectMap.Partition(System.Int32,System.Int32)">
            <summary>
            Partition the _entries array for QuickSort 
            </summary>
            <param name="left">The left index of an item.</param>
            <param name="right">The right index of an item.</param>
            <returns>Returns am integer value of partition.</returns>
        </member>
        <member name="M:Syncfusion.WinForms.Core.Styles.ArrayObjectMap.QSort(System.Int32,System.Int32)">
            <summary>
            Sort the _entries array using an index based QuickSort
            </summary>
            <param name="left">The left index of an item.</param>
            <param name="right">The right index of an item.</param>        
        </member>
        <member name="P:Syncfusion.WinForms.Core.Styles.ArrayObjectMap.Count">
            <summary>
            Gets the Size of this data store 
            </summary>
        </member>
        <member name="T:Syncfusion.WinForms.Core.Styles.SortedObjectMap">
            <summary>
            A sorted array of key/value pairs. A binary search is used to minimize the cost of insert/search.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Core.Styles.SortedObjectMap.MINSIZE">
            <summary>
            MINSIZE chosen to be larger than MAXSIZE of the ArrayObjectMap with some extra space for new values.  
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Core.Styles.SortedObjectMap.MAXSIZE">
            <summary>
            The MAXSIZE and GROWTH are chosen to minimize memory usage as we grow the array.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Core.Styles.SortedObjectMap.GROWTH">
            <summary>
            The MAXSIZE and GROWTH are chosen to minimize memory usage as we grow the array.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Core.Styles.SortedObjectMap.lastKey">
            <summary>
            The invalid key index
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Core.Styles.SortedObjectMap.entries">
            <summary>
            The Entry collection.
            </summary>
        </member>
        <member name="M:Syncfusion.WinForms.Core.Styles.SortedObjectMap.InsertEntry(System.Int32,System.Object)">
            <summary>
            Overridden to insert the Key/Value pair.
            </summary>
            <param name="key">A key value.</param>
            <param name="value">The value.</param>
            <returns>A <see cref="T:Syncfusion.WinForms.Core.Styles.FrugalMapStoreState"/>.</returns>
        </member>
        <member name="M:Syncfusion.WinForms.Core.Styles.SortedObjectMap.RemoveEntry(System.Int32)">
            <summary>
            Overridden to remove the value from the storage.
            </summary>
            <param name="key">A key value to be removed.</param>
        </member>
        <member name="M:Syncfusion.WinForms.Core.Styles.SortedObjectMap.Search(System.Int32)">
            <summary>
            Overridden to search the value from the storage based on the key.
            </summary>
            <param name="key">A key value to be searched.</param>
            <returns>The searched value based on the key.</returns>
        </member>
        <member name="M:Syncfusion.WinForms.Core.Styles.SortedObjectMap.Sort">
            <summary>
            Sorts the items in the storage.
            </summary>
        </member>
        <member name="M:Syncfusion.WinForms.Core.Styles.SortedObjectMap.GetKeyValuePair(System.Int32,System.Int32@,System.Object@)">
            <summary>
            Overridden to get the key value pair.
            </summary>
            <param name="index">An index of the item.</param>
            <param name="key">A key value.</param>
            <param name="value">The searched object.</param>
        </member>
        <member name="M:Syncfusion.WinForms.Core.Styles.SortedObjectMap.Iterate(System.Collections.ArrayList,Syncfusion.WinForms.Core.Styles.FrugalMapIterationCallback)">
            <summary>
            Overridden to iterate the items.
            </summary>
            <param name="list">List of items.</param>
            <param name="callback">The call back.</param>
        </member>
        <member name="M:Syncfusion.WinForms.Core.Styles.SortedObjectMap.Promote(Syncfusion.WinForms.Core.Styles.FrugalMapBase)">
            <summary>
            Overridden to check whether inserting of entry is success or not.
            </summary>
            <param name="newMap">The <see cref="T:Syncfusion.WinForms.Core.Styles.FrugalMapBase"/>.</param>
        </member>
        <member name="M:Syncfusion.WinForms.Core.Styles.SortedObjectMap.FindInsertIndex(System.Int32,System.Boolean@)">
            <summary>
            Finds whether given index is found in the collection.
            </summary>
            <param name="key">A key to be found.</param>
            <param name="found">Returns true if the given index is found. Otherwise returns false.</param>
            <returns>returns the index of the found item.</returns>
        </member>
        <member name="P:Syncfusion.WinForms.Core.Styles.SortedObjectMap.Count">
            <summary>
            Gets the Size of this data store 
            </summary>
        </member>
        <member name="P:Syncfusion.WinForms.Core.Styles.SortedObjectMap.ItemCount">
            <summary>
            Gets or sets a number of items in the map. 
            </summary>
        </member>
        <member name="T:Syncfusion.WinForms.Core.Styles.HashObjectMap">
            <summary>
            Represents a class to hash object map storage data structure.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Core.Styles.HashObjectMap.MINSIZE">
            <summary>
            163 is chosen because it is the first prime larger than 128, the MAXSIZE of SortedObjectMap
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Core.Styles.HashObjectMap.nullValue">
            <summary>
            Hash table will return null from its indexer if the key is not found OR if the value is null.  To distinguish between these
            two cases we insert nullValue instead of null.
            </summary>
        </member>
        <member name="M:Syncfusion.WinForms.Core.Styles.HashObjectMap.InsertEntry(System.Int32,System.Object)">
            <summary>
            Overridden to insert the Key/Value pair.
            </summary>
            <param name="key">A key value.</param>
            <param name="value">The value.</param>
            <returns>A <see cref="T:Syncfusion.WinForms.Core.Styles.FrugalMapStoreState"/>.</returns>
        </member>
        <member name="M:Syncfusion.WinForms.Core.Styles.HashObjectMap.RemoveEntry(System.Int32)">
            <summary>
            Overridden to remove the value from the storage.
            </summary>
            <param name="key">A key value to be removed.</param>
        </member>
        <member name="M:Syncfusion.WinForms.Core.Styles.HashObjectMap.Search(System.Int32)">
            <summary>
            Overridden to search the value from the storage based on the key.
            </summary>
            <param name="key">A key value to be searched.</param>
            <returns>The searched value based on the key.</returns>
        </member>
        <member name="M:Syncfusion.WinForms.Core.Styles.HashObjectMap.Sort">
            <summary>
            Sorts the items in the storage.
            </summary>
        </member>
        <member name="M:Syncfusion.WinForms.Core.Styles.HashObjectMap.GetKeyValuePair(System.Int32,System.Int32@,System.Object@)">
            <summary>
            Overridden to get the key value pair.
            </summary>
            <param name="index">An index of the item.</param>
            <param name="key">A key value.</param>
            <param name="value">The searched object.</param>
        </member>
        <member name="M:Syncfusion.WinForms.Core.Styles.HashObjectMap.Iterate(System.Collections.ArrayList,Syncfusion.WinForms.Core.Styles.FrugalMapIterationCallback)">
            <summary>
            Overridden to iterate the items.
            </summary>
            <param name="list">List of items.</param>
            <param name="callback">The call back.</param>
        </member>
        <member name="M:Syncfusion.WinForms.Core.Styles.HashObjectMap.Promote(Syncfusion.WinForms.Core.Styles.FrugalMapBase)">
            <summary>
            Overridden to check whether inserting of entry is success or not.
            </summary>
            <param name="newMap">The <see cref="T:Syncfusion.WinForms.Core.Styles.FrugalMapBase"/>.</param>
        </member>
        <member name="P:Syncfusion.WinForms.Core.Styles.HashObjectMap.Count">
            <summary>
            Gets the Size of this data store.
            </summary>
        </member>
        <member name="P:Syncfusion.WinForms.Core.Styles.HashObjectMap.Entries">
            <summary>
            Gets or sets a entries collection.
            </summary>
        </member>
        <member name="T:Syncfusion.WinForms.Core.Styles.LargeSortedObjectMap">
            <summary>
            A sorted array of key/value pairs. A binary search is used to minimize the cost of insert/search.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Core.Styles.LargeSortedObjectMap.MINSIZE">
            <summary>
             MINSIZE chosen to be small, growth rate of 1.5 is slow at small sizes, but increasingly aggressive as
            the array grows
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Core.Styles.LargeSortedObjectMap.lastKey">
            <summary>
            The last key index.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Core.Styles.LargeSortedObjectMap.entries">
            <summary>
            The collection of entry.
            </summary>
        </member>
        <member name="M:Syncfusion.WinForms.Core.Styles.LargeSortedObjectMap.InsertEntry(System.Int32,System.Object)">
            <summary>
            Overridden to insert the Key/Value pair.
            </summary>
            <param name="key">A key value.</param>
            <param name="value">The value.</param>
            <returns>A <see cref="T:Syncfusion.WinForms.Core.Styles.FrugalMapStoreState"/>.</returns>
        </member>
        <member name="M:Syncfusion.WinForms.Core.Styles.LargeSortedObjectMap.RemoveEntry(System.Int32)">
            <summary>
            Overridden to remove the value from the storage.
            </summary>
            <param name="key">A key value to be removed.</param>
        </member>
        <member name="M:Syncfusion.WinForms.Core.Styles.LargeSortedObjectMap.Search(System.Int32)">
            <summary>
            Overridden to search the value from the storage based on the key.
            </summary>
            <param name="key">A key value to be searched.</param>
            <returns>The searched value based on the key.</returns>
        </member>
        <member name="M:Syncfusion.WinForms.Core.Styles.LargeSortedObjectMap.Sort">
            <summary>
            Sorts the items in the storage.
            </summary>
        </member>
        <member name="M:Syncfusion.WinForms.Core.Styles.LargeSortedObjectMap.GetKeyValuePair(System.Int32,System.Int32@,System.Object@)">
            <summary>
            Overridden to get the key value pair.
            </summary>
            <param name="index">An index of the item.</param>
            <param name="key">A key value.</param>
            <param name="value">The searched object.</param>
        </member>
        <member name="M:Syncfusion.WinForms.Core.Styles.LargeSortedObjectMap.Iterate(System.Collections.ArrayList,Syncfusion.WinForms.Core.Styles.FrugalMapIterationCallback)">
            <summary>
            Overridden to iterate the items.
            </summary>
            <param name="list">List of items.</param>
            <param name="callback">The call back.</param>
        </member>
        <member name="M:Syncfusion.WinForms.Core.Styles.LargeSortedObjectMap.Promote(Syncfusion.WinForms.Core.Styles.FrugalMapBase)">
            <summary>
            Overridden to check whether inserting of entry is success or not.
            </summary>
            <param name="newMap">The <see cref="T:Syncfusion.WinForms.Core.Styles.FrugalMapBase"/>.</param>
        </member>
        <member name="M:Syncfusion.WinForms.Core.Styles.LargeSortedObjectMap.FindInsertIndex(System.Int32,System.Boolean@)">
            <summary>
            Find the insert index.
            </summary>
            <param name="key">The key value.</param>
            <param name="found">The boolean value indicates founds or not.</param>
            <returns>Returns the index.</returns>
        </member>
        <member name="P:Syncfusion.WinForms.Core.Styles.LargeSortedObjectMap.Count">
            <summary>
            The integer value contains the count.
            </summary>
        </member>
        <member name="P:Syncfusion.WinForms.Core.Styles.LargeSortedObjectMap.ItemCount">
            <summary>
            Gets or sets a number of items in the map.
            </summary>
        </member>
        <member name="T:Syncfusion.WinForms.Core.Styles.StaticDataFieldAttribute">
            <summary>
            Allows you to specify a custom name for the StaticData field
            in a <see cref="T:Syncfusion.WinForms.Core.Styles.StyleInfoStore"/>. 
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Core.Styles.StaticDataFieldAttribute.Default">
            <summary>
            Specifies the default field name as "staticDataStore".
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Core.Styles.StaticDataFieldAttribute.fieldName">
            <summary>
            The field name.
            </summary>
        </member>
        <member name="M:Syncfusion.WinForms.Core.Styles.StaticDataFieldAttribute.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.WinForms.Core.Styles.StaticDataFieldAttribute"/> class.
            </summary>
            <param name="fieldName">The string value contains name of the field.</param>
        </member>
        <member name="M:Syncfusion.WinForms.Core.Styles.StaticDataFieldAttribute.IsDefaultAttribute">
            <summary>
            Indicates whether the value of this instance is the default value for the derived class.
            </summary>
            <returns>Returns the boolean value.</returns>
        </member>
        <member name="M:Syncfusion.WinForms.Core.Styles.StaticDataFieldAttribute.GetHashCode">
            <summary>
            Returns the hash code for this instance.
            </summary>
            <returns>Returns the hash code.</returns>
        </member>
        <member name="M:Syncfusion.WinForms.Core.Styles.StaticDataFieldAttribute.Equals(System.Object)">
            <summary>
            Returns a value that indicates whether this instance is equal to the specified object.
            </summary>
            <param name="obj">The object used to compare.</param>
            <returns>Returns true is both are equal, otherwise false.</returns>
        </member>
        <member name="P:Syncfusion.WinForms.Core.Styles.StaticDataFieldAttribute.FieldName">
            <summary>
            Gets the field name in the <see cref="T:Syncfusion.WinForms.Core.Styles.StyleInfoStore"/> class 
            that identifies the static data store.
            </summary>
        </member>
        <member name="T:Syncfusion.WinForms.Core.Styles.StyleChangedEventArgs">
            <summary>
            Provides data for the <see cref="E:Syncfusion.WinForms.Core.Styles.StyleInfoBase.Changed"/> event.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Core.Styles.StyleChangedEventArgs.sip">
            <summary>
            The style info properly.
            </summary>
        </member>
        <member name="M:Syncfusion.WinForms.Core.Styles.StyleChangedEventArgs.#ctor(Syncfusion.WinForms.Core.Styles.StyleInfoProperty)">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.WinForms.Core.Styles.StyleChangedEventArgs"/> class with the property that has changed.
            </summary>
            <param name="sip">Identifies the property that has changed.</param>
        </member>
        <member name="P:Syncfusion.WinForms.Core.Styles.StyleChangedEventArgs.Sip">
            <summary>
            Gets the property that has changed.
            </summary>		
        </member>
        <member name="T:Syncfusion.WinForms.Core.Styles.StyleChangedEventHandler">
            <summary>
            Handles the <see cref="E:Syncfusion.WinForms.Core.Styles.StyleInfoBase.Changed"/> event.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">A <see cref="T:Syncfusion.WinForms.Core.Styles.StyleChangedEventArgs"/> that contains the event data.</param>
        </member>
        <member name="T:Syncfusion.WinForms.Core.Styles.CreateSubObjectHandler">
            <summary>
            The event handler for the create sub object.
            </summary>
            <param name="identity">A StyleInfoSubObjectIdentity value.</param>
            <param name="store">The value contains the store.</param>
            <returns>Returns the object value.</returns>
        </member>
        <member name="T:Syncfusion.WinForms.Core.Styles.IStyleCloneable">
            <summary>
            Implement this interface if you want to assign this class to a <see cref="T:Syncfusion.WinForms.Core.Styles.StyleInfoBase"/> object's
            property and you need to control whether the object should be cloned.
            </summary>
            <remarks>
            This interface is only considered if the <see cref="T:Syncfusion.WinForms.Core.Styles.CloneablePropertyAttribute"/> of
            <see cref="P:Syncfusion.WinForms.Core.Styles.StyleInfoProperty.IsCloneable"/> of the <seea cref="T:Syncfusion.WinForms.Core.Styles.StyleInfoProperty"/> is True. 
            (This is the default.) 
            </remarks>
            <seealso cref="P:Syncfusion.WinForms.Core.Styles.StyleInfoProperty.IsCloneable"/> 
            <seealso cref="T:Syncfusion.WinForms.Core.Styles.CloneablePropertyAttribute"/>
        </member>
        <member name="M:Syncfusion.WinForms.Core.Styles.IStyleCloneable.Clone">
            <summary>
            Clones this object.
            </summary>
            <returns>A reference to a clone of this object.</returns>
        </member>
        <member name="M:Syncfusion.WinForms.Core.Styles.IStyleCloneable.Dispose">
            <summary>
            Disposes this object.
            </summary>
        </member>
        <member name="M:Syncfusion.WinForms.Core.Styles.IStyleCloneable.ShouldClone">
            <summary>
            Returns True if this object should be cloned if you assign it to a <see cref="T:Syncfusion.WinForms.Core.Styles.StyleInfoBase"/> object's
            property; false otherwise.
            </summary>
            <returns>True if this object should be cloned if you assign it to a <see cref="T:Syncfusion.WinForms.Core.Styles.StyleInfoBase"/> object's
            property; false otherwise.</returns>
        </member>
        <member name="M:Syncfusion.WinForms.Core.Styles.IStyleCloneable.ShouldDispose">
            <summary>
            Returns True if this object should be disposed if it is reset in a <see cref="T:Syncfusion.WinForms.Core.Styles.StyleInfoBase"/> object's
            property; false otherwise.
            </summary>
            <returns>True if this object should be disposed if it is reset in a <see cref="T:Syncfusion.WinForms.Core.Styles.StyleInfoBase"/> object's
            property; false otherwise.</returns>
        </member>
        <member name="T:Syncfusion.WinForms.Core.Styles.IStyleChanged">
            <summary>
            Implements the <see cref="M:Syncfusion.WinForms.Core.Styles.IStyleChanged.StyleChanged(Syncfusion.WinForms.Core.Styles.StyleChangedEventArgs)"/> method which is called from
            <see cref="M:Syncfusion.WinForms.Core.Styles.StyleInfoBase.OnStyleChanged(Syncfusion.WinForms.Core.Styles.StyleInfoProperty)"/> of a <see cref="T:Syncfusion.WinForms.Core.Styles.StyleInfoBase"/>
            if the object is in <see cref="P:Syncfusion.WinForms.Core.Styles.StyleInfoBase.WeakReferenceChangedListeners"/>
            collection.
            </summary>
        </member>
        <member name="M:Syncfusion.WinForms.Core.Styles.IStyleChanged.StyleChanged(Syncfusion.WinForms.Core.Styles.StyleChangedEventArgs)">
            <summary>
            Called from <see cref="M:Syncfusion.WinForms.Core.Styles.StyleInfoBase.OnStyleChanged(Syncfusion.WinForms.Core.Styles.StyleInfoProperty)"/> of a 
            <see cref="T:Syncfusion.WinForms.Core.Styles.StyleInfoBase"/> object.
            </summary>
            <param name="e">The <see cref="T:Syncfusion.WinForms.Core.Styles.StyleChangedEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="T:Syncfusion.WinForms.Core.Styles.SerializePropertyAttribute">
            <summary>
            Specifies whether a property should be serialized.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Core.Styles.SerializePropertyAttribute.Yes">
            <summary>
              <para>Specifies that a property should be serialized. 
              This <see langword="static" /> field is Read-only.</para>
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Core.Styles.SerializePropertyAttribute.No">
            <summary>
              <para>Specifies that a property should not be serialized. 
              This <see langword="static" /> field is Read-only.</para>
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Core.Styles.SerializePropertyAttribute.Default">
            <summary>
            The default setting for this attribute.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Core.Styles.SerializePropertyAttribute.serializeProperty">
            <summary>
            The boolean value.
            </summary>
        </member>
        <member name="M:Syncfusion.WinForms.Core.Styles.SerializePropertyAttribute.#ctor(System.Boolean)">
            <summary>
            <para>Initializes a new instance of the <see cref="T:Syncfusion.WinForms.Core.Styles.SerializePropertyAttribute"/> class.</para>
            </summary>
            <param name="serializeProperty">
            <see langword="True"/> if a property should be serialized; <see langword="False"/> otherwise. The default is <see langword="True"/>.</param>
        </member>
        <member name="M:Syncfusion.WinForms.Core.Styles.SerializePropertyAttribute.IsSerializeProperty(System.Reflection.PropertyInfo)">
            <summary>
            Indicates whether the <see cref="T:Syncfusion.WinForms.Core.Styles.SerializePropertyAttribute"/> has been set for the property.
            </summary>
            <param name="info">A <see cref="T:System.Reflection.PropertyInfo"/></param>
            <returns>True if property has a <see cref="T:Syncfusion.WinForms.Core.Styles.SerializePropertyAttribute"/>; False otherwise.</returns>
        </member>
        <member name="M:Syncfusion.WinForms.Core.Styles.SerializePropertyAttribute.IsDefaultAttribute">
            <summary>
            Checks whether this the default attribute or not.
            </summary>
            <returns>Returns true if the default attribute, otherwise false.</returns>
        </member>
        <member name="M:Syncfusion.WinForms.Core.Styles.SerializePropertyAttribute.GetHashCode">
            <summary>
            Returns the hash code for this instance.
            </summary>
            <returns>Returns the hash code.</returns>
        </member>
        <member name="M:Syncfusion.WinForms.Core.Styles.SerializePropertyAttribute.Equals(System.Object)">
            <summary>
            Checks whether the give object is equal to the current object,
            </summary>
            <param name="obj">The object need to compare.</param>
            <returns>Returns true if both are equal, otherwise false.</returns>
        </member>
        <member name="P:Syncfusion.WinForms.Core.Styles.SerializePropertyAttribute.SerializeProperty">
            <summary>
             Gets a value indicating whether a property is shown in the ToString result.
            </summary>
        </member>
        <member name="T:Syncfusion.WinForms.Core.Styles.CloneablePropertyAttribute">
            <summary>
            Specifies whether a property should be cloned.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Core.Styles.CloneablePropertyAttribute.Yes">
            <summary>
              <para>Specifies that a property should be cloned if the assigned object implements <see cref="T:System.ICloneable"/>. 
              This <see langword="static"/> field is Read-only.</para>
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Core.Styles.CloneablePropertyAttribute.No">
            <summary>
              <para>Specifies that a property should never be cloned even if the assigned object implements <see cref="T:System.ICloneable"/>
              This <see langword="static"/> field is Read-only.</para>
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Core.Styles.CloneablePropertyAttribute.Default">
            <summary>
            The default setting for this attribute.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Core.Styles.CloneablePropertyAttribute.cloneableProperty">
            <summary>
            Indicates the property is able to clone or not.
            </summary>
        </member>
        <member name="M:Syncfusion.WinForms.Core.Styles.CloneablePropertyAttribute.#ctor(System.Boolean)">
            <summary>
            <para>Initializes a new instance of the <see cref="T:Syncfusion.WinForms.Core.Styles.CloneablePropertyAttribute"/> class.</para>
            </summary>
            <param name="cloneableProperty">
            <see langword="True"/> if a property should be should be cloned if the assigned object implements <see cref="T:System.ICloneable"/>; <see langword="False"/> otherwise. The default is <see langword="True"/></param>
        </member>
        <member name="M:Syncfusion.WinForms.Core.Styles.CloneablePropertyAttribute.IsCloneableProperty(System.Reflection.PropertyInfo)">
            <summary>
            Indicates whether the <see cref="T:Syncfusion.WinForms.Core.Styles.CloneablePropertyAttribute"/> has been set for the property.
            </summary>
            <param name="info">A <see cref="T:System.Reflection.PropertyInfo"/></param>
            <returns>True if property has a <see cref="T:Syncfusion.WinForms.Core.Styles.CloneablePropertyAttribute"/>; false otherwise.</returns>
        </member>
        <member name="M:Syncfusion.WinForms.Core.Styles.CloneablePropertyAttribute.IsDefaultAttribute">
            <summary>
            Checks whether the attribute is default.
            </summary>
            <returns>Returns true if default, otherwise false.</returns>
        </member>
        <member name="M:Syncfusion.WinForms.Core.Styles.CloneablePropertyAttribute.GetHashCode">
            <summary>
            Returns the hash code for this instance.
            </summary>
            <returns>Returns the hash code.</returns>
        </member>
        <member name="M:Syncfusion.WinForms.Core.Styles.CloneablePropertyAttribute.Equals(System.Object)">
            <summary>
            Checks whether the current instance is equal to the given object.
            </summary>
            <param name="obj">The object used to compare with current instance.</param>
            <returns>Returns true if both are equal, otherwise false.</returns>
        </member>
        <member name="P:Syncfusion.WinForms.Core.Styles.CloneablePropertyAttribute.CloneableProperty">
            <summary>
            Gets a value indicating whether a property should be cloned if the assigned object implements <see cref="T:System.ICloneable"/>.
            </summary>
        </member>
        <member name="T:Syncfusion.WinForms.Core.Styles.DisposeablePropertyAttribute">
            <summary>
            Specifies whether a property should be disposed.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Core.Styles.DisposeablePropertyAttribute.Yes">
            <summary>
              <para>Specifies that a property should be disposed if the assigned object implements <see cref="T:System.IDisposable"/>. 
              This <see langword="static"/> field is Read-only.</para>
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Core.Styles.DisposeablePropertyAttribute.No">
            <summary>
              <para>Specifies that a property should never be disposed even if the assigned object implements <see cref="T:System.IDisposable"/>
              This <see langword="static"/> field is Read-only.</para>
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Core.Styles.DisposeablePropertyAttribute.Default">
            <summary>
            The default setting for this attribute.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Core.Styles.DisposeablePropertyAttribute.disposeableProperty">
            <summary>
            The boolean value indicates the property is disposable,
            </summary>
        </member>
        <member name="M:Syncfusion.WinForms.Core.Styles.DisposeablePropertyAttribute.#ctor(System.Boolean)">
            <summary>
            <para>Initializes a new instance of the <see cref="T:Syncfusion.WinForms.Core.Styles.DisposeablePropertyAttribute"/> class.</para>
            </summary>
            <param name="disposeableProperty">
            <see langword="True"/> if a property should be should be disposed if the assigned object implements <see cref="T:System.IDisposable"/>; <see langword="False"/> otherwise. The default is <see langword="True"/></param>
        </member>
        <member name="M:Syncfusion.WinForms.Core.Styles.DisposeablePropertyAttribute.IsDefaultAttribute">
            <summary>
            Checks whether the property i default attribute.
            </summary>
            <returns>Returns true if default, otherwise false.</returns>
        </member>
        <member name="M:Syncfusion.WinForms.Core.Styles.DisposeablePropertyAttribute.GetHashCode">
            <summary>
            Returns the hash code of the current instance.
            </summary>
            <returns>Returns the hash code.</returns>
        </member>
        <member name="M:Syncfusion.WinForms.Core.Styles.DisposeablePropertyAttribute.Equals(System.Object)">
            <summary>
            Checks whether the current instance and the object is equal or not.
            </summary>
            <param name="obj">The object to compare.</param>
            <returns>Returns true if both are equal, otherwise false.</returns>
        </member>
        <member name="M:Syncfusion.WinForms.Core.Styles.DisposeablePropertyAttribute.IsDisposeableProperty(System.Reflection.PropertyInfo)">
            <summary>
            Indicates whether the <see cref="T:Syncfusion.WinForms.Core.Styles.DisposeablePropertyAttribute"/> has been set for the property.
            </summary>
            <param name="info">A <see cref="T:System.Reflection.PropertyInfo"/>.</param>
            <returns>True if property has a <see cref="T:Syncfusion.WinForms.Core.Styles.DisposeablePropertyAttribute"/>; false otherwise.</returns>
        </member>
        <member name="M:Syncfusion.WinForms.Core.Styles.DisposeablePropertyAttribute.IsDisposableProperty(System.Reflection.PropertyInfo)">
            <summary>
            Indicates whether the <see cref="T:Syncfusion.WinForms.Core.Styles.DisposeablePropertyAttribute"/> has been set for the property.
            </summary>
            <param name="info">A <see cref="T:System.Reflection.PropertyInfo"/>.</param>
            <returns>True if property has a <see cref="T:Syncfusion.WinForms.Core.Styles.DisposeablePropertyAttribute"/>; false otherwise.</returns>
        </member>
        <member name="P:Syncfusion.WinForms.Core.Styles.DisposeablePropertyAttribute.DisposeableProperty">
            <summary>
            Gets a value indicating whether a property should be disposed if the assigned object implements <see cref="T:System.IDisposable"/>.
            </summary>
        </member>
        <member name="T:Syncfusion.WinForms.Core.Styles.StyleInfoBaseConverter">
            <summary>
               <para>Provides a type converter to convert expandable objects to and from various
                  other representations.</para>
            </summary>
        </member>
        <member name="M:Syncfusion.WinForms.Core.Styles.StyleInfoBaseConverter.GetPropertiesSupported(System.ComponentModel.ITypeDescriptorContext)">
            <summary>
               <para>Indicates whether this object supports properties using the
                  specified context.</para>
            </summary>
            <param name="context">The type descriptor context.</param>
            <returns>Returns true if success, otherwise false.</returns>
        </member>
        <member name="M:Syncfusion.WinForms.Core.Styles.StyleInfoBaseConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)">
            <summary>
               <para>Indicates whether this converter can
                  convert an object to the given destination type using the specified context.</para>
            </summary>
            <param name="context">A type descriptor context.</param>
            <param name="destinationType">The destination type.</param>
            <returns>Returns true if able to convert, otherwise false.</returns>
        </member>
        <member name="M:Syncfusion.WinForms.Core.Styles.StyleInfoBaseConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
            <summary>
               <para>Converts the given value object to
                  the specified destination type using the specified context and arguments.</para>
            </summary>
            <param name="context">The type descriptor context.</param>
            <param name="culture">The culture value.</param>
            <param name="value">The value to convert.</param>
            <param name="destinationType">The destination type.</param>
            <returns>Returns the converted object value.</returns>
        </member>
        <member name="M:Syncfusion.WinForms.Core.Styles.StyleInfoBaseConverter.GetProperties(System.ComponentModel.ITypeDescriptorContext,System.Object,System.Attribute[])">
            <summary>
               <para>Returns a collection of properties for
                  the type of array specified by the value parameter using the specified context and
                  attributes.</para>
            </summary>
            <param name="context">The type descriptor context.</param>
            <param name="value">The value to convert.</param>
            <param name="attributes">The attribute collection.</param>
            <returns>Returns the property descriptor collection.</returns>
        </member>
        <member name="T:Syncfusion.WinForms.Core.Styles.StyleInfoObjectStore">
            <internalonly/>
            <summary>
            Represents a base class that stores the style objects.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Core.Styles.StyleInfoObjectStore.currentKey">
            <summary>
            The current key index.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Core.Styles.StyleInfoObjectStore.frugalMap">
            <summary>
            The <see cref="T:Syncfusion.WinForms.Core.Styles.FrugalMap"/> instance.
            </summary>
        </member>
        <member name="M:Syncfusion.WinForms.Core.Styles.StyleInfoObjectStore.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.WinForms.Core.Styles.StyleInfoObjectStore"/> class.
            </summary>
        </member>
        <member name="M:Syncfusion.WinForms.Core.Styles.StyleInfoObjectStore.CreateKey">
            <summary>
            Creates a key value.
            </summary>
            <returns>Returns the created key value.</returns>
        </member>
        <member name="M:Syncfusion.WinForms.Core.Styles.StyleInfoObjectStore.Dispose">
            <summary>
            Releases all the resources used by the <see cref="T:Syncfusion.WinForms.Core.Styles.StyleInfoObjectStore"/> class.
            </summary>
        </member>
        <member name="M:Syncfusion.WinForms.Core.Styles.StyleInfoObjectStore.GetObject(System.Int32)">
            <summary>
            Returns an object based on the key value.
            </summary>
            <param name="key">A key value.</param>
            <returns>Returns an object.</returns>
        </member>
        <member name="M:Syncfusion.WinForms.Core.Styles.StyleInfoObjectStore.ContainsObject(System.Int32)">
            <summary>
            Checks whether frugal map storage contains an item based on the given key value.
            </summary>
            <param name="key">A key value.</param>
            <returns>Returns true if storage contains an item otherwise false.</returns>
        </member>
        <member name="M:Syncfusion.WinForms.Core.Styles.StyleInfoObjectStore.GetObject(System.Int32,System.Boolean@)">
            <summary>
            Returns an object from the frugal map storage based on given key.
            </summary>
            <param name="key">A key value to be found.</param>
            <param name="found">When method found the key value in storage, it will return true. Otherwise false.</param>
            <returns>Returns an object.</returns>
        </member>
        <member name="M:Syncfusion.WinForms.Core.Styles.StyleInfoObjectStore.SetObject(System.Int32,System.Object)">
            <summary>
            Sets an object based on the given key value.
            </summary>
            <param name="key">A key value.</param>
            <param name="value">An object value to be set in storage.</param>
        </member>
        <member name="M:Syncfusion.WinForms.Core.Styles.StyleInfoObjectStore.RemoveObject(System.Int32)">
            <summary>
            Removes an object from the storage based on the key value.
            </summary>
            <param name="key">A key value to be removed.</param>
        </member>
        <member name="M:Syncfusion.WinForms.Core.Styles.StyleInfoObjectStore.GetKeyValuePair(System.Int32,System.Int32@,System.Object@)">
            <summary>
            Returns the Key/Value pair based on the given index.
            </summary>
            <param name="index">An index of the item in the storage.</param>
            <param name="key">A key value.</param>
            <param name="value">An object.</param>
        </member>
        <member name="M:Syncfusion.WinForms.Core.Styles.StyleInfoObjectStore.Sort">
            <summary>
            Sorts the items in the storage.
            </summary>
        </member>
        <member name="M:Syncfusion.WinForms.Core.Styles.StyleInfoObjectStore.Clear">
            <summary>
            Clears the style objects from the storage.
            </summary>
        </member>
        <member name="M:Syncfusion.WinForms.Core.Styles.StyleInfoObjectStore.Iterate(System.Collections.ArrayList,Syncfusion.WinForms.Core.Styles.FrugalMapIterationCallback)">
            <summary>
            Iterates the storage.
            </summary>
            <param name="list">List of items.</param>
            <param name="callback">The call back.</param>
        </member>
        <member name="M:Syncfusion.WinForms.Core.Styles.StyleInfoObjectStore.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:Syncfusion.WinForms.Core.Styles.StyleInfoObjectStore._Dispose(System.Object)">
            <summary>
            Releases all the resources used by the <see cref="T:Syncfusion.WinForms.Core.Styles.StyleInfoSubObjectBase"/> class.
            </summary>
            <param name="obj">The object.</param>
        </member>
        <member name="M:Syncfusion.WinForms.Core.Styles.StyleInfoObjectStore.DisposeCallback(System.Collections.ArrayList,System.Int32,System.Object)">
            <summary>
            Releases all the resources used by the <see cref="T:Syncfusion.WinForms.Core.Styles.StyleInfoObjectStore"/> class.        /// </summary>
            <param name="list">A collection of items.</param>
            <param name="key">A key value.</param>
            <param name="value">An object value to be disposed.</param>
        </member>
        <member name="P:Syncfusion.WinForms.Core.Styles.StyleInfoObjectStore.Count">
            <summary>
            Gets the Size of this data store 
            </summary>
        </member>
        <member name="P:Syncfusion.WinForms.Core.Styles.StyleInfoObjectStore.Item(System.Int32)">
            <summary>
            Gets or sets an item from the frugal map storage model.
            </summary>
            <param name="key">The key value.</param>
            <returns>Returns the value based on the key vale.</returns>
        </member>
        <member name="T:Syncfusion.WinForms.Core.Styles.StyleInfoPropertyConvertEventHandler">
            <summary>
            Handles the <see cref="E:Syncfusion.WinForms.Core.Styles.StyleInfoProperty.Format"/> or <see cref="E:Syncfusion.WinForms.Core.Styles.StyleInfoProperty.Parse"/> event
            </summary>
            <param name="sender">The sender.</param>
            <param name="e">contains the event data</param>
        </member>
        <member name="T:Syncfusion.WinForms.Core.Styles.StyleInfoPropertyWriteXmlEventHandler">
            <summary>
            Handles the <see cref="E:Syncfusion.WinForms.Core.Styles.StyleInfoProperty.WriteXml"/> event of <see cref="T:Syncfusion.WinForms.Core.Styles.StyleInfoProperty"/>.
            </summary>
            <param name="sender">The sender.</param>
            <param name="e">contains the event data</param>
        </member>
        <member name="T:Syncfusion.WinForms.Core.Styles.StyleInfoPropertyReadXmlEventHandler">
            <summary>
            Handles the <see cref="E:Syncfusion.WinForms.Core.Styles.StyleInfoProperty.ReadXml"/> event of <see cref="T:Syncfusion.WinForms.Core.Styles.StyleInfoProperty"/>.
            </summary>
            <param name="sender">The sender.</param>
            <param name="e">contains the event data</param>
        </member>
        <member name="T:Syncfusion.WinForms.Core.Styles.StyleInfoProperty">
            <summary>
            Provides a unique identifier for a property in a style object and stores
            information about the associated property.
            </summary>
            <remarks>
            <see cref="T:Syncfusion.WinForms.Core.Styles.StyleInfoProperty"/> is allocated once on the global heap for each
            property in a style object. Type safe <see cref="T:Syncfusion.WinForms.Core.Styles.StyleInfoBase"/> wrappers make
            use of StyleInfoProperty to query, set or reset specific properties.
            <para/>
            Holds information about the property: PropertyType, Name, how to load and save
            its state in StyleInfoStore, attributes, etc.
            </remarks>
        </member>
        <member name="F:Syncfusion.WinForms.Core.Styles.StyleInfoProperty.IsBrowsable">
            <summary>
            If property is marked with true, custom attribute of this flag allows you
            to specify whether the property should appear in PropertyGrid. If property is marked
            with false, then this setting will have no effect. Default is true.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Core.Styles.StyleInfoProperty.IsAnyObject">
            <summary>
            Indicates whether type information should be included when <see cref="E:Syncfusion.WinForms.Core.Styles.StyleInfoProperty.Format"/> is called. Use
            this if PropertyType is System.Object and you want to be able to parse written values.
            An example is GridStyleInfo.CellValue. Default is false.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Core.Styles.StyleInfoProperty.IsConvertibleToBase64">
            <summary>
            Indicates whether type information should be converted to Base64 if associated
            Type converter supports converting value to and from Base64. An example is a bitmap assigned to GridStyleInfo.CellValue.
            If IsConvertibleToBase64String is true, then the grid will convert the bitmap to a Base64 string
            and write out the information in the GridStyleInfo.ToString() method and also in the WriteXml method. Default is false.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Core.Styles.StyleInfoProperty.SerializeXmlBehavior">
            <summary>
            Defines how to serialize property when style data is serialized to or from an XML stream
            with <see cref="T:System.Xml.Serialization.XmlSerializer"/>.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Core.Styles.StyleInfoProperty.DataVectorIndex">
            <summary>
            The integer value contains the index of the data vector.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Core.Styles.StyleInfoProperty.DataVectorSection">
            <summary>
            The data vector section.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Core.Styles.StyleInfoProperty.MaxValue">
            <summary>
            The short value indicates the maximum value.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Core.Styles.StyleInfoProperty.ObjectStoreKey">
            <summary>
            The integer value contains the key value of the object store.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Core.Styles.StyleInfoProperty.ExpandableObjectStoreKey">
            <summary>
            The integer value contains the key value of the expandable object store.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Core.Styles.StyleInfoProperty.PropertyKey">
            <summary>
            The integer value indicates the key value of the property.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Core.Styles.StyleInfoProperty.BitVectorMask">
            <summary>
            The integer value indicates the bit vector mask.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Core.Styles.StyleInfoProperty.BitVectorIndex">
            <summary>
            The integer value contains the vector index.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Core.Styles.StyleInfoProperty.Index">
            <summary>
            Index in Array List managing your documentation projects.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Core.Styles.StyleInfoProperty.currentKey">
            <summary>
            The current key.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Core.Styles.StyleInfoProperty.propertyInfo">
            <summary>
            The property information.
            </summary>
        </member>
        <member name="M:Syncfusion.WinForms.Core.Styles.StyleInfoProperty.#ctor(System.Type,System.String,System.Int16,System.Type)">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.WinForms.Core.Styles.StyleInfoProperty"/> class.
            </summary>
            <param name="type">The type value</param>
            <param name="name">The string value contains the name of the property.</param>
            <param name="maxValue">The short value contains the maximum value.</param>
            <param name="componentType">The type of the component.</param>
        </member>
        <member name="M:Syncfusion.WinForms.Core.Styles.StyleInfoProperty.ParseValue(System.String,System.Type,System.IFormatProvider)">
            <summary>
            Parses a given value and converts it to a requested <see cref="T:System.Type"/>.
            </summary>
            <param name="s">The string to be parsed.</param>
            <param name="resultType">The <see cref="T:System.Type"/> for the resulting object.</param>
            <param name="provider">A format provider.</param>
            <returns>An object of type "resultType" created from the parsed string information.</returns>
            <remarks>
            The <see cref="E:Syncfusion.WinForms.Core.Styles.StyleInfoProperty.Parse"/> event lets you customize the parsing of this property.
            </remarks>
        </member>
        <member name="M:Syncfusion.WinForms.Core.Styles.StyleInfoProperty.GetPropertyInfo">
            <summary>
            Returns the <see cref="T:System.Reflection.PropertyInfo"/> of this property.
            </summary>
            <returns>Property info of this property.</returns>
        </member>
        <member name="M:Syncfusion.WinForms.Core.Styles.StyleInfoProperty.Dispose">
            <summary>
            Method to dispose StyleInfoProperty object
            </summary>
        </member>
        <member name="M:Syncfusion.WinForms.Core.Styles.StyleInfoProperty.ToString">
            <summary>
            Converts the current instance to the string.
            </summary>
            <returns>Returns the string value.</returns>
        </member>
        <member name="M:Syncfusion.WinForms.Core.Styles.StyleInfoProperty.FormatValue(System.Object)">
            <summary>
            Formats a given value that is of the same type as the <see cref="P:Syncfusion.WinForms.Core.Styles.StyleInfoProperty.PropertyType"/>.
            </summary>
            <param name="value">The value to be formatted.</param>
            <returns>A string with formatted text.</returns>
            <remarks><see cref="M:Syncfusion.WinForms.Core.Styles.StyleInfoStore.ToString"/> calls this method.
            <para/>
            The <see cref="E:Syncfusion.WinForms.Core.Styles.StyleInfoProperty.Format"/> event lets you customize the formatting of this property but care
            should be taken that the formatted text can be consumed by the <see cref="M:Syncfusion.WinForms.Core.Styles.StyleInfoProperty.ParseValue(System.String)"/>
            method.
            </remarks>
        </member>
        <member name="M:Syncfusion.WinForms.Core.Styles.StyleInfoProperty.ParseValue(System.String)">
            <summary>
            Overloaded. Parses a given value that is of the same type as the <see cref="P:Syncfusion.WinForms.Core.Styles.StyleInfoProperty.PropertyType"/>.
            </summary>
            <param name="s">The string to be parsed.</param>
            <returns>An object of the same type as the <see cref="P:Syncfusion.WinForms.Core.Styles.StyleInfoProperty.PropertyType"/> created from the parsed string information.</returns>
            <remarks>
            <see cref="M:Syncfusion.WinForms.Core.Styles.StyleInfoBase.ParseString(System.String)"/> calls this method.
            <para/>
            The <see cref="E:Syncfusion.WinForms.Core.Styles.StyleInfoProperty.Parse"/> event lets you customize the parsing of this property.
            </remarks>
        </member>
        <member name="M:Syncfusion.WinForms.Core.Styles.StyleInfoProperty.ProcessWriteXml(System.Xml.XmlWriter,Syncfusion.WinForms.Core.Styles.StyleInfoStore)">
            <summary>
            Writes the information by using the writer.
            </summary>
            <param name="writer">The XmlWriter used to write the information.</param>
            <param name="store">The style info store.</param>
            <returns>Returns true, if able to write the xml file.</returns>
        </member>
        <member name="M:Syncfusion.WinForms.Core.Styles.StyleInfoProperty.ProcessReadXml(System.Xml.XmlReader,Syncfusion.WinForms.Core.Styles.StyleInfoStore)">
            <summary>
            Read the xml content from the reader.
            </summary>
            <param name="reader">The xml reader.</param>
            <param name="store">The style info store object.</param>
            <returns>Returns whether able to read or not.</returns>
        </member>
        <member name="M:Syncfusion.WinForms.Core.Styles.StyleInfoProperty.CreatePropertyKey">
            <summary>
            Creates a property key.
            </summary>
            <returns>Returns integer value.</returns>
        </member>
        <member name="E:Syncfusion.WinForms.Core.Styles.StyleInfoProperty.WriteXml">
            <summary>
            Handles requests to serialize this property to an XML stream during an
            serialize operation of the <see cref="T:System.Xml.Serialization.XmlSerializer"/>
            class.
            </summary>
            <remarks>
            This event allows you to implement a different serialization mechanism if many style objects
            reference and share the same object, (e.g. if you assign a DataSet to
            several objects DataSource property). With such a scenario, you could write out an
            identifier and when the property is deserialized from an XML stream, you could
            reconstruct a reference to a data source object based on the identifier.
            </remarks>
        </member>
        <member name="E:Syncfusion.WinForms.Core.Styles.StyleInfoProperty.ReadXml">
            <summary>
            Handles requests to deserialize this property from an XML stream during an
            deserialize operation of the <see cref="T:System.Xml.Serialization.XmlSerializer"/>
            class.
            </summary>
            <remarks>
            This event allows you to implement a different serialization mechanism if many style objects
            reference and share the same object, (e.g. if you assign a DataSet to
            several objects Data Source property). With such a scenario, you could write out an
            identifier and when the property is deserialized from an XML stream you could
            reconstruct a reference to a data source object based on the identifier.
            </remarks>
        </member>
        <member name="E:Syncfusion.WinForms.Core.Styles.StyleInfoProperty.Parse">
            <summary>
            Handles parse requests for this property.
            </summary>
        </member>
        <member name="E:Syncfusion.WinForms.Core.Styles.StyleInfoProperty.Format">
            <summary>
            Handles formatting requests for this property.
            </summary>
        </member>
        <member name="P:Syncfusion.WinForms.Core.Styles.StyleInfoProperty.ComponentType">
            <summary>
            Gets or sets a type of the component this property is bound to.
            </summary>
        </member>
        <member name="P:Syncfusion.WinForms.Core.Styles.StyleInfoProperty.PropertyType">
            <summary>
            Gets or sets a type of the property.
            </summary>
        </member>
        <member name="P:Syncfusion.WinForms.Core.Styles.StyleInfoProperty.PropertyName">
            <summary>
            Gets or sets a name of the property.
            </summary>
        </member>
        <member name="P:Syncfusion.WinForms.Core.Styles.StyleInfoProperty.CreateObject">
            <summary>
            Gets or sets a method that creates a Sub object of this type and associates it with a parent style object.
            </summary>
        </member>
        <member name="P:Syncfusion.WinForms.Core.Styles.StyleInfoProperty.IsExpandable">
            <summary>
            Gets or sets a value indicating whether this is an object derived from <see cref="T:Syncfusion.WinForms.Core.Styles.StyleInfoSubObjectBase"/>.
            </summary>
        </member>
        <member name="P:Syncfusion.WinForms.Core.Styles.StyleInfoProperty.IsSerializable">
            <summary>
            Gets or sets a value indicating whether this object supports being serialized. The value can be set
            with a <see cref="T:Syncfusion.WinForms.Core.Styles.SerializePropertyAttribute"/> in your class implementation.
            </summary>
        </member>
        <member name="P:Syncfusion.WinForms.Core.Styles.StyleInfoProperty.IsCloneable">
            <summary>
            Gets or sets a value indicating whether this object should call <see cref="M:System.ICloneable.Clone"/> when an assigned object implements
            the <see cref="T:System.ICloneable"/> or <see cref="T:Syncfusion.WinForms.Core.Styles.IStyleCloneable"/> interface. The value can be set
            with a <see cref="T:Syncfusion.WinForms.Core.Styles.CloneablePropertyAttribute"/> in your class implementation.
            </summary>
        </member>
        <member name="P:Syncfusion.WinForms.Core.Styles.StyleInfoProperty.IsDisposable">
            <summary>
            Gets or sets a value indicating whether this object should call <see cref="M:System.ICloneable.Clone"/> when an assigned object implements
            the IDisposable or <see cref="T:Syncfusion.WinForms.Core.Styles.IStyleCloneable"/> interface. The value can be set
            also with a <see cref="T:Syncfusion.WinForms.Core.Styles.DisposeablePropertyAttribute"/> in your class implementation.
            </summary>
        </member>
        <member name="T:Syncfusion.WinForms.Core.Styles.StyleInfoPropertyConvertEventArgs">
            <summary>
            Provides data for the <see cref="E:Syncfusion.WinForms.Core.Styles.StyleInfoProperty.Format"/> and <see cref="E:Syncfusion.WinForms.Core.Styles.StyleInfoProperty.Parse"/> events.
            </summary>
            <remarks>
            The <see cref="T:Syncfusion.WinForms.Core.Styles.StyleInfoPropertyConvertEventArgs"/> is used to format and un-format values represented by
            a property in a <see cref="T:Syncfusion.WinForms.Core.Styles.StyleInfoStore"/> object. The Format event occurs whenever a property
            is written out as string and the Parse event occurs whenever the value is read back in from a string.
            <para/>
            If you handle this event, store the resulting value into <see cref="P:Syncfusion.WinForms.Core.Styles.StyleInfoPropertyConvertEventArgs.Value"/> and
            set <see cref="P:Syncfusion.WinForms.Core.Styles.SyncfusionHandledEventArgs.Handled"/> to True.
            </remarks>
        </member>
        <member name="T:Syncfusion.WinForms.Core.Styles.SyncfusionHandledEventArgs">
            <summary>
            Provides data for a event that can be handled by a subscriber and overrides the event's default behavior.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Core.Styles.SyncfusionHandledEventArgs.handled">
            <summary>
            The boolean value indicates the event is handled.
            </summary>
        </member>
        <member name="M:Syncfusion.WinForms.Core.Styles.SyncfusionHandledEventArgs.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.WinForms.Core.Styles.SyncfusionHandledEventArgs"/> class with the Handled property set to False.
            </summary>
        </member>
        <member name="M:Syncfusion.WinForms.Core.Styles.SyncfusionHandledEventArgs.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.WinForms.Core.Styles.SyncfusionHandledEventArgs"/> class with the Handled property set to the given value.
            </summary>
            <param name="handled">The boolean value indicates whether event has handled.</param>
        </member>
        <member name="P:Syncfusion.WinForms.Core.Styles.SyncfusionHandledEventArgs.Handled">
            <summary>
            Gets or sets a value indicating whether the event should be handled or not.
            </summary>
            <value>True or False.</value>
        </member>
        <member name="F:Syncfusion.WinForms.Core.Styles.StyleInfoPropertyConvertEventArgs.desiredType">
            <summary>
            The desired type.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Core.Styles.StyleInfoPropertyConvertEventArgs.value">
            <summary>
            The value.
            </summary>
        </member>
        <member name="M:Syncfusion.WinForms.Core.Styles.StyleInfoPropertyConvertEventArgs.#ctor(System.Object,System.Type)">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.WinForms.Core.Styles.StyleInfoPropertyConvertEventArgs"/> class.
            </summary>
            <param name="value">An Object that contains the value of the current property.</param>
            <param name="desiredType">The Type of the value.</param>
        </member>
        <member name="P:Syncfusion.WinForms.Core.Styles.StyleInfoPropertyConvertEventArgs.Value">
            <summary>
            Gets or sets the value of the <see cref="T:Syncfusion.WinForms.Core.Styles.StyleInfoPropertyConvertEventArgs"/> object.
            </summary>        
        </member>
        <member name="P:Syncfusion.WinForms.Core.Styles.StyleInfoPropertyConvertEventArgs.DesiredType">
            <summary>
            Gets a data type of the desired value.
            </summary>
            <remarks>
            The DesiredType property enables you to check the type of the property that the value is being converted to.
            </remarks>        
        </member>
        <member name="T:Syncfusion.WinForms.Core.Styles.StyleInfoPropertyWriteXmlEventArgs">
            <summary>
            Provides data for the <see cref="E:Syncfusion.WinForms.Core.Styles.StyleInfoProperty.WriteXml"/> event.
            </summary>
            <remarks>
            The <see cref="T:Syncfusion.WinForms.Core.Styles.StyleInfoPropertyWriteXmlEventArgs"/> is used to serialize a property of a
            <see cref="T:Syncfusion.WinForms.Core.Styles.StyleInfoStore"/> object. The WriteXml event occurs whenever a property
            is serialized to an XML stream during an <see cref="M:System.Xml.Serialization.XmlSerializer.Serialize(System.IO.TextWriter,System.Object)"/> operation
            of the <see cref="T:System.Xml.Serialization.XmlSerializer"/> class.
            <para/>
            If you handle this event, you set <see cref="P:Syncfusion.WinForms.Core.Styles.SyncfusionHandledEventArgs.Handled"/> to True.
            Handling this event allows you to customize the way the object is serialized or skip
            serialization.
            <para/>
            This event allows you to implement a different serialization mechanism if many style objects
            reference and share the same object, (e.g. if you assign a DataSet to
            several objects' DataSource property). With such a scenario, you could write out a
            identifier and when the property is deserialized from an XML stream, you could
            reconstruct a reference to a data source object based on the identifier.
            </remarks>
        </member>
        <member name="F:Syncfusion.WinForms.Core.Styles.StyleInfoPropertyWriteXmlEventArgs.writer">
            <summary>
            The xml writer
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Core.Styles.StyleInfoPropertyWriteXmlEventArgs.store">
            <summary>
            The style info store value.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Core.Styles.StyleInfoPropertyWriteXmlEventArgs.sip">
            <summary>
            The <see cref="T:Syncfusion.WinForms.Core.Styles.StyleInfoProperty"/>.
            </summary>
        </member>
        <member name="M:Syncfusion.WinForms.Core.Styles.StyleInfoPropertyWriteXmlEventArgs.#ctor(System.Xml.XmlWriter,Syncfusion.WinForms.Core.Styles.StyleInfoStore,Syncfusion.WinForms.Core.Styles.StyleInfoProperty)">
            <summary>
            Initializes a new instance of the<see cref="T:Syncfusion.WinForms.Core.Styles.StyleInfoPropertyWriteXmlEventArgs"/> class.
            </summary>
            <param name="writer">The <see cref="T:System.Xml.XmlWriter"/> for the XML stream.</param>
            <param name="store">The style object that is being serialized.</param>
            <param name="sip">The property that is being serialized.</param>
        </member>
        <member name="P:Syncfusion.WinForms.Core.Styles.StyleInfoPropertyWriteXmlEventArgs.Writer">
            <summary>
            Gets a <see cref="T:System.Xml.XmlWriter"/> for the XML stream.
            </summary>
        </member>
        <member name="P:Syncfusion.WinForms.Core.Styles.StyleInfoPropertyWriteXmlEventArgs.Store">
            <summary>
            Gets a style object that is being serialized.
            </summary>
        </member>
        <member name="P:Syncfusion.WinForms.Core.Styles.StyleInfoPropertyWriteXmlEventArgs.Sip">
            <summary>
            Gets a property that is being serialized. Call <see cref="M:Syncfusion.WinForms.Core.Styles.StyleInfoStore.GetValue(Syncfusion.WinForms.Core.Styles.StyleInfoProperty)"/> of
            the <see cref="P:Syncfusion.WinForms.Core.Styles.StyleInfoPropertyWriteXmlEventArgs.Store"/> to get the value for this property.
            </summary>        
        </member>
        <member name="T:Syncfusion.WinForms.Core.Styles.StyleInfoPropertyReadXmlEventArgs">
            <summary>
            Provides data for the <see cref="E:Syncfusion.WinForms.Core.Styles.StyleInfoProperty.ReadXml"/> event.
            </summary>
            <remarks>
            The <see cref="T:Syncfusion.WinForms.Core.Styles.StyleInfoPropertyReadXmlEventArgs"/> is used to deserialize a property of a
            <see cref="T:Syncfusion.WinForms.Core.Styles.StyleInfoStore"/> object. The ReadXml event occurs whenever a property
            is deserialized from an XML stream during an <see cref="M:System.Xml.Serialization.XmlSerializer.Deserialize(System.IO.TextReader)"/>
            operation of the <see cref="T:System.Xml.Serialization.XmlSerializer"/> class.
            <para/>
            If you handle this event, you set <see cref="P:Syncfusion.WinForms.Core.Styles.SyncfusionHandledEventArgs.Handled"/> to True.
            Call SetValue of
            the <see cref="P:Syncfusion.WinForms.Core.Styles.StyleInfoPropertyReadXmlEventArgs.Store"/> to save the value for this property into the style object.
            Handling this event allows you to customize the way the object is deserialized or skip
            serialization.
            <para/>
            This event allows you to implement a different serialization mechanism if many style objects
            reference and share the same object, (e.g. if you assign a DataSet to
            several objects DataSource property). With such a scenario, you could write out an
            identifier and when the property is deserialized from an XML stream you could
            reconstruct a reference to a data source object based on the identifier.
            </remarks>
        </member>
        <member name="F:Syncfusion.WinForms.Core.Styles.StyleInfoPropertyReadXmlEventArgs.reader">
            <summary>
            The xml reader.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Core.Styles.StyleInfoPropertyReadXmlEventArgs.store">
            <summary>
            The style info store value.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Core.Styles.StyleInfoPropertyReadXmlEventArgs.sip">
            <summary>
            The <see cref="T:Syncfusion.WinForms.Core.Styles.StyleInfoProperty"/> value.
            </summary>
        </member>
        <member name="M:Syncfusion.WinForms.Core.Styles.StyleInfoPropertyReadXmlEventArgs.#ctor(System.Xml.XmlReader,Syncfusion.WinForms.Core.Styles.StyleInfoStore,Syncfusion.WinForms.Core.Styles.StyleInfoProperty)">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.WinForms.Core.Styles.StyleInfoPropertyReadXmlEventArgs"/> class.
            </summary>
            <param name="reader">The <see cref="T:System.Xml.XmlReader"/> for the XML stream.</param>
            <param name="store">The style object that is deserialized.</param>
            <param name="sip">The property that is being deserialized.</param>
        </member>
        <member name="P:Syncfusion.WinForms.Core.Styles.StyleInfoPropertyReadXmlEventArgs.Reader">
            <summary>
            Gets a <see cref="T:System.Xml.XmlReader"/> for the XML stream.
            </summary>
        </member>
        <member name="P:Syncfusion.WinForms.Core.Styles.StyleInfoPropertyReadXmlEventArgs.Store">
            <summary>
            Gets the style object that is deserialized.
            </summary>
        </member>
        <member name="P:Syncfusion.WinForms.Core.Styles.StyleInfoPropertyReadXmlEventArgs.Sip">
            <summary>
            Gets the property that is being deserialized. Call <see cref="M:Syncfusion.WinForms.Core.Styles.StyleInfoStore.SetValue(Syncfusion.WinForms.Core.Styles.StyleInfoProperty,System.Object)"/> of
            the <see cref="P:Syncfusion.WinForms.Core.Styles.StyleInfoPropertyReadXmlEventArgs.Store"/> to save the value for this property into the style object.
            </summary>        
        </member>
        <member name="T:Syncfusion.WinForms.Core.Styles.ValueConvert">
            <summary>
            <see cref="T:Syncfusion.WinForms.Core.Styles.ValueConvert"/> provides conversion routines for values
            to convert them to another type and routines for formatting values.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Core.Styles.ValueConvert.cachedDefaultValues">
            <summary>
            The default values cache.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Core.Styles.ValueConvert.allowFormatValueTrimEnd">
            <summary>
            The boolean value indicates the allow to format the value.
            </summary>
        </member>
        <member name="M:Syncfusion.WinForms.Core.Styles.ValueConvert.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.WinForms.Core.Styles.ValueConvert"/> class.
            </summary>
        </member>
        <member name="M:Syncfusion.WinForms.Core.Styles.ValueConvert.ChangeType(System.Object,System.Type,System.IFormatProvider)">
            <overload>
            Converts value from one type to another using an optional <see cref="T:System.IFormatProvider"/>.
            </overload>
            <summary>
            Converts value from one type to another using an optional <see cref="T:System.IFormatProvider"/>.
            </summary>
            <param name="value">The original value.</param>
            <param name="type">The target type.</param>
            <param name="provider">A <see cref="T:System.IFormatProvider"/> used to format or parse the value.</param>
            <returns>The new value in the target type.</returns>
        </member>
        <member name="M:Syncfusion.WinForms.Core.Styles.ValueConvert.ChangeType(System.Object,System.Type,System.IFormatProvider,System.Boolean)">
            <summary>
            Converts value from one type to another using an optional <see cref="T:System.IFormatProvider"/>.
            </summary>
            <param name="value">The original value.</param>
            <param name="type">The target type.</param>
            <param name="provider">A <see cref="T:System.IFormatProvider"/> used to format or parse the value.</param>
            <param name="returnDbNUllIfNotValid">Indicates whether exceptions should be avoided or catch and return value should be DBNull if
            it cannot be converted to the target type.</param>
            <returns>The new value in the target type.</returns>
        </member>
        <member name="M:Syncfusion.WinForms.Core.Styles.ValueConvert.Parse(System.String,System.Type,System.IFormatProvider,System.String)">
            <summary>
            Parses the given text using the resultTypes "Parse" method or using a type converter.
            </summary>
            <param name="s">The text to parse.</param>
            <param name="resultType">The requested result type.</param>
            <param name="provider">A <see cref="T:System.IFormatProvider"/> used to format or parse the value. Can be NULL.</param>
            <param name="format">A format string used in a <see cref="M:System.Object.ToString"/> call. Right now
            format is only interpreted to enable round tripping for formatted dates.
            </param>
            <returns>The new value in the target type.</returns>
        </member>
        <member name="M:Syncfusion.WinForms.Core.Styles.ValueConvert.Parse(System.String,System.Type,System.IFormatProvider,System.String,System.Boolean)">
            <summary>
            Parse the given text using the resultTypes "Parse" method or using a type converter.
            </summary>
            <param name="s">The text to parse.</param>
            <param name="resultType">The requested result type.</param>
            <param name="provider">A <see cref="T:System.IFormatProvider"/> used to format or parse the value. Can be NULL.</param>
            <param name="format">A format string used in a <see cref="M:System.Object.ToString"/> call. Right now
            format is only interpreted to enable round tripping for formatted dates.
            </param>
            <param name="returnDbNUllIfNotValid">Indicates whether DBNull should be returned if value cannot be parsed. Otherwise an exception is thrown.</param>
            <returns>The new value in the target type.</returns>
        </member>
        <member name="M:Syncfusion.WinForms.Core.Styles.ValueConvert.Parse(System.String,System.Type,System.IFormatProvider,System.String[],System.Boolean)">
            <summary>
            Parse the given text using the resultTypes "Parse" method or using a type converter.
            </summary>
            <param name="s">The text to parse.</param>
            <param name="resultType">The requested result type.</param>
            <param name="provider">A <see cref="T:System.IFormatProvider"/> used to format or parse the value. Can be NULL.</param>
            <param name="formats">A string array holding permissible formats used in a <see cref="M:System.Object.ToString"/> call. Right now
            formats is only interpreted to enable round tripping for formatted dates.
            </param>
            <param name="returnDbNUllIfNotValid">Indicates whether DBNull should be returned if value cannot be parsed. Otherwise an exception is thrown.</param>
            <returns>The new value in the target type.</returns>
        </member>
        <member name="M:Syncfusion.WinForms.Core.Styles.ValueConvert.ChangeType(System.Object,System.Type,System.IFormatProvider,System.String,System.Boolean)">
            <summary>
            Converts value from one type to another using an optional <see cref="T:System.IFormatProvider"/>.
            </summary>
            <param name="value">The original value.</param>
            <param name="type">The target type.</param>
            <param name="provider">A <see cref="T:System.IFormatProvider"/> used to format or parse the value.</param>
            <param name="format">Format string.</param>
            <param name="returnDbNUllIfNotValid">Indicates whether exceptions should be avoided or catch and return value should be DBNull if
            it cannot be converted to the target type.</param>
            <returns>The new value in the target type.</returns>
        </member>
        <member name="M:Syncfusion.WinForms.Core.Styles.ValueConvert.FormatValue(System.Object,System.Type,System.String,System.Globalization.CultureInfo,System.Globalization.NumberFormatInfo)">
            <summary>
            Generates display text using the specified format, culture info and number format.
            </summary>
            <param name="value">The value to format.</param>
            <param name="valueType">The value type on which formatting is based. The original value will first be converted to this type.</param>
            <param name="format">The format like in ToString(string format).</param>
            <param name="ci">The <see cref="T:System.Globalization.CultureInfo"/> for formatting the value.</param>
            <param name="nfi">The <see cref="T:System.Globalization.NumberFormatInfo"/> for formatting the value.</param>
            <returns>The string with the formatted text for the value.</returns>
        </member>
        <member name="M:Syncfusion.WinForms.Core.Styles.ValueConvert.GetDefaultValue(System.Type)">
            <summary>
            Returns a representative value for any given type. Is useful to preview the
            result of a format in <see cref="T:System.Windows.Forms.PropertyGrid"/>.
            </summary>
            <param name="type">The <see cref="T:System.Type"/>.</param>
            <returns>A value with the specified type.</returns>
        </member>
        <member name="M:Syncfusion.WinForms.Core.Styles.ValueConvert.ParseValueWithTypeInformation(System.String,System.Object@,System.Boolean)">
            <summary>
            Parses the given string including type information. String can be in format %lt;type&gt; 'value'
            </summary>
            <param name="valueAsString">The string value contains the value to convert.</param>
            <param name="retVal">The output value.</param>
            <param name="allowConvertFromBase64">Indicates whether TypeConverter should be checked whether the type to be
            parsed supports conversion to/from byte array (e.g. an Image)</param>
            <returns>Returns true if conversion is success, otherwise false.</returns>
        </member>
        <member name="M:Syncfusion.WinForms.Core.Styles.ValueConvert.TryConvertFromBase64String(System.Type,System.String,System.Object@)">
            <summary>
            Indicates whether the TypeConverter associated with the type supports conversion to/from a byte array (e.g. an Image). 
            If that is the case the string is converted to a byte array from a base64 string.
            </summary>
            <param name="type">The type.</param>
            <param name="valueAsString">The string value.</param>
            <param name="retVal">The return value.</param>
            <returns>Returns true if conversion is success, otherwise false.</returns>
        </member>
        <member name="M:Syncfusion.WinForms.Core.Styles.ValueConvert.FormatValueWithTypeInformation(System.Object,System.Boolean)">
            <summary>
            Formats the given value as string including type information. String will be in format %lt;type&gt; 'value'
            </summary>
            <param name="value">the value to convert.</param>
            <param name="allowConvertToBase64">Indicates whether TypeConverter should be checked whether the type to be
            parsed supports conversion to/from byte array (e.g. an Image)</param>
            <returns>Returns the formatted string value.</returns>
        </member>
        <member name="M:Syncfusion.WinForms.Core.Styles.ValueConvert.TryConvertToBase64String(System.Object)">
            <summary>
            Indicates whether the TypeConverter associated with the type supports conversion to/from a byte array (e.g. an Image). 
            If that is the case the string is converted to a base64 string from a byte array.
            </summary>
            <param name="value">The object value to convert.</param>
            <returns>The converted string value.</returns>
        </member>
        <member name="M:Syncfusion.WinForms.Core.Styles.ValueConvert.GetTypeName(System.Type)">
            <summary>
            Returns the type name. If type is not in mscorlib, the assembly name is appended.
            </summary>
            <param name="type">The type value.</param>
            <returns>Returns the name of the type.</returns>
        </member>
        <member name="M:Syncfusion.WinForms.Core.Styles.ValueConvert.GetType(System.String)">
            <summary>
            Returns the type from the specified name. If an assembly name is appended the list of currently loaded
            assemblies in the current AppDomain are checked.
            </summary>
            <param name="typeName">The type name.</param>
            <returns>Returns the type.</returns>
        </member>
        <member name="M:Syncfusion.WinForms.Core.Styles.ValueConvert.IsEmpty(System.String)">
            <summary>
            Indicates whether string is null or empty.
            </summary>
            <param name="str">The string value.</param>
            <returns>Returns true if empty, otherwise false.</returns>
        </member>
        <member name="M:Syncfusion.WinForms.Core.Styles.ValueConvert.FormatValueWithTypeInformation(System.Object)">
            <summary>
            Overloaded. Formats the given value as string including type information. String will be in format %lt;type&gt; 'value'
            </summary>
            <param name="value">The object value.</param>
            <returns>Returns the formatted string value.</returns>
        </member>
        <member name="M:Syncfusion.WinForms.Core.Styles.ValueConvert.ParseValueWithTypeInformation(System.String,System.Object@)">
            <summary>
            Overloaded. Parses the given string including type information. String can be in format %lt;type&gt; 'value'
            </summary>
            <param name="valueAsString">The string value.</param>
            <param name="retVal">The output object value.</param>
            <returns>Returns true if property parsed, otherwise false.</returns>
        </member>
        <member name="M:Syncfusion.WinForms.Core.Styles.ValueConvert.Parse(System.String,System.Type,System.IFormatProvider)">
            <summary>
            Overloaded. Parses the given text using the resultTypes "Parse" method or using a type converter.
            </summary>
            <param name="s">The text to parse.</param>
            <param name="resultType">The requested result type.</param>
            <param name="provider">A <see cref="T:System.IFormatProvider"/> used to format or parse the value. Can be NULL.</param>
            <returns>The new value in the target type.</returns>
        </member>
        <member name="M:Syncfusion.WinForms.Core.Styles.ValueConvert._Parse(System.String,System.Type,System.IFormatProvider,System.String,System.Boolean)">
            <summary>
            Parse the string value to convert the specified type.
            </summary>
            <param name="s">The string value.</param>
            <param name="resultType">The result type.</param>
            <param name="provider">The provider.</param>
            <param name="format">The format.</param>
            <param name="returnDbNUllIfNotValid">The boolean value.</param>
            <returns>Returns the object.</returns>
        </member>
        <member name="M:Syncfusion.WinForms.Core.Styles.ValueConvert._Parse(System.String,System.Type,System.IFormatProvider,System.String,System.String[],System.Boolean)">
            <summary>
            Parse the string value to convert the specified type.
            </summary>
            <param name="s">The string value.</param>
            <param name="resultType">The result type.</param>
            <param name="provider">The provider.</param>
            <param name="format">The format.</param>
            <param name="formats">The collection of formats.</param>
            <param name="returnDbNUllIfNotValid">The boolean value.</param>
            <returns>Returns the object.</returns>
        </member>
        <member name="P:Syncfusion.WinForms.Core.Styles.ValueConvert.AllowFormatValueTrimEnd">
            <summary>
            Gets or sets a value indicating whether a <see cref="M:Syncfusion.WinForms.Core.Styles.ValueConvert.FormatValue(System.Object,System.Type,System.String,System.Globalization.CultureInfo,System.Globalization.NumberFormatInfo)"/> should trim whitespace characters from
            the end of the formatted text.
            </summary>
        </member>
        <member name="T:Syncfusion.WinForms.Core.Styles.StyleInfoPropertyPropertyDescriptor">
            <summary>
            The <see cref="T:Syncfusion.WinForms.Core.Styles.StyleInfoProperty"/> descriptor.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Core.Styles.StyleInfoPropertyPropertyDescriptor.sip">
            <summary>
            The <see cref="T:Syncfusion.WinForms.Core.Styles.StyleInfoProperty"/>.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Core.Styles.StyleInfoPropertyPropertyDescriptor.type">
            <summary>
            The type.
            </summary>
        </member>
        <member name="M:Syncfusion.WinForms.Core.Styles.StyleInfoPropertyPropertyDescriptor.#ctor(Syncfusion.WinForms.Core.Styles.StyleInfoProperty,System.Type,System.Attribute[])">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.WinForms.Core.Styles.StyleInfoPropertyPropertyDescriptor"/> class.
            </summary>
            <param name="sip">The property.</param>
            <param name="type">The type.</param>
            <param name="atts">The collection of attributes.</param>
        </member>
        <member name="M:Syncfusion.WinForms.Core.Styles.StyleInfoPropertyPropertyDescriptor.CanResetValue(System.Object)">
            <exclude/>
            <summary>
               Indicates whether the component will allow its value to be reset.
            </summary>
            <param name="comp">The component to reset.</param>
            <returns>
               True if the component supports resetting of its value.
            <seealso cref="T:System.ComponentModel.PropertyDescriptor"/>
            </returns>
        </member>
        <member name="M:Syncfusion.WinForms.Core.Styles.StyleInfoPropertyPropertyDescriptor.GetValue(System.Object)">
            <exclude/>
            <summary>
               Retrieves the value of the property for the given component. This will
               throw an exception if the component does not have this property.
            </summary>
            <param name="comp">The component.</param>
            <returns>
               The value of the property. This can be cast
               to the property type.
            <seealso cref="T:System.ComponentModel.PropertyDescriptor"/>
            </returns>
        </member>
        <member name="M:Syncfusion.WinForms.Core.Styles.StyleInfoPropertyPropertyDescriptor.ResetValue(System.Object)">
            <exclude/>
            <summary>
               Resets the value of this property on the specified component to the default value.
            </summary>
            <param name="comp">The component whose property is to be reset.</param>
            <seealso cref="T:System.ComponentModel.PropertyDescriptor"/>
        </member>
        <member name="M:Syncfusion.WinForms.Core.Styles.StyleInfoPropertyPropertyDescriptor.SetValue(System.Object,System.Object)">
            <exclude/>
            <summary>
               Sets the value of this property on the specified component.
            </summary>
            <param name="comp">The component whose property is to be set.</param>
            <param name="value">The new value of the property.</param>
            <seealso cref="T:System.ComponentModel.PropertyDescriptor"/>
        </member>
        <member name="M:Syncfusion.WinForms.Core.Styles.StyleInfoPropertyPropertyDescriptor.ShouldSerializeValue(System.Object)">
            <exclude/>
            <summary>
               <para>Indicates whether this property should be persisted. A property is
                  to be persisted if it is marked as persistable through a
                  PersistableAttribute and if the property contains something other
                  than the default value. Note, however, that this method will
                  return True for design-time properties as well, so callers
                  should also check to see if a property is design-time only before
                  persisting to run-time storage.</para>
            </summary>
            <param name='comp'>The component on which the property resides.</param>
            <returns>
               <para>True if the property should be persisted to either
                  design-time or run-time storage.</para>
            </returns>
        </member>
        <member name="P:Syncfusion.WinForms.Core.Styles.StyleInfoPropertyPropertyDescriptor.ComponentType">
            <exclude/>
            <summary>
               Retrieves the type of the component this PropertyDescriptor is bound to.
            </summary>
            <returns>
               The type of component.
            </returns>
        </member>
        <member name="P:Syncfusion.WinForms.Core.Styles.StyleInfoPropertyPropertyDescriptor.DisplayName">
            <exclude/>
            <summary>
               Retrieves the display name of the property. This is the name that will
               be displayed in a property browser. This will be the same as the property
               name for most properties.
            </summary>
            <returns>
               A string containing the name to display in the property browser.
            <seealso cref="T:System.ComponentModel.PropertyDescriptor"/>
            </returns>
        </member>
        <member name="P:Syncfusion.WinForms.Core.Styles.StyleInfoPropertyPropertyDescriptor.IsReadOnly">
            <exclude/>
            <summary>
               Indicates whether the property can be written to.
            </summary>
            <returns>
               True if the property can be written to.
            <seealso cref="T:System.ComponentModel.PropertyDescriptor"/>
            </returns>
        </member>
        <member name="P:Syncfusion.WinForms.Core.Styles.StyleInfoPropertyPropertyDescriptor.PropertyType">
            <exclude/>
            <summary>
               Retrieves the data type of the property.
            </summary>
            <returns>
               A class representing the data type of the property.
            <seealso cref="T:System.ComponentModel.PropertyDescriptor"/>
            </returns>
        </member>
        <member name="T:Syncfusion.WinForms.Core.Styles.StaticData">
            <summary>
            Holds all StyleInfoProperties used by derived classes.
            This should go in a product specific StaticData.<para/>
            The concrete Style class could provide a static memory StaticData that belongs
            to the process and library.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Core.Styles.StaticData.Maxbits">
            <summary>
            Contains the maximum bits
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Core.Styles.StaticData.Maxbits1">
            <summary>
            Contains the maximum bits count.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Core.Styles.StaticData.currentExpandableObjectKey">
            <summary>
            The current expandable object key.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Core.Styles.StaticData.dataPreviousSection">
            <summary>
            The previous data section.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Core.Styles.StaticData.dataPreviousBitCount">
            <summary>
            The bit count for the previous data.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Core.Styles.StaticData.previousIncludeBit">
            <summary>
            The integer value contains the previous include bit
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Core.Styles.StaticData.styleInfoType">
            <summary>
            The type of the style info.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Core.Styles.StaticData.sortOrder">
            <summary>
            The collection of the sort order.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Core.Styles.StaticData.sortProperties">
            <summary>
            Indicates the sort property.
            </summary>
        </member>
        <member name="M:Syncfusion.WinForms.Core.Styles.StaticData.#ctor(System.Type,System.Type,System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.WinForms.Core.Styles.StaticData"/> class with information about the parent style class.
            </summary>
            <param name="type">The type.</param>
            <param name="styleInfoType">Will be used to access the PropertyInfo and its custom attributes for a property.</param>
            <param name="sortProperties">The boolean value contains whether sort the properties.</param>
        </member>
        <member name="M:Syncfusion.WinForms.Core.Styles.StaticData.Dispose">
            <summary>
            Method to dispose static data object internally for disposing Chart styles.
            </summary>
        </member>
        <member name="M:Syncfusion.WinForms.Core.Styles.StaticData.CreatePropertyGridSortOrder(System.String[])">
            <summary>
            Create the property sort order based the given order
            </summary>
            <param name="sortOrder">The collection of the string value contains the sort order.</param>
            <returns>Returns the sorting order.</returns>
        </member>
        <member name="M:Syncfusion.WinForms.Core.Styles.StaticData.AllocateDataVectorSection(System.Int16,System.Int32@)">
            <summary>
            Allocates the data vector section based on the maxValue.
            </summary>
            <param name="maxValue">The maximum value.</param>
            <param name="bvi">The integer value.</param>
            <returns>Returns the section.</returns>
        </member>
        <member name="M:Syncfusion.WinForms.Core.Styles.StaticData.CreateStyleInfoProperty(System.Type,System.String)">
            <overload>
            Registers a <see cref="T:Syncfusion.WinForms.Core.Styles.StyleInfoProperty"/> for the specified property.
            </overload>
            <summary>
            Registers a <see cref="T:Syncfusion.WinForms.Core.Styles.StyleInfoProperty"/> for the specified property.
            </summary>
            <param name="type">The type of the property.</param>
            <param name="name">The name of the property.</param>
            <returns>The StyleInfoProperty with information about the property.</returns>
        </member>
        <member name="M:Syncfusion.WinForms.Core.Styles.StaticData.CreateStyleInfoProperty(System.Type,System.String,Syncfusion.WinForms.Core.Enums.StyleInfoPropertyOptions)">
            <summary>
            Registers a <see cref="T:Syncfusion.WinForms.Core.Styles.StyleInfoProperty"/> for the specified property.
            </summary>
            <param name="type">The type of the property.</param>
            <param name="name">The name of the property.</param>
            <param name="propertyOptions">Specifies options for the property.</param>
            <returns>The StyleInfoProperty with information about the property.</returns>
        </member>
        <member name="M:Syncfusion.WinForms.Core.Styles.StaticData.CreateStyleInfoProperty(System.Type,System.String,System.Int16)">
            <summary>
            Registers a <see cref="T:Syncfusion.WinForms.Core.Styles.StyleInfoProperty"/> for the specified property.
            </summary>
            <param name="type">The type of the property.</param>
            <param name="name">The name of the property.</param>
            <param name="maxValue">The maximal possible <see cref="T:System.Int16"/> value for the property.</param>
            <returns>The StyleInfoProperty with information about the property.</returns>
        </member>
        <member name="M:Syncfusion.WinForms.Core.Styles.StaticData.CreateStyleInfoProperty(System.Type,System.String,System.Int16,System.Boolean)">
            <summary>
            Registers a <see cref="T:Syncfusion.WinForms.Core.Styles.StyleInfoProperty"/> for the specified property.
            </summary>
            <param name="type">The type of the property.</param>
            <param name="name">The name of the property.</param>
            <param name="maxValue">The maximal possible <see cref="T:System.Int16"/> value for the property.</param>
            <param name="makeBitValue">Indicates whether this StyleInfoProperty should be registered as a member of the BitArray and not to allocate
            an object reference.</param>
            <returns>The StyleInfoProperty with information about the property.</returns>
        </member>
        <member name="M:Syncfusion.WinForms.Core.Styles.StaticData.CreateStyleInfoProperty(System.Type,System.String,System.Int16,System.Boolean,Syncfusion.WinForms.Core.Enums.StyleInfoPropertyOptions)">
            <summary>
            Registers a <see cref="T:Syncfusion.WinForms.Core.Styles.StyleInfoProperty"/> for the specified property.
            </summary>
            <param name="type">The type of the property.</param>
            <param name="name">The name of the property.</param>
            <param name="maxValue">The maximal possible <see cref="T:System.Int16"/> value for the property.</param>
            <param name="makeBitValue">Indicates whether this StyleInfoProperty should be registered as a member of the BitArray and not to allocate
            an object reference.</param>
            <param name="propertyOptions">Specifies options for the property.</param>
            <returns>The StyleInfoProperty with information about the property.</returns>
        </member>
        <member name="M:Syncfusion.WinForms.Core.Styles.StaticData.CreateStyleInfoProperty(System.Type,System.String,System.Int16,System.Boolean,System.Type,Syncfusion.WinForms.Core.Enums.StyleInfoPropertyOptions)">
            <summary>
            Registers a <see cref="T:Syncfusion.WinForms.Core.Styles.StyleInfoProperty"/> for the specified property.
            </summary>
            <param name="type">The type of the property.</param>
            <param name="name">The name of the property.</param>
            <param name="maxValue">The maximal possible <see cref="T:System.Int16"/> value for the property.</param>
            <param name="makeBitValue">Indicates whether this StyleInfoProperty should be registered as a member of the BitArray and not to allocate
            an object reference.</param>
            <param name="componentType">The component type that hosts the property.</param>
            <param name="propertyOptions">Specifies options for the property.</param>
            <returns>The StyleInfoProperty with information about the property.</returns>
        </member>
        <member name="M:Syncfusion.WinForms.Core.Styles.StaticData.CountBitsSet(System.Int16)">
            <summary>
            Counts the bits set based on the mask value.
            </summary>
            <param name="mask">The short value.</param>
            <returns>Returns the short value based on the bit set.</returns>
        </member>
        <member name="M:Syncfusion.WinForms.Core.Styles.StaticData.CreateExpandableObjectKey">
            <summary>
            Creates the expandable object key.
            </summary>
            <returns>Returns the key value.</returns>
        </member>
        <member name="M:Syncfusion.WinForms.Core.Styles.StaticData._CreateStyleInfoProperty(System.Type,System.String,System.Int16,System.Boolean,System.Type)">
            <summary>
            Creates a <see cref="T:Syncfusion.WinForms.Core.Styles.StyleInfoProperty"/> based on the type, name, maximum value and other information.
            </summary>
            <param name="type">The type of the property.</param>
            <param name="name">The string value contains the name of the property.</param>
            <param name="maxValue">The maximum value of the property.</param>
            <param name="makeBitValue">The boolean value.</param>
            <param name="componentType">The component type.
            </param>
            <returns>Returns the creates <see cref="T:Syncfusion.WinForms.Core.Styles.StyleInfoProperty"/> object.</returns>
        </member>
        <member name="P:Syncfusion.WinForms.Core.Styles.StaticData.PropertyGridSortOrder">
            <summary>
            Gets the sorting order collection.
            </summary>
        </member>
        <member name="P:Syncfusion.WinForms.Core.Styles.StaticData.StyleInfoProperties">
            <summary>
            Gets a collection with <see cref="T:Syncfusion.WinForms.Core.Styles.StyleInfoProperty"/> objects.
            </summary>
        </member>
        <member name="P:Syncfusion.WinForms.Core.Styles.StaticData.IsEmpty">
            <summary>
            Gets a value indicating whether properties have been registered. Returns True if not registered; False otherwise.
            </summary>
        </member>
        <member name="P:Syncfusion.WinForms.Core.Styles.StaticData.ObjectCount">
            <summary>
            Gets or sets the object count.
            </summary>
        </member>
        <member name="P:Syncfusion.WinForms.Core.Styles.StaticData.ExpandableObjectCount">
            <summary>
            Gets or sets the expandable object count.
            </summary>
        </member>
        <member name="P:Syncfusion.WinForms.Core.Styles.StaticData.DataVectorCount">
            <summary>
            Gets or sets the vector count.
            </summary>
        </member>
        <member name="P:Syncfusion.WinForms.Core.Styles.StaticData.StyleInfoType">
            <summary>
            Gets type of StyleInfo which is parent of store with current static data
            </summary>
        </member>
        <member name="P:Syncfusion.WinForms.Core.Styles.StaticData.StyleInfoPropertiesList">
            <summary>
            Gets or sets the collection of the <see cref="T:Syncfusion.WinForms.Core.Styles.StyleInfoProperty"/>.
            </summary>
        </member>
        <member name="T:Syncfusion.WinForms.Core.Enums.SerializeXmlBehavior">
            <summary>
            Defines how to serialize property when style data is serialized to or from an XML stream.
            with <see cref="!:XmlSerializer"/>.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Core.Enums.SerializeXmlBehavior.Default">
            <summary>
            Default. Serialize as string when type is simple. Using XmlSerializer for complex types
            or properties where the actual type is not known at compile-time (e.g. CellValue).
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Core.Enums.SerializeXmlBehavior.Skip">
            <summary>
            Skip this property. Do not serialize.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Core.Enums.SerializeXmlBehavior.SerializeAsString">
            <summary>
            Serialize this property as string using <see cref="!:StyleInfoProperty.FormatValue"/> and
            <see cref="!:StyleInfoProperty.ParseValue(string)"/>.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Core.Enums.SerializeXmlBehavior.SerializeWithXmlSerializer">
            <summary>
            Serialize this property using <see cref="!:XmlSerializer"/>.
            </summary>
        </member>
        <member name="T:Syncfusion.WinForms.Core.Enums.StyleModifyType">
            <summary>
            StyleModifyType defines style operations for <see cref="!:StyleInfoBase.ModifyStyle(IStyleInfo, StyleModifyType)"/>.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Core.Enums.StyleModifyType.Override">
            <summary>
            Copies all initialized properties.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Core.Enums.StyleModifyType.ApplyNew">
            <summary>
            Copies only properties that have not been initialized in the target style object.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Core.Enums.StyleModifyType.Copy">
            <summary>
            Copies all properties and resets properties in the target style.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Core.Enums.StyleModifyType.Exclude">
            <summary>
            Resets properties in the target style that have been marked as initialized in the source style.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Core.Enums.StyleModifyType.Changes">
            <summary>
            Copies and resets all properties in the target style when the property has been marked as changed in the source style.
            </summary>
        </member>
        <member name="T:Syncfusion.WinForms.Core.Enums.StyleInfoPropertyOptions">
            <summary>
            Specifies the options for style properties.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Core.Enums.StyleInfoPropertyOptions.None">
            <summary>
            A None.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Core.Enums.StyleInfoPropertyOptions.Serializable">
            <summary>
            The property supports serialization.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Core.Enums.StyleInfoPropertyOptions.Cloneable">
            <summary>
            The property should be cloned when the parent style object is copied.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Core.Enums.StyleInfoPropertyOptions.Disposable">
            <summary>
            The property should be disposed when the parent style object is disposed.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Core.Enums.StyleInfoPropertyOptions.CloneableAndDisposable">
            <summary>
            The property should be disposed when the parent style object is disposed
            and cloned when the parent style object is copied.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Core.Enums.StyleInfoPropertyOptions.All">
            <summary>
            All of the above.
            </summary>
        </member>
        <member name="T:Syncfusion.WinForms.Controls.ToolTipInfo">
            <summary>
            Represents a class that contains the information to be displayed in the ToolTip.
            </summary>
        </member>
        <member name="M:Syncfusion.WinForms.Controls.ToolTipInfo.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.WinForms.Controls.ToolTipInfo"/> class.
            </summary>
        </member>
        <member name="M:Syncfusion.WinForms.Controls.ToolTipInfo.#ctor(Syncfusion.WinForms.Controls.ToolTipInfo)">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.WinForms.Controls.ToolTipInfo"/> class.
            </summary>
            <param name="toolTipInfo">An object of ToolTipInfo.</param>
        </member>
        <member name="M:Syncfusion.WinForms.Controls.ToolTipInfo.Dispose">
            <summary>
            Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources.
            </summary>
        </member>
        <member name="M:Syncfusion.WinForms.Controls.ToolTipInfo.Dispose(System.Boolean)">
            <summary>
            Releases the unmanaged resources used by the collection and optionally releases the managed resources.
            </summary>
            <param name="disposing">true to release both managed and unmanaged resources; false to release only unmanaged resources.</param>
        </member>
        <member name="M:Syncfusion.WinForms.Controls.ToolTipInfo.ShouldSerializeToolTipLocation">
            <summary>
            Determines whether the <see cref="P:Syncfusion.WinForms.Controls.ToolTipInfo.ToolTipLocation"/>
            property should be serialized or not.
            </summary>
            <returns>Returns true when it need to be serialized otherwise return false.</returns>
        </member>
        <member name="M:Syncfusion.WinForms.Controls.ToolTipInfo.ShouldSerializeToolTipStyle">
            <summary>
            Determines whether the <see cref="P:Syncfusion.WinForms.Controls.ToolTipInfo.ToolTipStyle"/>
            property should be serialized or not.
            </summary>
            <returns>Returns true when it need to be serialized otherwise return false.</returns>
        </member>
        <member name="M:Syncfusion.WinForms.Controls.ToolTipInfo.ShouldSerializeItems">
            <summary>
            Determines whether the <see cref="P:Syncfusion.WinForms.Controls.ToolTipInfo.Items"/>
            property should be serialized or not.
            </summary>
            <returns>Returns true when it need to be serialized otherwise return false.</returns>
        </member>
        <member name="M:Syncfusion.WinForms.Controls.ToolTipInfo.ShouldSerializeBeakBackColor">
            <summary>
            Determines whether the <see cref="P:Syncfusion.WinForms.Controls.ToolTipInfo.BeakBackColor"/>
            property should be serialized or not.
            </summary>
            <returns>Returns true when it need to be serialized otherwise return false.</returns>
        </member>
        <member name="P:Syncfusion.WinForms.Controls.ToolTipInfo.Items">
            <summary>
            Gets or sets the <see cref="T:Syncfusion.WinForms.Controls.ToolTipItemCollection"/>.
            </summary>
        </member>
        <member name="P:Syncfusion.WinForms.Controls.ToolTipInfo.BorderColor">
            <summary>
            Gets or sets the BorderColor of the v<see cref="T:Syncfusion.WinForms.Controls.SfToolTip"/>.
            </summary>
        </member>
        <member name="P:Syncfusion.WinForms.Controls.ToolTipInfo.MinWidth">
            <summary>
            Gets or sets the Minimum width of the v<see cref="T:Syncfusion.WinForms.Controls.SfToolTip"/>.
            </summary>
            <remarks>
            If <see cref="P:Syncfusion.WinForms.Controls.ToolTipInfo.MaxWidth"/> is lesser than
            <see cref="P:Syncfusion.WinForms.Controls.ToolTipInfo.MinWidth"/>, then the value of 
            <see cref="P:Syncfusion.WinForms.Controls.ToolTipInfo.MinWidth"/> will be considered as a maximum width for the ToolTip.
            </remarks>
        </member>
        <member name="P:Syncfusion.WinForms.Controls.ToolTipInfo.MaxWidth">
            <summary>
            Gets or sets the Maximum width of the v<see cref="T:Syncfusion.WinForms.Controls.SfToolTip"/>.
            </summary>
            <remarks>
            If <see cref="P:Syncfusion.WinForms.Controls.ToolTipInfo.MaxWidth"/> is lesser than
            <see cref="P:Syncfusion.WinForms.Controls.ToolTipInfo.MinWidth"/>, then the value of 
            <see cref="P:Syncfusion.WinForms.Controls.ToolTipInfo.MinWidth"/> will be considered as a maximum width for the ToolTip.
            </remarks>
        </member>
        <member name="P:Syncfusion.WinForms.Controls.ToolTipInfo.RightToLeft">
            <summary>
            Gets or sets a value indicating whether v<see cref="T:Syncfusion.WinForms.Controls.SfToolTip"/>
            elements are aligned to support locales using right-to-left fonts.
            </summary>
        </member>
        <member name="P:Syncfusion.WinForms.Controls.ToolTipInfo.ToolTipLocation">
            <summary>
            Gets or sets the location of the ToolTip based on the mouse pointer.
            </summary>
            <remarks>
            If the Balloon tooltip style is enabled, the balloon beak will be shown near to the mouse pointer based on the corresponding tooltip location.
            </remarks>
        </member>
        <member name="P:Syncfusion.WinForms.Controls.ToolTipInfo.ToolTipStyle">
            <summary>
            Gets or sets the style of the ToolTip.
            </summary>
        </member>
        <member name="P:Syncfusion.WinForms.Controls.ToolTipInfo.BorderThickness">
            <summary>
            Gets or sets the border thickness of the tooltip.
            </summary>
        </member>
        <member name="P:Syncfusion.WinForms.Controls.ToolTipInfo.BeakBackColor">
            <summary>
            Gets or sets the beak background color of the balloon tooltip.
            </summary>
            <remarks>
            By default, beak back color will not be applied based on the corresponding ToolTip item's back color.
            Beak back color can be applied manually based on the corresponding ToolTip item.
            </remarks>
        </member>
        <member name="T:Syncfusion.WinForms.Controls.ToolTipInfoTypeConverter">
            <summary>
            Implements a type converter for <see cref="T:Syncfusion.WinForms.Controls.ToolTipInfo"/>.
            </summary>
        </member>
        <member name="M:Syncfusion.WinForms.Controls.ToolTipInfoTypeConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)">
            <summary>
            Returns whether this converter can convert the object to the specified type, using the specified context.
            </summary>
            <param name="context">An <see cref="T:System.ComponentModel.ITypeDescriptorContext"/> that provides a format context.</param>
            <param name="destinationType">A <see cref="T:System.Type"/> that represents the type you want to convert to.</param>
            <returns>true if this converter can perform the conversion; otherwise, false.</returns>
        </member>
        <member name="M:Syncfusion.WinForms.Controls.ToolTipInfoTypeConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
            <summary>
            Converts the given value object to the specified type, using the specified context and culture information.
            </summary>
            <param name="context">An <see cref="T:System.ComponentModel.ITypeDescriptorContext"/> that provides a format context.</param>
            <param name="culture">A <see cref="T:System.Globalization.CultureInfo"/>. If null is passed, the current culture is assumed.</param>
            <param name="value">The <see cref="T:System.Object"/> to convert.</param>
            <param name="destinationType">The <see cref="T:System.Type"/> to convert the value parameter to.</param>
            <returns>An <see cref="T:System.Object"/> that represents the converted value.</returns>
        </member>
        <member name="T:Syncfusion.WinForms.Controls.ToolTipItem">
            <summary>
            Represents a class that maintains the information of the <see cref="T:Syncfusion.WinForms.Controls.ToolTipItem"/>.
            </summary>
        </member>
        <member name="M:Syncfusion.WinForms.Controls.ToolTipItem.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.WinForms.Controls.ToolTipItem"/> class.
            </summary>
        </member>
        <member name="M:Syncfusion.WinForms.Controls.ToolTipItem.ToString">
            <summary>
            Overriden. To return a string which represents the object instance.
            </summary>
            <returns>Returns a string which represents the objecr instance.</returns>
        </member>
        <member name="M:Syncfusion.WinForms.Controls.ToolTipItem.ShouldSerializeText">
            <summary>
            Determines whether the <see cref="!:Syncfusion.WinForms.Controls.ToolTip.ToolTipItem.Text"/>
            property should be serialized or not.
            </summary>
            <returns>Returns true when it need to be serialized otherwise return false.</returns>
        </member>
        <member name="M:Syncfusion.WinForms.Controls.ToolTipItem.ShouldSerializeStyle">
            <summary>
            Determines whether the <see cref="!:Syncfusion.WinForms.Controls.ToolTip.ToolTipItem.Style"/>
            property should be serialized or not.
            </summary>
            <returns>Returns true when it need to be serialized otherwise return false.</returns>
        </member>
        <member name="P:Syncfusion.WinForms.Controls.ToolTipItem.Text">
            <summary>
            Gets or sets the ToolTip text of the <see cref="T:Syncfusion.WinForms.Controls.ToolTipItem"/>.
            </summary>
        </member>
        <member name="P:Syncfusion.WinForms.Controls.ToolTipItem.Style">
            <summary>
            Gets or sets the <see cref="!:Syncfusion.WinForms.Controls.Styles.ToolTipStyleInfo"/> with settings that control the appearance of the <see cref="T:Syncfusion.WinForms.Controls.ToolTipItem"/>.
            </summary>
        </member>
        <member name="P:Syncfusion.WinForms.Controls.ToolTipItem.EnableGradientBackground">
            <summary>
            Gets or sets a value indicating whether gradient background drawing 
            for the <see cref="T:Syncfusion.WinForms.Controls.ToolTipItem"/> should be enabled or not.
            </summary>
            <remarks>
            The gradient brush can be set to the tooltip item by using the <see cref="!:Syncfusion.WinForms.Controls.Styles.ToolTipStyleInfo.GradientBrush"/> property
            which is available in the <see cref="!:Syncfusion.WinForms.Controls.ToolTip.ToolTipItem.Style"/> property.
            </remarks>
        </member>
        <member name="P:Syncfusion.WinForms.Controls.ToolTipItem.EnableSeparator">
            <summary>
            Gets or sets a value indicating whether separator line between the 
            <see cref="T:Syncfusion.WinForms.Controls.ToolTipItem"/> should be enabled or not.
            </summary>
            <remarks>
            If the <see cref="!:Syncfusion.WinForms.Controls.ToolTip.ToolTipItem.EnableSeparator"/> is enabled for the tooltip item, the line will be drawn to the bottom of that tooltip item.
            The separator line cannot be drawn for the last tooltip item.
            </remarks>
        </member>
        <member name="P:Syncfusion.WinForms.Controls.ToolTipItem.Image">
            <summary>
            Gets or sets the image of the tooltip item.
            </summary>
        </member>
        <member name="P:Syncfusion.WinForms.Controls.ToolTipItem.ImageList">
            <summary>
            Gets or sets the <see cref="T:System.Windows.Forms.ImageList"/> of the tooltip item.
            </summary>
            <remarks>
            If the <see cref="!:Syncfusion.WinForms.Controls.ToolTip.ToolTipItem.Image"/> is specified, the tooltip will not consider the image from ImageList collection.
            <para/>
            ImageList collection will be only considered when <see cref="!:Syncfusion.WinForms.Controls.ToolTip.ToolTipItem.Image"/> is not specified.
            </remarks>
        </member>
        <member name="P:Syncfusion.WinForms.Controls.ToolTipItem.ImageIndex">
            <summary>
            Gets or sets the zero-based index of an image in a <see cref="!:Syncfusion.WinForms.Controls.ToolTip.ToolTipItem.ImageList"/> 
            collection to be displayed in a tooltip item.
            </summary>
        </member>
        <member name="P:Syncfusion.WinForms.Controls.ToolTipItem.Control">
            <summary>
            Gets or sets a control to be added on the <see cref="T:Syncfusion.WinForms.Controls.ToolTipItem"/>.
            </summary>
            <remarks>
            If the control is set to the tooltip item, the text, image and other customization cannot be applied to the tooltip item. 
            The assigned control only will be displayed in the tooltip item.
            </remarks>        
        </member>
        <member name="P:Syncfusion.WinForms.Controls.ToolTipItem.Padding">
            <summary>
            Gets or sets the padding of the tooltip item.
            </summary>
            <remarks>
            The padding is applicable for entire tooltip item i.e. tooltip item's image, text and control will be drawn based on the padding.
            </remarks>
        </member>
        <member name="P:Syncfusion.WinForms.Controls.ToolTipItem.Size">
            <summary>
            Gets or sets the size of the <see cref="T:Syncfusion.WinForms.Controls.ToolTipItem"/>.
            </summary>
        </member>
        <member name="P:Syncfusion.WinForms.Controls.ToolTipItem.TextSize">
            <summary>
            Gets or sets the text size of the <see cref="T:Syncfusion.WinForms.Controls.ToolTipItem"/>.
            </summary>
        </member>
        <member name="P:Syncfusion.WinForms.Controls.ToolTipItem.Name">
            <summary>
            Gets or sets the name of the tooltip item.
            </summary>
        </member>
        <member name="T:Syncfusion.WinForms.Controls.ToolTipItemImageUITypeEditor">
            <summary>
            Represents the editor for Image of the tooltip item.
            </summary>
        </member>
        <member name="M:Syncfusion.WinForms.Controls.ToolTipItemImageUITypeEditor.GetEditStyle(System.ComponentModel.ITypeDescriptorContext)">
            <summary>
            Gets the editor style used by the EditValue method.
            </summary>
            <param name="context">An <see cref="T:System.ComponentModel.ITypeDescriptorContext"/> that can be used to gain additional context information.</param>
            <returns>A <see cref="T:System.Drawing.Design.UITypeEditorEditStyle"/> value that indicates the style of editor used by the EditValue method.
            If the <see cref="T:System.Drawing.Design.UITypeEditor"/> does not support this method, then it will return None.</returns>
        </member>
        <member name="M:Syncfusion.WinForms.Controls.ToolTipItemImageUITypeEditor.EditValue(System.ComponentModel.ITypeDescriptorContext,System.IServiceProvider,System.Object)">
            <summary>
            Edits the specified object's value using the editor style indicated by the 
            <see cref="!:Syncfusion.WinForms.Controls.ToolTip.ToolTipItemImageUITypeEditor.GetEditStyle(ITypeDescriptorContext)"/> method.
            </summary>
            <param name="context">An <see cref="T:System.ComponentModel.ITypeDescriptorContext"/> that can be used to gain additional context information.</param>
            <param name="provider">An <see cref="T:System.IServiceProvider"/> that this editor can use to obtain services.</param>
            <param name="value">The object to edit.</param>
            <returns>The new value of the object. If the value of the object has not changed, this should return the same object it was passed.</returns>
        </member>
        <member name="T:Syncfusion.WinForms.Controls.ToolTipItemCollection">
            <summary>
            Represents a collection of <see cref="T:Syncfusion.WinForms.Controls.ToolTipItem"/>.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Controls.ToolTipItemCollection.list">
            <summary>
            The list of ToolTipItem.
            </summary>
        </member>
        <member name="M:Syncfusion.WinForms.Controls.ToolTipItemCollection.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.WinForms.Controls.ToolTipItemCollection"/> class.
            </summary>
        </member>
        <member name="M:Syncfusion.WinForms.Controls.ToolTipItemCollection.Add(Syncfusion.WinForms.Controls.ToolTipItem)">
            <summary>
            Adds the <see cref="T:Syncfusion.WinForms.Controls.ToolTipItem"/> in the 
            <see cref="T:Syncfusion.WinForms.Controls.ToolTipItemCollection"/>.
            </summary>
            <param name="item">An object of <see cref="T:Syncfusion.WinForms.Controls.ToolTipItem"/>.</param>
            <returns>Returns the index in which the item is added.</returns>
        </member>
        <member name="M:Syncfusion.WinForms.Controls.ToolTipItemCollection.AddRange(Syncfusion.WinForms.Controls.ToolTipItem[])">
            <summary>
            Adds the range of <see cref="T:Syncfusion.WinForms.Controls.ToolTipItem"/> in the 
            <see cref="T:Syncfusion.WinForms.Controls.ToolTipItemCollection"/>.
            </summary>
            <param name="items">Collection of <see cref="T:Syncfusion.WinForms.Controls.ToolTipItem"/> objects.</param>
        </member>
        <member name="M:Syncfusion.WinForms.Controls.ToolTipItemCollection.Insert(System.Int32,Syncfusion.WinForms.Controls.ToolTipItem)">
            <summary>
            Inserts the <see cref="T:Syncfusion.WinForms.Controls.ToolTipItem"/> in the specified index.
            </summary>
            <param name="index">The index in which the element has to be inserted.</param>
            <param name="item">An object of <see cref="T:Syncfusion.WinForms.Controls.ToolTipItem"/>.</param>
        </member>
        <member name="M:Syncfusion.WinForms.Controls.ToolTipItemCollection.InsertRange(System.Int32,Syncfusion.WinForms.Controls.ToolTipItem[])">
            <summary>
            Inserts the range of <see cref="T:Syncfusion.WinForms.Controls.ToolTipItem"/> in the specified index.
            </summary>
            <param name="index">The index in which the range of elements has to be inserted.</param>
            <param name="items">Collection of <see cref="T:Syncfusion.WinForms.Controls.ToolTipItem"/> objects.</param>
        </member>
        <member name="M:Syncfusion.WinForms.Controls.ToolTipItemCollection.Remove(Syncfusion.WinForms.Controls.ToolTipItem)">
            <summary>
            Removes the <see cref="T:Syncfusion.WinForms.Controls.ToolTipItem"/> from the
            <see cref="T:Syncfusion.WinForms.Controls.ToolTipItemCollection"/>.
            </summary>
            <param name="item">An object of <see cref="T:Syncfusion.WinForms.Controls.ToolTipItem"/>.</param>
        </member>
        <member name="M:Syncfusion.WinForms.Controls.ToolTipItemCollection.RemoveAt(System.Int32)">
            <summary>
            Removes the <see cref="T:Syncfusion.WinForms.Controls.ToolTipItem"/> at the specified index from the 
            <see cref="T:Syncfusion.WinForms.Controls.ToolTipItemCollection"/>.
            </summary>
            <param name="index">The index of the element to be removed.</param>
        </member>
        <member name="M:Syncfusion.WinForms.Controls.ToolTipItemCollection.RemoveRange(Syncfusion.WinForms.Controls.ToolTipItem[])">
            <summary>
            Removes the range of <see cref="T:Syncfusion.WinForms.Controls.ToolTipItem"/> from the 
            <see cref="T:Syncfusion.WinForms.Controls.ToolTipItemCollection"/>.
            </summary>
            <param name="items">Collection of <see cref="T:Syncfusion.WinForms.Controls.ToolTipItem"/> objects.</param>
        </member>
        <member name="M:Syncfusion.WinForms.Controls.ToolTipItemCollection.IndexOf(Syncfusion.WinForms.Controls.ToolTipItem)">
            <summary>
            Gets the index of the <see cref="T:Syncfusion.WinForms.Controls.ToolTipItem"/> in the 
            <see cref="T:Syncfusion.WinForms.Controls.ToolTipItemCollection"/>.
            </summary>
            <param name="item">An object of <see cref="T:Syncfusion.WinForms.Controls.ToolTipItem"/>.</param>
            <returns>Returns the index of the <see cref="T:Syncfusion.WinForms.Controls.ToolTipItem"/>.</returns>
        </member>
        <member name="M:Syncfusion.WinForms.Controls.ToolTipItemCollection.Clear">
            <summary>
            Removes all the elements from the <see cref="T:Syncfusion.WinForms.Controls.ToolTipItemCollection"/>.
            </summary>
        </member>
        <member name="M:Syncfusion.WinForms.Controls.ToolTipItemCollection.Contains(Syncfusion.WinForms.Controls.ToolTipItem)">
            <summary>
            Determines whether an element exists in the <see cref="T:Syncfusion.WinForms.Controls.ToolTipItemCollection"/>.
            </summary>
            <param name="item">An object of <see cref="T:Syncfusion.WinForms.Controls.ToolTipItem"/>.</param>
            <returns>true if item is found; otherwise, false.</returns>
        </member>
        <member name="M:Syncfusion.WinForms.Controls.ToolTipItemCollection.ToString">
            <summary>
            Overriden. To return the count of the collection.
            </summary>
            <returns>Returns the count of the collection.</returns>
        </member>
        <member name="M:Syncfusion.WinForms.Controls.ToolTipItemCollection.CopyTo(System.Array,System.Int32)">
            <summary>
            Copies the elements of the collection to an Array, starting at a particular index.
            </summary>
            <param name="array">The one-dimentioanl Array that is the destination of the elements copied from Collection.</param>
            <param name="index">Index in array at which copying begins.</param>
        </member>
        <member name="M:Syncfusion.WinForms.Controls.ToolTipItemCollection.GetEnumerator">
            <summary>
            Returns an enumerator that iterates through a <see cref="T:Syncfusion.WinForms.Controls.ToolTipItemCollection"/>.
            </summary>
            <returns>An IEnumerator object that can be used to iterate through 
            the <see cref="T:Syncfusion.WinForms.Controls.ToolTipItemCollection"/>.</returns>
        </member>
        <member name="M:Syncfusion.WinForms.Controls.ToolTipItemCollection.Dispose">
            <summary>
            Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources.
            </summary>
        </member>
        <member name="M:Syncfusion.WinForms.Controls.ToolTipItemCollection.Clone">
            <summary>
            Creates a new object that is a copy of the current instance.
            </summary>
            <returns>A new object that is a copy of this instance.</returns>
        </member>
        <member name="M:Syncfusion.WinForms.Controls.ToolTipItemCollection.System#Collections#IList#Contains(System.Object)">
            <summary>
            Determines whether the <see cref="T:System.Collections.IList"/> contains a specific value.
            </summary>
            <param name="value">The object to locate in the <see cref="T:System.Collections.IList"/>.</param>
            <returns>true if the value is found in the <see cref="T:System.Collections.IList"/>; otherwise, false.</returns>
        </member>
        <member name="M:Syncfusion.WinForms.Controls.ToolTipItemCollection.System#Collections#IList#IndexOf(System.Object)">
            <summary>
            Determines the index of a specific item in the <see cref="T:System.Collections.IList"/>.
            </summary>
            <param name="value">The object to locate in the <see cref="T:System.Collections.IList"/>.</param>
            <returns>The index of value if found in the list; otherwise, -1.</returns>
        </member>
        <member name="M:Syncfusion.WinForms.Controls.ToolTipItemCollection.System#Collections#IList#Insert(System.Int32,System.Object)">
            <summary>
            Inserts an item to the <see cref="T:System.Collections.IList"/> at the specified index.
            </summary>
            <param name="index">The zero-based index at which value should be inserted.</param>
            <param name="value">The object to insert into the <see cref="T:System.Collections.IList"/>.</param>
        </member>
        <member name="M:Syncfusion.WinForms.Controls.ToolTipItemCollection.System#Collections#IList#Remove(System.Object)">
            <summary>
            Removes the first occurrence of a specific object from the <see cref="T:System.Collections.IList"/>.
            </summary>
            <param name="value">The object to remove from the <see cref="T:System.Collections.IList"/>.</param>
        </member>
        <member name="M:Syncfusion.WinForms.Controls.ToolTipItemCollection.System#Collections#IList#Add(System.Object)">
            <summary>
            Adds an item to the <see cref="T:System.Collections.IList"/>.
            </summary>
            <param name="value">The object to add to the <see cref="T:System.Collections.IList"/>.</param>
            <returns>The position into which the new element was inserted, or -1 to indicate that the item was not inserted into the collection.</returns>
        </member>
        <member name="M:Syncfusion.WinForms.Controls.ToolTipItemCollection.Dispose(System.Boolean)">
            <summary>
            Releases the unmanaged resources used by the collection and optionally releases the managed resources.
            </summary>
            <param name="disposing">true to release both managed and unmanaged resources; false to release only unmanaged resources.</param>
        </member>
        <member name="M:Syncfusion.WinForms.Controls.ToolTipItemCollection.OnCollectionChanged(Syncfusion.WinForms.Controls.Events.ListPropertyChangedEventArgs)">
            <summary>
            Raises the changed event of <see cref="T:Syncfusion.WinForms.Controls.ToolTipItemCollection"/>.
            </summary>
            <param name="e">An object of <see cref="!:Syncfusion.WinForms.Core.ListPropertyChangedEventArges"/> that contains event data.</param>
        </member>
        <member name="E:Syncfusion.WinForms.Controls.ToolTipItemCollection.CollectionChanged">
            <summary>
            Occurs after a property in the collection is changed.
            </summary>      
        </member>
        <member name="P:Syncfusion.WinForms.Controls.ToolTipItemCollection.System#Collections#IList#IsFixedSize">
            <summary>
            Gets a value indicating whether the <see cref="T:Syncfusion.WinForms.Controls.ToolTipItemCollection"/> has a fixed size.
            </summary>
        </member>
        <member name="P:Syncfusion.WinForms.Controls.ToolTipItemCollection.System#Collections#IList#IsReadOnly">
            <summary>
            Gets a value indicating whether the <see cref="T:Syncfusion.WinForms.Controls.ToolTipItemCollection"/> is read-only.
            </summary>
        </member>
        <member name="P:Syncfusion.WinForms.Controls.ToolTipItemCollection.Count">
            <summary>
            Gets the number of elements actually contained in the <see cref="T:Syncfusion.WinForms.Controls.ToolTipItemCollection"/>.
            </summary>
        </member>
        <member name="P:Syncfusion.WinForms.Controls.ToolTipItemCollection.System#Collections#ICollection#IsSynchronized">
            <summary>
            Gets a value indicating whether access to the <see cref="T:Syncfusion.WinForms.Controls.ToolTipItemCollection"/> is synchronized.
            </summary>
        </member>
        <member name="P:Syncfusion.WinForms.Controls.ToolTipItemCollection.System#Collections#ICollection#SyncRoot">
            <summary>
            Gets an object that can be used to synchronize access to the Collection.
            </summary>
        </member>
        <member name="P:Syncfusion.WinForms.Controls.ToolTipItemCollection.Item(System.Int32)">
            <summary>
            Gets or sets the <see cref="T:Syncfusion.WinForms.Controls.ToolTipItem"/> at the specified index.
            </summary>
            <param name="index">The index of the element to get or set.</param>
            <returns>The element at the specified index.</returns>
        </member>
        <member name="P:Syncfusion.WinForms.Controls.ToolTipItemCollection.System#Collections#IList#Item(System.Int32)">
            <summary>
            Gets or sets the element at the specified index.
            </summary>
            <param name="index">The zero-based index of the element to get or set.</param>
            <returns>The element at the specified index.</returns>
        </member>
        <member name="T:Syncfusion.WinForms.Controls.ToolTipItemCollectionEditor">
            <summary>
            Provides a user interface that can edit collections of tooltip items at design-time.
            </summary>
        </member>
        <member name="M:Syncfusion.WinForms.Controls.ToolTipItemCollectionEditor.#ctor(System.Type)">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.WinForms.Controls.ToolTipItemCollectionEditor"/> class.
            </summary>
            <param name="type">The type of the collection for this editor to edit.</param>
        </member>
        <member name="M:Syncfusion.WinForms.Controls.ToolTipItemCollectionEditor.CreateCollectionItemType">
            <summary>
            Gets the data type that this collection contains.
            </summary>
            <returns>The data type of the items in the collection.</returns>
        </member>
        <member name="M:Syncfusion.WinForms.Controls.ToolTipItemCollectionEditor.CanSelectMultipleInstances">
            <summary>
            Indicates whether multiple collection items can be selected at once.
            </summary>
            <returns>true if it multiple collection members can be selected at the same time; otherwise, false. By default, this returns true.</returns>
        </member>
        <member name="T:Syncfusion.WinForms.Controls.ToolTipItemCollectionTypeConverter">
            <summary>
            Implements a type converter for <see cref="T:Syncfusion.WinForms.Controls.ToolTipItemCollection"/>.
            </summary>
        </member>
        <member name="M:Syncfusion.WinForms.Controls.ToolTipItemCollectionTypeConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)">
            <summary>
            Returns whether this converter can convert the object to the specified type, using the specified context.
            </summary>
            <param name="context">An <see cref="T:System.ComponentModel.ITypeDescriptorContext"/> that provides a format context.</param>
            <param name="destinationType">A <see cref="T:System.Type"/> that represents the type you want to convert to.</param>
            <returns>true if this converter can perform the conversion; otherwise, false.</returns>
        </member>
        <member name="M:Syncfusion.WinForms.Controls.ToolTipItemCollectionTypeConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
            <summary>
            Converts the given value object to the specified type, using the specified context and culture information.
            </summary>
            <param name="context">An <see cref="T:System.ComponentModel.ITypeDescriptorContext"/> that provides a format context.</param>
            <param name="culture">A <see cref="T:System.Globalization.CultureInfo"/>. If null is passed, the current culture is assumed.</param>
            <param name="value">The <see cref="T:System.Object"/> to convert.</param>
            <param name="destinationType">The <see cref="T:System.Type"/> to convert the value parameter to.</param>
            <returns>An <see cref="T:System.Object"/> that represents the converted value.</returns>
        </member>
        <member name="T:Syncfusion.WinForms.Controls.Styles.ToolTipVisualStyleInfoStore">
            <summary>
            Represents a store which holds the properties of the <see cref="!:Syncfusion.WinForms.Controls.Styles.ToolTipStyleInfo"/> object.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Controls.Styles.ToolTipVisualStyleInfoStore.BorderColorProperty">
            <summary>
            Provides information about the BorderColor property.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Controls.Styles.ToolTipVisualStyleInfoStore.BorderThicknessProperty">
            <summary>
            Provides information about the BorderThickness property.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Controls.Styles.ToolTipVisualStyleInfoStore.ForeColorProperty">
            <summary>
            Provides information about the <see cref="!:Syncfusion.WinForms.Controls.Styles.ToolTipStyleInfo.ForeColor"/> property.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Controls.Styles.ToolTipVisualStyleInfoStore.BackColorProperty">
            <summary>
            Provides information about the <see cref="!:Syncfusion.WinForms.Controls.Styles.ToolTipStyleInfo.BackColor"/> property.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Controls.Styles.ToolTipVisualStyleInfoStore.FontProperty">
            <summary>
            Provides information about the <see cref="!:Syncfusion.WinForms.Controls.Styles.ToolTipStyleInfo.Font"/> property.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Controls.Styles.ToolTipVisualStyleInfoStore.GradientBrushProperty">
            <summary>
            Provides information about the <see cref="!:Syncfusion.WinForms.Controls.Styles.ToolTipStyleInfo.GradientBrush"/> property.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Controls.Styles.ToolTipVisualStyleInfoStore.TextAlignmentProperty">
            <summary>
            Provides information about the <see cref="!:Syncfusion.WinForms.Controls.Styles.ToolTipStyleInfo.TextAlignment"/> property.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Controls.Styles.ToolTipVisualStyleInfoStore.ImageAlignmentProperty">
            <summary>
            Provides information about the <see cref="!:Syncfusion.WinForms.Controls.Styles.ToolTipStyleInfo.ImageAlignment"/> property.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Controls.Styles.ToolTipVisualStyleInfoStore.ImageSizeProperty">
            <summary>
            Provides information about the <see cref="!:Syncfusion.WinForms.Controls.Styles.ToolTipStyleInfo.ImageSize"/> property.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Controls.Styles.ToolTipVisualStyleInfoStore.SeparatorColorProperty">
            <summary>
            Provides information about the <see cref="!:Syncfusion.WinForms.Controls.Styles.ToolTipStyleInfo.SeparatorColor"/> property.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Controls.Styles.ToolTipVisualStyleInfoStore.SeparatorStyleProperty">
            <summary>
            Provides information about the <see cref="!:Syncfusion.WinForms.Controls.Styles.ToolTipStyleInfo.SeparatorStyle"/> property.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Controls.Styles.ToolTipVisualStyleInfoStore.SeparatorPatternProperty">
            <summary>
            Provides information about the <see cref="!:Syncfusion.WinForms.Controls.Styles.ToolTipStyleInfo.SeparatorPattern"/> property.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Controls.Styles.ToolTipVisualStyleInfoStore.ImageToTextOffsetProperty">
            <summary>
            Provides information about the <see cref="!:Syncfusion.WinForms.Controls.Styles.ToolTipStyleInfo.ImageToTextOffset"/> property.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Controls.Styles.ToolTipVisualStyleInfoStore.BeakBackColorProperty">
            <summary>
            Provides information about the BeakBackColor property.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Controls.Styles.ToolTipVisualStyleInfoStore.staticData">
            <summary>
            Provides the StaticData of the <see cref="!:Syncfusion.WinForms.Controls.Styles.ToolTipStyleInfo"/>.
            </summary>
        </member>
        <member name="M:Syncfusion.WinForms.Controls.Styles.ToolTipVisualStyleInfoStore.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.WinForms.Controls.Styles.ToolTipVisualStyleInfoStore"/> class.
            </summary>
        </member>
        <member name="M:Syncfusion.WinForms.Controls.Styles.ToolTipVisualStyleInfoStore.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.WinForms.Controls.Styles.ToolTipVisualStyleInfoStore"/> class from a serialization stream.
            </summary>
            <param name="info">An object that holds all the data needed to serialize or deserialize this instance.</param>
            <param name="context">Describes the source and destination of the serialized stream specified by info. </param>
        </member>
        <member name="M:Syncfusion.WinForms.Controls.Styles.ToolTipVisualStyleInfoStore.GetStaticData">
            <summary>
            Initializes the <see cref="T:Syncfusion.WinForms.Core.Styles.StaticData"/>, if <see cref="F:Syncfusion.WinForms.Controls.Styles.ToolTipVisualStyleInfoStore.staticData"/> is null.
            </summary>
            <returns><see cref="T:Syncfusion.WinForms.Core.Styles.StaticData"/></returns>
        </member>
        <member name="P:Syncfusion.WinForms.Controls.Styles.ToolTipVisualStyleInfoStore.StaticDataStore">
            <summary>
            Provides the StaticData of the <see cref="!:Syncfusion.WinForms.Controls.Styles.ToolTipStyleInfo"/>.
            </summary>
        </member>
        <member name="T:Syncfusion.WinForms.Controls.Styles.ToolTipVisualStyle">
            <summary>
            Implements the functionalities that holds all information stored for a <see cref="T:Syncfusion.WinForms.Controls.ToolTipItem"/>.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Controls.Styles.ToolTipVisualStyle.defaultStyle">
            <summary>
            The default ToolTipStyleInfo.
            </summary>
        </member>
        <member name="M:Syncfusion.WinForms.Controls.Styles.ToolTipVisualStyle.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.WinForms.Controls.Styles.ToolTipVisualStyle"/> class.
            </summary>
        </member>
        <member name="M:Syncfusion.WinForms.Controls.Styles.ToolTipVisualStyle.#ctor(Syncfusion.WinForms.Core.Styles.StyleInfoSubObjectIdentity)">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.WinForms.Controls.Styles.ToolTipVisualStyle"/> class.
            </summary>
            <param name="identity">A <see cref="T:Syncfusion.WinForms.Core.Styles.StyleInfoSubObjectIdentity"/> that holds the identity for this <see cref="T:Syncfusion.WinForms.Core.Styles.StyleInfoBase"/>.</param>
        </member>
        <member name="M:Syncfusion.WinForms.Controls.Styles.ToolTipVisualStyle.#ctor(Syncfusion.WinForms.Core.Styles.StyleInfoSubObjectIdentity,Syncfusion.WinForms.Controls.Styles.ToolTipVisualStyleInfoStore)">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.WinForms.Controls.Styles.ToolTipVisualStyle"/> class.
            </summary>
            <param name="identity">A <see cref="T:Syncfusion.WinForms.Core.Styles.StyleInfoSubObjectIdentity"/> that holds the identity for this <see cref="T:Syncfusion.WinForms.Core.Styles.StyleInfoBase"/>.</param>
            <param name="store">A <see cref="T:Syncfusion.WinForms.Controls.Styles.ToolTipVisualStyleInfoStore"/> that holds data for this object.
            All changes in this style object will be saved in the <see cref="T:Syncfusion.WinForms.Controls.Styles.ToolTipVisualStyleInfoStore"/> object.
            </param>
        </member>
        <member name="M:Syncfusion.WinForms.Controls.Styles.ToolTipVisualStyle.MakeCopy(Syncfusion.WinForms.Core.Styles.StyleInfoBase,Syncfusion.WinForms.Core.Styles.StyleInfoProperty)">
            <summary>
            Makes an exact copy of the current object.
            </summary>
            <param name="newOwner">The new owner style object for the copied object.</param>
            <param name="sip">The identifier for this object.</param>
            <returns>A copy of the current object registered with the new owner style object.</returns>
        </member>
        <member name="M:Syncfusion.WinForms.Controls.Styles.ToolTipVisualStyle.CreateSubObjectIdentity(Syncfusion.WinForms.Core.Styles.StyleInfoProperty)">
            <summary>
            Override this method to create a product-specific identity object for a sub object.
            </summary>
            <returns>An identity object for a sub object of this style.</returns>
            <example>
            The following code is an example how Essential Grid creates GridStyleInfoSubObjectIdentity:
            <code lange="C#">
            public override StyleInfoSubObjectIdentity CreateSubObjectIdentity(StyleInfoProperty sip)
            {
            	return new GridStyleInfoSubObjectIdentity(this, sip);
            }
            </code>
            </example>
            <param name="sip">The <see cref="T:Syncfusion.WinForms.Core.Styles.StyleInfoProperty"/>.</param>
        </member>
        <member name="M:Syncfusion.WinForms.Controls.Styles.ToolTipVisualStyle.GetDefaultStyle">
            <summary>
            Gets the default style of the <see cref="T:Syncfusion.WinForms.Controls.ToolTipItem"/>.
            </summary>
            <returns>Default style of the <see cref="T:Syncfusion.WinForms.Controls.ToolTipItem"/>.</returns>
        </member>
        <member name="M:Syncfusion.WinForms.Controls.Styles.ToolTipVisualStyle.ShouldSerializeFont">
            <summary>
            Determines whether the <see cref="P:Syncfusion.WinForms.Controls.Styles.ToolTipVisualStyle.Font"/>
            property should be serialized or not.
            </summary>
            <returns>Returns true when it need to be serialized otherwise return false.</returns>
        </member>
        <member name="M:Syncfusion.WinForms.Controls.Styles.ToolTipVisualStyle.ShouldSerializeGradientBrush">
            <summary>
            Determines whether the <see cref="P:Syncfusion.WinForms.Controls.Styles.ToolTipVisualStyle.GradientBrush"/>
            property should be serialized or not.
            </summary>
            <returns>Returns true when it need to be serialized otherwise return false.</returns>
        </member>
        <member name="M:Syncfusion.WinForms.Controls.Styles.ToolTipVisualStyle.ShouldSerializeImageSize">
            <summary>
            Determines whether the <see cref="P:Syncfusion.WinForms.Controls.Styles.ToolTipVisualStyle.ImageSize"/>
            property should be serialized or not.
            </summary>
            <returns>Returns true when it need to be serialized otherwise return false.</returns>
        </member>
        <member name="M:Syncfusion.WinForms.Controls.Styles.ToolTipVisualStyle.ShouldSerializeSeparatorPattern">
            <summary>
            Determines whether the <see cref="P:Syncfusion.WinForms.Controls.Styles.ToolTipVisualStyle.SeparatorPattern"/>
            property should be serialized or not.
            </summary>
            <returns>Returns true when it need to be serialized otherwise return false.</returns>
        </member>
        <member name="P:Syncfusion.WinForms.Controls.Styles.ToolTipVisualStyle.Default">
            <summary>
            Gets the default style of the <see cref="T:Syncfusion.WinForms.Controls.ToolTipItem"/>.
            </summary>
        </member>
        <member name="P:Syncfusion.WinForms.Controls.Styles.ToolTipVisualStyle.ForeColor">
            <summary>
            Gets or sets the foreground color  of the <see cref="T:Syncfusion.WinForms.Controls.ToolTipItem"/>.
            </summary>
        </member>
        <member name="P:Syncfusion.WinForms.Controls.Styles.ToolTipVisualStyle.BackColor">
            <summary>
            Gets or sets the background color of the <see cref="T:Syncfusion.WinForms.Controls.ToolTipItem"/>.
            </summary>
        </member>
        <member name="P:Syncfusion.WinForms.Controls.Styles.ToolTipVisualStyle.Font">
            <summary>
            Gets or sets the font of the <see cref="T:Syncfusion.WinForms.Controls.ToolTipItem"/>.
            </summary>
        </member>
        <member name="P:Syncfusion.WinForms.Controls.Styles.ToolTipVisualStyle.TextAlignment">
            <summary>
            Gets or sets the TextAlignment of the <see cref="T:Syncfusion.WinForms.Controls.ToolTipItem"/>.
            </summary>
        </member>
        <member name="P:Syncfusion.WinForms.Controls.Styles.ToolTipVisualStyle.GradientBrush">
            <summary>
            Gets or sets the GradientBrush of the <see cref="T:Syncfusion.WinForms.Controls.ToolTipItem"/>, 
            if <see cref="!:Syncfusion.WinForms.Controls.ToolTip.ToolTipItem.EnableGradientBackground"/> is true.
            </summary>
        </member>
        <member name="P:Syncfusion.WinForms.Controls.Styles.ToolTipVisualStyle.SeparatorColor">
            <summary>
            Gets or sets the separator color of the <see cref="T:Syncfusion.WinForms.Controls.ToolTipItem"/> to draw separator,
            if <see cref="!:Syncfusion.WinForms.Controls.ToolTip.ToolTipItem.EnableSeparator"/> is true.
            </summary>
        </member>
        <member name="P:Syncfusion.WinForms.Controls.Styles.ToolTipVisualStyle.SeparatorStyle">
            <summary>
            Gets or sets the separator style of the <see cref="T:Syncfusion.WinForms.Controls.ToolTipItem"/> to draw separator,
            if <see cref="!:Syncfusion.WinForms.Controls.ToolTip.ToolTipItem.EnableSeparator"/> is true.
            </summary>
        </member>
        <member name="P:Syncfusion.WinForms.Controls.Styles.ToolTipVisualStyle.SeparatorPattern">
            <summary>
            Gets or sets the separator pattern of the <see cref="T:Syncfusion.WinForms.Controls.ToolTipItem"/> to draw separator,
            if <see cref="!:Syncfusion.WinForms.Controls.ToolTip.ToolTipItem.EnableSeparator"/> is true, 
            when <see cref="!:Syncfusion.WinForms.Controls.ToolTip.ToolTipItem.Style.SeparatorStyle"/> is set as Custom.
            </summary>
        </member>
        <member name="P:Syncfusion.WinForms.Controls.Styles.ToolTipVisualStyle.ImageAlignment">
            <summary>
            Gets or sets the alignment of the image on the <see cref="T:Syncfusion.WinForms.Controls.ToolTipItem"/>.
            </summary>
            <remarks>
            If the <see cref="T:Syncfusion.WinForms.Controls.ToolTipItem"/> has both the text and image and <see cref="!:Syncfusion.WinForms.Controls.ToolTip.ToolTipImageAlignment"/> is set,
            the image will be positioned based on the alignment settings and text will be positioned just opposite alignment.
            i.e. if an image is aligned to left, text will be aligned to right position.
            </remarks>
        </member>
        <member name="P:Syncfusion.WinForms.Controls.Styles.ToolTipVisualStyle.ImageSize">
            <summary>
            Gets or sets the size of the <see cref="!:Syncfusion.WinForms.Controls.ToolTip.ToolTipItem.Image"/>.
            </summary>
        </member>
        <member name="P:Syncfusion.WinForms.Controls.Styles.ToolTipVisualStyle.ImageToTextOffset">
            <summary>
            Gets or sets the offset space between the image and text of the tooltip item.
            </summary>
        </member>
        <member name="P:Syncfusion.WinForms.Controls.Styles.ToolTipVisualStyle.HasSeparatorColor">
            <summary>
            Gets a value indicating whether the <see cref="P:Syncfusion.WinForms.Controls.Styles.ToolTipVisualStyle.SeparatorColor"/> 
            property has been modified for the current object.
            </summary>
        </member>
        <member name="P:Syncfusion.WinForms.Controls.Styles.ToolTipVisualStyle.HasSeparatorStyle">
            <summary>
            Gets a value indicating whether the <see cref="P:Syncfusion.WinForms.Controls.Styles.ToolTipVisualStyle.SeparatorStyle"/> 
            property has been modified for the current object.
            </summary>
        </member>
        <member name="P:Syncfusion.WinForms.Controls.Styles.ToolTipVisualStyle.HasSeparatorPattern">
            <summary>
            Gets a value indicating whether the <see cref="P:Syncfusion.WinForms.Controls.Styles.ToolTipVisualStyle.SeparatorPattern"/> 
            property has been modified for the current object.
            </summary>
        </member>
        <member name="P:Syncfusion.WinForms.Controls.Styles.ToolTipVisualStyle.HasForeColor">
            <summary>
            Gets a value indicating whether the <see cref="P:Syncfusion.WinForms.Controls.Styles.ToolTipVisualStyle.ForeColor"/> 
            property has been modified for the current object.
            </summary>
        </member>
        <member name="P:Syncfusion.WinForms.Controls.Styles.ToolTipVisualStyle.HasBackColor">
            <summary>
            Gets a value indicating whether the <see cref="P:Syncfusion.WinForms.Controls.Styles.ToolTipVisualStyle.BackColor"/> 
            property has been modified for the current object.
            </summary>
        </member>
        <member name="P:Syncfusion.WinForms.Controls.Styles.ToolTipVisualStyle.HasFont">
            <summary>
            Gets a value indicating whether the <see cref="P:Syncfusion.WinForms.Controls.Styles.ToolTipVisualStyle.Font"/> 
            property has been modified for the current object.
            </summary>
        </member>
        <member name="P:Syncfusion.WinForms.Controls.Styles.ToolTipVisualStyle.HasTextAlignment">
            <summary>
            Gets a value indicating whether the <see cref="P:Syncfusion.WinForms.Controls.Styles.ToolTipVisualStyle.TextAlignment"/> 
            property has been modified for the current object.
            </summary>
        </member>
        <member name="P:Syncfusion.WinForms.Controls.Styles.ToolTipVisualStyle.HasGradientBrush">
            <summary>
            Gets a value indicating whether the <see cref="P:Syncfusion.WinForms.Controls.Styles.ToolTipVisualStyle.GradientBrush"/> 
            property has been modified for the current object.
            </summary>
        </member>
        <member name="P:Syncfusion.WinForms.Controls.Styles.ToolTipVisualStyle.HasImageAlignment">
            <summary>
            Gets a value indicating whether the <see cref="P:Syncfusion.WinForms.Controls.Styles.ToolTipVisualStyle.ImageAlignment"/> 
            property has been modified for the current object.
            </summary>
        </member>
        <member name="P:Syncfusion.WinForms.Controls.Styles.ToolTipVisualStyle.HasImageSize">
            <summary>
            Gets a value indicating whether the <see cref="P:Syncfusion.WinForms.Controls.Styles.ToolTipVisualStyle.ImageSize"/> 
            property has been modified for the current object.
            </summary>
        </member>
        <member name="P:Syncfusion.WinForms.Controls.Styles.ToolTipVisualStyle.HasImageToTextOffset">
            <summary>
            Gets a value indicating whether the <see cref="P:Syncfusion.WinForms.Controls.Styles.ToolTipVisualStyle.ImageToTextOffset"/> 
            property has been modified for the current object.
            </summary>
        </member>
        <member name="P:Syncfusion.WinForms.Controls.Styles.ToolTipVisualStyle.BorderColor">
            <summary>
            Gets or sets the border color of the ToolTipInfo.
            </summary>
        </member>
        <member name="P:Syncfusion.WinForms.Controls.Styles.ToolTipVisualStyle.BeakBackColor">
            <summary>
            Gets or sets the beak back color of the ToolTipInfo.
            </summary>
        </member>
        <member name="T:Syncfusion.WinForms.Controls.Styles.ToolTipVisualStyleInfoSubObjectIdentity">
            <summary>
            Provides style identity information for nested expandable objects of the ToolTipVisualStyle class.
            </summary>
        </member>
        <member name="M:Syncfusion.WinForms.Controls.Styles.ToolTipVisualStyleInfoSubObjectIdentity.#ctor(Syncfusion.WinForms.Core.Styles.StyleInfoBase,Syncfusion.WinForms.Core.Styles.StyleInfoProperty)">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.WinForms.Controls.Styles.ToolTipVisualStyleInfoSubObjectIdentity"/> class.
            </summary>
            <param name="owner">The <see cref="!:Syncfusion.Styles.StyleInfoBase"/> that owns this sub-object.</param>
            <param name="sip">The <see cref="!:Syncfusion.Styles.StyleInfoProperty"/> descriptor for this expandable sub-object.</param>
        </member>
        <member name="T:Syncfusion.WinForms.Controls.Events.ToolTipShowingEventHandler">
            <summary>
            Represents the method that will handles the <see cref="E:Syncfusion.WinForms.Controls.SfToolTip.ToolTipShowing"/> event.
            </summary>
            <param name="sender">The sender that contains the v<see cref="T:Syncfusion.WinForms.Controls.SfToolTip"/>.</param>
            <param name="e">An <see cref="T:Syncfusion.WinForms.Controls.Events.ToolTipShowingEventArgs"/> object that contains event data.</param>
        </member>
        <member name="T:Syncfusion.WinForms.Controls.Events.ToolTipShownEventHandler">
            <summary>
            Represents the method that will handles the <see cref="E:Syncfusion.WinForms.Controls.SfToolTip.ToolTipShown"/> event.
            </summary>
            <param name="sender">The Sender that contains the v<see cref="T:Syncfusion.WinForms.Controls.SfToolTip"/>.</param>
            <param name="e">An <see cref="T:Syncfusion.WinForms.Controls.Events.ToolTipShownEventArgs"/> object that contains event data.</param>
        </member>
        <member name="T:Syncfusion.WinForms.Controls.Events.DrawToolTipItemEventHandler">
            <summary>
            Represents the method that will handle the <see cref="E:Syncfusion.WinForms.Controls.SfToolTip.DrawToolTipItem"/> event.
            </summary>
            <param name="sender">The sender that contains the v<see cref="T:Syncfusion.WinForms.Controls.SfToolTip"/>.</param>
            <param name="e">An <see cref="T:Syncfusion.WinForms.Controls.Events.DrawToolTipItemEventArgs"/> object that contains event data.</param>
        </member>
        <member name="T:Syncfusion.WinForms.Controls.Events.ToolTipShowingEventArgs">
            <summary>
            Provides data about the cancelable <see cref="E:Syncfusion.WinForms.Controls.SfToolTip.ToolTipShowing"/> event when the tooltip is showing.
            </summary>
            <remarks>
            To abort the showing of tooltip, set <see cref="T:System.ComponentModel.CancelEventArgs.Cancel"/> to True.
            <para/>
            To change the <see cref="T:Syncfusion.WinForms.Controls.ToolTipInfo"/> of the tooltip,
            use the <see cref="P:Syncfusion.WinForms.Controls.Events.ToolTipShowingEventArgs.ToolTipInfo"/> property.
            <para/>
            To change the location of the tooltip, use the <see cref="P:Syncfusion.WinForms.Controls.Events.ToolTipShowingEventArgs.Location"/> property.
            <para/>
            In order to set the location or ToolTipInfo of the tooltip, then the <see cref="!:Syncfusion.WinForms.Controls.Events.ToolTipShowingEventArgs.Handled"/> must be set to true.
            </remarks>
        </member>
        <member name="F:Syncfusion.WinForms.Controls.Events.ToolTipShowingEventArgs.toolTipInfo">
            <summary>
            The ToolTipInfo of the tooltip.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Controls.Events.ToolTipShowingEventArgs.location">
            <summary>
            The location of the tooltip.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Controls.Events.ToolTipShowingEventArgs.control">
            <summary>
            The control which shows the tooltip.
            </summary>
        </member>
        <member name="M:Syncfusion.WinForms.Controls.Events.ToolTipShowingEventArgs.#ctor(System.Windows.Forms.Control,Syncfusion.WinForms.Controls.ToolTipInfo,System.Drawing.Point)">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.WinForms.Controls.Events.ToolTipShowingEventArgs"/> class.
            </summary>
            <param name="control">The control which shows the tooltip.</param>
            <param name="toolTipInfo">The <see cref="T:Syncfusion.WinForms.Controls.ToolTipInfo"/> of the tooltip to be shown.</param>
            <param name="location">The location of the that the tooltip is set to be shown.</param>
        </member>
        <member name="P:Syncfusion.WinForms.Controls.Events.ToolTipShowingEventArgs.Control">
            <summary>
            Gets a control which shows the tooltip.
            </summary>
        </member>
        <member name="P:Syncfusion.WinForms.Controls.Events.ToolTipShowingEventArgs.ToolTipInfo">
            <summary>
            Gets or sets the specified <see cref="T:Syncfusion.WinForms.Controls.ToolTipInfo"/> of the tooltip.
            </summary>
        </member>
        <member name="P:Syncfusion.WinForms.Controls.Events.ToolTipShowingEventArgs.Location">
            <summary>
            Gets or sets the location that the tooltip is to be shown.
            </summary>
        </member>
        <member name="T:Syncfusion.WinForms.Controls.Events.ToolTipShownEventArgs">
            <summary>
            Provides data sbout the <see cref="E:Syncfusion.WinForms.Controls.SfToolTip.ToolTipShown"/> event after the tooltip is shown.
            </summary>
            <remarks>
            The <see cref="T:Syncfusion.WinForms.Controls.ToolTipInfo"/> of the tooltip can be from <see cref="P:Syncfusion.WinForms.Controls.Events.ToolTipShownEventArgs.ToolTipInfo"/> property.
            <para/>
            The location that the tooltip was shown can be get from <see cref="P:Syncfusion.WinForms.Controls.Events.ToolTipShownEventArgs.Location"/> property.
            </remarks>
        </member>
        <member name="F:Syncfusion.WinForms.Controls.Events.ToolTipShownEventArgs.control">
            <summary>
            The control which shown the tooltip.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Controls.Events.ToolTipShownEventArgs.toolTipInfo">
            <summary>
            The ToolTipInfo displayed in the tooltip.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Controls.Events.ToolTipShownEventArgs.location">
            <summary>
            The location that the tooltip was shown.
            </summary>
        </member>
        <member name="M:Syncfusion.WinForms.Controls.Events.ToolTipShownEventArgs.#ctor(System.Windows.Forms.Control,Syncfusion.WinForms.Controls.ToolTipInfo,System.Drawing.Point)">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.WinForms.Controls.Events.ToolTipShownEventArgs"/> class.
            </summary>
            <param name="control">The control which shown the tooltip.</param>
            <param name="toolTipInfo">The <see cref="T:Syncfusion.WinForms.Controls.ToolTipInfo"/> of the tooltip shown.</param>
            <param name="location">The location that the tooltip was shown.</param>
        </member>
        <member name="P:Syncfusion.WinForms.Controls.Events.ToolTipShownEventArgs.Control">
            <summary>
            Gets a control which shown tooltip.
            </summary>
        </member>
        <member name="P:Syncfusion.WinForms.Controls.Events.ToolTipShownEventArgs.ToolTipInfo">
            <summary>
            Gets the <see cref="T:Syncfusion.WinForms.Controls.ToolTipInfo"/> of the shown tooltip.
            </summary>
        </member>
        <member name="P:Syncfusion.WinForms.Controls.Events.ToolTipShownEventArgs.Location">
            <summary>
            Gets the location that the tooltip was shown.
            </summary>
        </member>
        <member name="T:Syncfusion.WinForms.Controls.Events.DrawToolTipItemEventArgs">
            <summary>
            Provides data about the <see cref="E:Syncfusion.WinForms.Controls.SfToolTip.DrawToolTipItem"/> event on drawing the tooltip item.
            </summary>
            <remarks>
            To abort the default drawing of the tooltip item, set <see cref="!:Syncfusion.WinForms.Controls.Events.DrawToolTipItemEventArgs.Cancel"/> property to true.
            </remarks>
        </member>
        <member name="F:Syncfusion.WinForms.Controls.Events.DrawToolTipItemEventArgs.graphics">
            <summary>
            The graphics of the tooltip control.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Controls.Events.DrawToolTipItemEventArgs.toolTipItemRectangle">
            <summary>
            The rectangle of the tooltip item.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Controls.Events.DrawToolTipItemEventArgs.toolTipItem">
            <summary>
            The tooltip item.
            </summary>
        </member>
        <member name="M:Syncfusion.WinForms.Controls.Events.DrawToolTipItemEventArgs.#ctor(System.Drawing.Graphics,System.Drawing.Rectangle,Syncfusion.WinForms.Controls.ToolTipItem)">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.WinForms.Controls.Events.DrawToolTipItemEventArgs"/> class.
            </summary>
            <param name="graphics">An <see cref="T:System.Drawing.Graphics"/> object that contains graphics data of tooltip.</param>
            <param name="toolTipItemRectangle">The rectangle of the tooltip item.</param>
            <param name="toolTipItem">An <see cref="T:Syncfusion.WinForms.Controls.ToolTipItem"/> object.</param>
        </member>
        <member name="P:Syncfusion.WinForms.Controls.Events.DrawToolTipItemEventArgs.Graphics">
            <summary>
            Gets the graphics of the tooltip.
            </summary>
        </member>
        <member name="P:Syncfusion.WinForms.Controls.Events.DrawToolTipItemEventArgs.ToolTipItemRectangle">
            <summary>
            Gets the rectangle of the tooltip item.
            </summary>
        </member>
        <member name="P:Syncfusion.WinForms.Controls.Events.DrawToolTipItemEventArgs.ToolTipItem">
            <summary>
            Gets the <see cref="T:Syncfusion.WinForms.Controls.ToolTipItem"/> to be drawn.
            </summary>
        </member>
        <member name="T:Syncfusion.WinForms.Controls.Utils.ToolTipInfoUITypeEditor">
            <summary>
            Provide a user interface for representing and editing the values of <see cref="T:Syncfusion.WinForms.Controls.ToolTipInfo"/> objects.
            </summary>
        </member>
        <member name="M:Syncfusion.WinForms.Controls.Utils.ToolTipInfoUITypeEditor.GetEditStyle(System.ComponentModel.ITypeDescriptorContext)">
            <summary>
            Gets the editor style used by the EditValue method.
            </summary>
            <param name="context">An <see cref="T:System.ComponentModel.ITypeDescriptorContext"/> that can be used to gain additional context information.</param>
            <returns>A <see cref="T:System.Drawing.Design.UITypeEditorEditStyle"/> value that indicates the style of editor used by the EditValue method.
            If the <see cref="T:System.Drawing.Design.UITypeEditor"/> does not support this method, then it will return None.</returns>
        </member>
        <member name="M:Syncfusion.WinForms.Controls.Utils.ToolTipInfoUITypeEditor.EditValue(System.ComponentModel.ITypeDescriptorContext,System.IServiceProvider,System.Object)">
            <summary>
            Edits the specified object's value using the editor style indicated by the 
            <see cref="!:Syncfusion.WinForms.Controls.ToolTipInfoUITypeEditor.GetEditStyle(ITypeDescriptorContext)"/> method.
            </summary>
            <param name="context">An <see cref="T:System.ComponentModel.ITypeDescriptorContext"/> that can be used to gain additional context information.</param>
            <param name="provider">An <see cref="T:System.IServiceProvider"/> that this editor can use to obtain services.</param>
            <param name="value">The object to edit.</param>
            <returns>The new value of the object. If the value of the object has not changed, this should return the same object it was passed.</returns>
        </member>
        <member name="T:Syncfusion.WinForms.Controls.ToolTipEditorForm">
            <summary>
            Provides a window for editing the <see cref="T:Syncfusion.WinForms.Controls.ToolTipInfo"/> objects.
            </summary>
            <summary>
            Provides a window for editing the <see cref="T:Syncfusion.WinForms.Controls.ToolTipInfo"/> objects.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Controls.ToolTipEditorForm.propertyGrid">
            <summary>
            The property grid for showing the properties of ToolTipInfo.
            </summary>
        </member>
        <member name="M:Syncfusion.WinForms.Controls.ToolTipEditorForm.#ctor(Syncfusion.WinForms.Controls.ToolTipInfo,System.IServiceProvider)">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.WinForms.Controls.ToolTipEditorForm"/> class.
            </summary>
            <param name="toolTipInfo">An object of <see cref="T:Syncfusion.WinForms.Controls.ToolTipInfo"/>.</param>
            <param name="provider">An object of <see cref="T:System.IServiceProvider"/>.</param>
        </member>
        <member name="M:Syncfusion.WinForms.Controls.ToolTipEditorForm.InitializeEditorForm(Syncfusion.WinForms.Controls.ToolTipInfo,System.IServiceProvider)">
            <summary>
            Initializes the design surface of the ToolTipEditorForm with related ToolTipInfo.
            </summary>
            <param name="toolTipInfo">An object of <see cref="T:Syncfusion.WinForms.Controls.ToolTipInfo"/>.</param>
            <param name="provider">An object of <see cref="T:System.IServiceProvider"/>.</param>
        </member>
        <member name="M:Syncfusion.WinForms.Controls.ToolTipEditorForm.OnOKButtonClick(System.Object,System.EventArgs)">
            <summary>
            Occurs when OK button in the ToolTipEditorForm is clicked.
            </summary>
            <param name="sender">The sender that contains the OK button.</param>
            <param name="e">An object of <see cref="T:System.EventArgs"/> that contains event data.</param>
        </member>
        <member name="M:Syncfusion.WinForms.Controls.ToolTipEditorForm.OnCancelButtonClick(System.Object,System.EventArgs)">
            <summary>
            Occurs when Cancel button in the ToolTipEditorForm is clicked.
            </summary>
            <param name="sender">The sender that contains the Cancel button.</param>
            <param name="e">An object of <see cref="T:System.EventArgs"/> that contains event data.</param>
        </member>
        <member name="F:Syncfusion.WinForms.Controls.ToolTipEditorForm.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Controls.ToolTipEditorForm.designPanel">
            <summary>
            The design panel of the ToolTipEditorForm.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Controls.ToolTipEditorForm.buttonPanel">
            <summary>
            The button panel of the ToolTipEditorForm.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Controls.ToolTipEditorForm.cancelButton">
            <summary>
            The Cancel button of the ToolTipEditorForm.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Controls.ToolTipEditorForm.okButton">
            <summary>
            The Ok button of the ToolTipEditorForm.
            </summary>
        </member>
        <member name="M:Syncfusion.WinForms.Controls.ToolTipEditorForm.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:Syncfusion.WinForms.Controls.ToolTipEditorForm.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="P:Syncfusion.WinForms.Controls.ToolTipEditorForm.ToolTipInfo">
            <summary>
            Gets or sets the ToolTipInfo of the editor form.
            </summary>
        </member>
        <member name="T:Syncfusion.WinForms.Core.ThemeHelper">
            <summary>
            A helper class that provides the functionality to merge the styles from the XML configuration to the element style.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Core.ThemeHelper.xmlResources">
            <summary>
            Gets or sets the themes collection.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Core.ThemeHelper.assemblyCollection">
            <summary>
            Gets or sets the assemblies to read the image resources.
            </summary>
        </member>
        <member name="M:Syncfusion.WinForms.Core.ThemeHelper.LoadAssembly(System.Reflection.Assembly)">
            <summary>
            Loads the assembly to register the theme XML configured files.
            </summary>
            <param name="assembly">An assembly that has the theme XML configuration file.</param>
        </member>
        <member name="M:Syncfusion.WinForms.Core.ThemeHelper.ReadControlTags(Syncfusion.WinForms.Core.Styles.IThemeProvider,System.Object,System.Xml.XmlReader)">
            <summary>
            Reads the control tag elements.
            </summary>
            <param name="provider">The <see cref="T:Syncfusion.WinForms.Core.Styles.IThemeProvider"/>.</param>
            <param name="visualStyles">The object that needs to be merged.</param>
            <param name="xmlReader">The xml reader.</param>
        </member>
        <member name="M:Syncfusion.WinForms.Core.ThemeHelper.MergeStyle(Syncfusion.WinForms.Core.Styles.IThemeProvider,System.Object)">
            <summary>
            Combines the styles defined in the XML document to the target style.
            </summary>
            <param name="provider">The <see cref="T:Syncfusion.WinForms.Core.Styles.IThemeProvider"/></param>
            <param name="visualStyles">The target object to combine.</param>
        </member>
        <member name="M:Syncfusion.WinForms.Core.ThemeHelper.ReadPropertiesTag(Syncfusion.WinForms.Core.Styles.IThemeProvider,System.Xml.XmlReader)">
            <summary>
            Reads the properties tag elements.
            </summary>
            <param name="provider">The <see cref="T:Syncfusion.WinForms.Core.Styles.IThemeProvider"/>.</param>
            <param name="xmlReader">The xml reader.</param>
        </member>
        <member name="M:Syncfusion.WinForms.Core.ThemeHelper.ReadElementTags(Syncfusion.WinForms.Core.Styles.IThemeProvider,System.Object,System.Xml.XmlReader)">
            <summary>
            Reads the element tag attributes.
            </summary>
            <param name="provider">The <see cref="T:Syncfusion.WinForms.Core.Styles.IThemeProvider"/>.</param>
            <param name="visualStyles">The object that needs to be merged.</param>
            <param name="xmlReader">The xml reader.</param>
        </member>
        <member name="M:Syncfusion.WinForms.Core.ThemeHelper.ReadAttributesTags(Syncfusion.WinForms.Core.Styles.IThemeProvider,System.Object,Syncfusion.WinForms.Core.Styles.StyleInfoBase,System.Xml.XmlReader)">
            <summary>
            Reads the Attributes of the Elements.
            </summary>
            <param name="provider">The <see cref="T:Syncfusion.WinForms.Core.Styles.IThemeProvider"/>.</param>
            <param name="visualStyles">The object that needs to be merged.</param>
            <param name="instance">The <see cref="T:Syncfusion.WinForms.Core.Styles.StyleInfoBase"/> object.</param>
            <param name="xmlReader">The xml reader.</param>
        </member>
        <member name="M:Syncfusion.WinForms.Core.ThemeHelper.ReadAttributesTags(Syncfusion.WinForms.Core.Styles.IThemeProvider,System.Object,System.Xml.XmlReader)">
            <summary>
            Reads the Attributes of the Elements.
            </summary>
            <param name="provider">The <see cref="T:Syncfusion.WinForms.Core.Styles.IThemeProvider"/>.</param>
            <param name="visualStyles">The object that needs to be merged.</param>
            <param name="xmlReader">The xml reader.</param>
        </member>
        <member name="M:Syncfusion.WinForms.Core.ThemeHelper.ReadInnerElements(Syncfusion.WinForms.Core.Styles.IThemeProvider,Syncfusion.WinForms.Core.Styles.StyleInfoBase,System.Xml.XmlReader)">
            <summary>
            Read the inner elements of the XmlReader.
            </summary>
            <param name="provider">The provider.</param>
            <param name="visualStyles">The style info object.</param>
            <param name="xmlReader">The XmlReader.</param>
        </member>
        <member name="M:Syncfusion.WinForms.Core.ThemeHelper.ReadAttributes(Syncfusion.WinForms.Core.Styles.IThemeProvider,System.Object,System.Xml.XmlReader)">
            <summary>
            Reads the Attributes of the Elements tags of the control.
            </summary>
            <param name="provider">The <see cref="T:Syncfusion.WinForms.Core.Styles.IThemeProvider"/>.</param>
            <param name="instance">The object that needs to be merged.</param>
            <param name="xmlReader">The xml reader.</param>
        </member>
        <member name="M:Syncfusion.WinForms.Core.ThemeHelper.SetProperty(Syncfusion.WinForms.Core.Styles.IThemeProvider,System.Object,System.Reflection.PropertyInfo,System.Xml.XmlReader)">
            <summary>
            Sets the style objects properties from the XML attribute.
            </summary>
            <param name="provider">The <see cref="T:Syncfusion.WinForms.Core.Styles.IThemeProvider"/>.</param>
            <param name="instance">The object that needs to be merged.</param>
            <param name="property">The property to set the property value of object.</param>
            <param name="reader">The XmlReader.</param>
        </member>
        <member name="M:Syncfusion.WinForms.Core.ThemeHelper.GetColor(System.String)">
            <summary>
            Gets the color.
            </summary>
            <param name="colorAttributeValue">The attribute value.</param>
            <returns>The color.</returns>
        </member>
        <member name="M:Syncfusion.WinForms.Core.ThemeHelper.IsHexDecimalColorCode(System.String)">
            <summary>
            Checks whether given string is Hex color code or not.
            </summary>
            <param name="colorAttributeValue">The Hex color code string.</param>
            <returns>True if given string is Hex color code otherwise false.</returns>
        </member>
        <member name="M:Syncfusion.WinForms.Core.ThemeHelper.GetImage(Syncfusion.WinForms.Core.Styles.IThemeProvider,System.String,System.String)">
            <summary>
            Gets the image from the XML configured file.
            </summary>
            <param name="provider">The provider.</param>
            <param name="imageAttribute">The image resource file name.</param>
            <param name="themeName">Name of the theme.</param>
            <returns>An image.</returns>
        </member>
        <member name="M:Syncfusion.WinForms.Core.ThemeHelper.GetImageFromAssembly(System.Reflection.Assembly,System.String)">
            <summary>
            Get the image from given assembly.
            </summary>
            <param name="assembly">The <see cref="T:System.Reflection.Assembly"/> used to get the image.</param>
            <param name="imageName">The string value contains the image name.</param>
            <returns>Returns the image.</returns>
        </member>
        <member name="T:Syncfusion.WinForms.Controls.SfSkinManager">
            <summary>
            Applies and manages the themes for the controls and components which are derived from the <see cref="!:Syncfusion.WinForms.Core.IThemeProvider"/>.
            </summary>
            <remarks>
            The <see cref="T:Syncfusion.WinForms.Controls.SfSkinManager"/> applies the themes for the controls or components of <see cref="!:Syncfusion.WinForms.Core.IThemeProvider"/> type.
            The <b>ThemeName</b> of the <see cref="T:Syncfusion.WinForms.Controls.SfSkinManager"/> must be available in <see cref="T:Syncfusion.WinForms.Core.ThemeHelper"/>,
            Otherwise the default theme settings of control or component will be applied.
            </remarks>
        </member>
        <member name="F:Syncfusion.WinForms.Controls.SfSkinManager.component">
            <summary>
            The component of the skin manager.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.Controls.SfSkinManager.themeName">
            <summary>
            The string contains the theme name of the skin manager.
            </summary>
        </member>
        <member name="M:Syncfusion.WinForms.Controls.SfSkinManager.#ctor(System.ComponentModel.IContainer)">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.WinForms.Controls.SfSkinManager"/> class and add this to the specified container.
            </summary>
            <param name="container">The <see cref="T:System.ComponentModel.IContainer"/> control.</param>
            <remarks>This will allow to create only one <see cref="T:Syncfusion.WinForms.Controls.SfSkinManager"/> instance in a given container.</remarks>
        </member>
        <member name="M:Syncfusion.WinForms.Controls.SfSkinManager.LoadAssembly(System.Reflection.Assembly)">
            <summary>
            Loads the assembly to register the theme XML configured files.
            </summary>
            <param name="assembly">An assembly that has the theme XML configuration file.</param>
        </member>
        <member name="M:Syncfusion.WinForms.Controls.SfSkinManager.SetTheme(System.ComponentModel.Component,System.String)">
            <summary>
            Sets the theme to given control and its inner controls which are derived from the <see cref="!:Syncfusion.WinForms.Core.IThemeProvider"/>. 
            </summary>
            <param name="component">The <see cref="T:System.ComponentModel.Component"/> to set the theme.</param>
            <param name="themeName">A name of the theme to be set to control.</param>
            <remarks>This method will set the theme to controls which is derived from <see cref="!:Syncfusion.WinForms.Core.IThemeProvider"/>.</remarks>
        </member>
        <member name="M:Syncfusion.WinForms.Controls.SfSkinManager.Dispose(System.Boolean)">
            <summary>
            Releases all resources used by the <see cref="T:Syncfusion.WinForms.Controls.SfSkinManager"/> class.
            </summary>
            <param name="disposing">True to release both managed and unmanaged resources; 
            false to release only unmanaged resources.
            </param>
        </member>
        <member name="M:Syncfusion.WinForms.Controls.SfSkinManager.ApplyThemeToControls(System.Windows.Forms.Control,System.String)">
            <summary>
            Sets the theme to given control and its inner controls which are derived from the <see cref="!:Syncfusion.WinForms.Core.IThemeProvider"/>.
            </summary>
            <param name="control">The <see cref="T:System.Windows.Forms.Control"/> to set the theme.</param>
            <param name="themeName">A name of the theme to be set to control.</param>
            <remarks>This method will set the theme to controls which is derived from <see cref="!:Syncfusion.WinForms.Core.IThemeProvider"/>.</remarks>
        </member>
        <member name="M:Syncfusion.WinForms.Controls.SfSkinManager.ApplyThemeToComponents(System.Windows.Forms.Control,System.String)">
            <summary>
            Sets the theme to the <see cref="T:System.ComponentModel.Components"/> of the given control.
            </summary>
            <param name="control">The <see cref="T:System.Windows.Forms.Control"/> to set the theme.</param>
            <param name="themeName">A name of the theme to be set to control.</param>
            <remarks>
            The components of the control will not be available in the <see cref="T:System.Windows.Forms.Control.Controls"/> collection, so by using the
            reflection, components of the control can get and theme can be set to that component which is derived from the . This method will set the theme to 
            components which is derived from <see cref="!:Syncfusion.WinForms.Core.IThemeProvider"/>.
            </remarks>
        </member>
        <member name="M:Syncfusion.WinForms.Controls.SfSkinManager.OnControlAdded(System.Object,System.Windows.Forms.ControlEventArgs)">
            <summary>
            Occurs when new control is added to the <b>control</b> which has the theme settings that is set by the <see cref="T:Syncfusion.WinForms.Controls.SfSkinManager"/>.
            </summary>
            <param name="sender">The sender.</param>
            <param name="e">A <see cref="T:System.Windows.Forms.ControlEventArgs"/> that contains events data.</param>
        </member>
        <member name="M:Syncfusion.WinForms.Controls.SfSkinManager.OnControlRemoved(System.Object,System.Windows.Forms.ControlEventArgs)">
            <summary>
            Occurs when any control is removed from the <b>control</b> which has the theme settings that is set by the <see cref="T:Syncfusion.WinForms.Controls.SfSkinManager"/>.
            </summary>
            <param name="sender">The sender.</param>
            <param name="e">A <see cref="T:System.Windows.Forms.ControlEventArgs"/> contains events data.</param>
        </member>
        <member name="M:Syncfusion.WinForms.Controls.SfSkinManager.UnWireEvents(System.Windows.Forms.Control)">
            <summary>
            Unwires the <see cref="T:System.Windows.Forms.Control.ControlAdded"/> and <see cref="T:System.Windows.Forms.Control.ControlRemoved"/>
            events of the given controls.
            </summary>
            <param name="control">The control.</param>
        </member>
        <member name="M:Syncfusion.WinForms.Controls.SfSkinManager.WireEvents(System.Windows.Forms.Control)">
            <summary>
            Wires the <see cref="T:System.Windows.Forms.Control.ControlAdded"/> and <see cref="T:System.Windows.Forms.Control.ControlRemoved"/> 
            events of the given control and its child controls.
            </summary>
            <param name="control">The control.</param>
        </member>
        <member name="P:Syncfusion.WinForms.Controls.SfSkinManager.Component">
            <summary>
            Gets or sets the control or component to apply the theme settings.
            </summary>
        </member>
        <member name="P:Syncfusion.WinForms.Controls.SfSkinManager.ThemeName">
            <summary>
            Gets or sets a name of the theme to be applied to control.
            </summary>
            <remarks>The theme name must be available in <see cref="T:Syncfusion.WinForms.Core.ThemeHelper"/>, Otherwise the 
            default theme settings will be applied to the control of the <see cref="T:Syncfusion.WinForms.Controls.SfSkinManager"/>.</remarks>
        </member>
    </members>
</doc>
